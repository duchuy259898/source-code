/*
 * MstTechnicClassPanel.java
 *
 * Created on 2011/07/15, 11:01
 */

package com.geobeck.sosia.pos.hair.basicinfo.product;

import com.geobeck.sosia.pos.basicinfo.SelectSameNoData;
import com.geobeck.sosia.pos.swing.SelectTableCellRenderer;
import com.geobeck.sosia.pos.system.SystemInfo;
import com.geobeck.sosia.pos.util.MessageUtil;
import com.geobeck.sql.ConnectionWrapper;
import com.geobeck.swing.MessageDialog;
import com.geobeck.swing.SwingUtil;
import java.awt.*;
import java.sql.SQLException;
import java.util.logging.Level;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import com.geobeck.sosia.pos.search.account.*;
import com.geobeck.util.*;
import com.geobeck.sosia.pos.hair.report.util.*;
import com.geobeck.sosia.pos.master.customer.MstCustomer;
import com.geobeck.sosia.pos.search.customer.SearchCustomerDialog;
import com.geobeck.swing.CustomFilter;
import javax.swing.text.PlainDocument;

/**
 *
 * @author
 */
public class MstCustomerIntegrationPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx
{

    /** Creates new form MstTechnicClassPanel */
    public MstCustomerIntegrationPanel()
    {
        super();
        initComponents();
        addMouseCursorChange();
        //this.setSize(550, 680);
        this.setSize(830, 680);
        this.setPath("äÓñ{ê›íË >> å⁄ãqä÷òA");
        this.setTitle("å⁄ãqìùçá");
        this.setListener();
        this.init();
        SwingUtil.clearTable(mst_customer_integration);
        //SystemInfo.initGroupShopComponents(shop, 2);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        autoMailScrollPane = new javax.swing.JScrollPane();
        mst_customer_integration = new com.geobeck.swing.JTableEx();
        jPanel1 = new javax.swing.JPanel();
        technicClassNameLabel = new javax.swing.JLabel();
        outExcelButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        chkaddress = new javax.swing.JCheckBox();
        chkbirthday = new javax.swing.JCheckBox();
        chkpost = new javax.swing.JCheckBox();
        chkname = new javax.swing.JCheckBox();
        chktel1 = new javax.swing.JCheckBox();
        chktel2 = new javax.swing.JCheckBox();
        searchCustomerButton = new javax.swing.JButton();
        customerNo = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)customerNo.getDocument()).setDocumentFilter(
            new CustomFilter(15, CustomFilter.ALPHAMERIC));
        customerName1 = new com.geobeck.swing.JFormattedTextFieldEx();
        customerName2 = new com.geobeck.swing.JFormattedTextFieldEx();
        chkNotMember = new javax.swing.JCheckBox();

        autoMailScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        mst_customer_integration.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "å⁄ãqNO", "å⁄ãqñº", "óXï÷î‘çÜ", "èZèäÅiésãÊí¨ë∫Ç‹Ç≈Åj", "ìdòbî‘çÜ", "ågë—î‘çÜ", "ê∂îNåéì˙", "ëŒè€é“êî", "è⁄ç◊"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mst_customer_integration.setSelectionBackground(new java.awt.Color(220, 220, 220));
        mst_customer_integration.setSelectionForeground(new java.awt.Color(0, 0, 0));
        mst_customer_integration.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        mst_customer_integration.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(mst_customer_integration, SystemInfo.getTableHeaderRenderer());
        mst_customer_integration.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        this.initTableColumnWidth();
        SelectTableCellRenderer.setSelectTableCellRenderer(mst_customer_integration);
        mst_customer_integration.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mst_customer_integrationMouseReleased(evt);
            }
        });
        mst_customer_integration.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mst_customer_integrationKeyReleased(evt);
            }
        });
        autoMailScrollPane.setViewportView(mst_customer_integration);
        mst_customer_integration.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        mst_customer_integration.getAccessibleContext().setAccessibleParent(mst_customer_integration);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        technicClassNameLabel.setText("É`ÉFÉbÉNèåè");
        jPanel1.add(technicClassNameLabel);
        technicClassNameLabel.setBounds(40, 10, 70, 20);

        outExcelButton.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        outExcelButton.setBorderPainted(false);
        outExcelButton.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        outExcelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outExcelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(outExcelButton);
        outExcelButton.setBounds(690, 70, 92, 25);

        searchButton.setIcon(SystemInfo.getImageIcon("/button/search/search_off.jpg"));
        searchButton.setBorderPainted(false);
        searchButton.setPressedIcon(SystemInfo.getImageIcon("/button/search/search_on.jpg"));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchButton);
        searchButton.setBounds(590, 70, 92, 25);

        chkaddress.setText("èZèäÅiésãÊí¨ë∫Ç‹Ç≈Åj");
        chkaddress.setOpaque(false);
        chkaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkaddressActionPerformed(evt);
            }
        });
        jPanel1.add(chkaddress);
        chkaddress.setBounds(300, 10, 140, 20);

        chkbirthday.setText("ê∂îNåéì˙");
        chkbirthday.setOpaque(false);
        chkbirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbirthdayActionPerformed(evt);
            }
        });
        jPanel1.add(chkbirthday);
        chkbirthday.setBounds(300, 40, 80, 20);

        chkpost.setText("óXï÷î‘çÜ");
        chkpost.setOpaque(false);
        chkpost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkpostActionPerformed(evt);
            }
        });
        jPanel1.add(chkpost);
        chkpost.setBounds(210, 10, 80, 20);

        chkname.setText("éÅñº");
        chkname.setOpaque(false);
        chkname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chknameActionPerformed(evt);
            }
        });
        jPanel1.add(chkname);
        chkname.setBounds(140, 10, 80, 20);

        chktel1.setText("ìdòbî‘çÜ");
        chktel1.setOpaque(false);
        chktel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chktel1ActionPerformed(evt);
            }
        });
        jPanel1.add(chktel1);
        chktel1.setBounds(140, 40, 80, 20);

        chktel2.setText("ågë—î‘çÜ");
        chktel2.setOpaque(false);
        chktel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chktel2ActionPerformed(evt);
            }
        });
        jPanel1.add(chktel2);
        chktel2.setBounds(220, 40, 80, 20);

        searchCustomerButton.setIcon(SystemInfo.getImageIcon("/button/search/search_customer_off.jpg"));
        searchCustomerButton.setBorderPainted(false);
        searchCustomerButton.setPressedIcon(SystemInfo.getImageIcon("/button/search/search_customer_on.jpg"));
        searchCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustomerButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchCustomerButton);
        searchCustomerButton.setBounds(40, 80, 92, 25);

        customerNo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        customerNo.setColumns(15);
        customerNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                customerNoFocusLost(evt);
            }
        });
        customerNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customerNoKeyReleased(evt);
            }
        });
        jPanel1.add(customerNo);
        customerNo.setBounds(140, 80, 70, 25);

        customerName1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        customerName1.setEditable(false);
        customerName1.setInputKanji(true);
        jPanel1.add(customerName1);
        customerName1.setBounds(220, 80, 70, 25);

        customerName2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        customerName2.setEditable(false);
        customerName2.setInputKanji(true);
        jPanel1.add(customerName2);
        customerName2.setBounds(300, 80, 70, 25);

        chkNotMember.setText("îÒâÔàıÅiå⁄ãqNo. 0ÅjÇåüçıëŒè€Ç…ä‹ÇﬂÇÈ");
        chkNotMember.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkNotMember.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chkNotMember.setOpaque(false);
        jPanel1.add(chkNotMember);
        chkNotMember.setBounds(570, 33, 213, 20);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, autoMailScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(autoMailScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void outExcelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outExcelButtonActionPerformed
        outExcelButton.setCursor(null);
        reportOutPut();
    }//GEN-LAST:event_outExcelButtonActionPerformed

	private void mst_customer_integrationMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_mst_customer_integrationMouseReleased
	{//GEN-HEADEREND:event_mst_customer_integrationMouseReleased
		//this.changeCurrentData();
	}//GEN-LAST:event_mst_customer_integrationMouseReleased

	private void mst_customer_integrationKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_mst_customer_integrationKeyReleased
	{//GEN-HEADEREND:event_mst_customer_integrationKeyReleased
		//this.changeCurrentData();
	}//GEN-LAST:event_mst_customer_integrationKeyReleased

        private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
            // TODO add your handling code here:

                searchButton.setCursor(null);

                //åüçıèàóù
                this.searchProc();
                /*
                if (this.searchCostomer() == false)
                {
                    return;
                }

		if (0 < sa.size()) {
                    this.showCustomer();
                } else {
                    SwingUtil.clearTable(mst_customer_integration);

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(1112),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                }
                 *
                 */
            
        }//GEN-LAST:event_searchButtonActionPerformed

        private void chkaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkaddressActionPerformed
            // TODO add your handling code here:
}//GEN-LAST:event_chkaddressActionPerformed

        private void chkbirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbirthdayActionPerformed
            // TODO add your handling code here:
        }//GEN-LAST:event_chkbirthdayActionPerformed

        private void chkpostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkpostActionPerformed
            // TODO add your handling code here:
        }//GEN-LAST:event_chkpostActionPerformed

        private void chknameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chknameActionPerformed
            // TODO add your handling code here:
        }//GEN-LAST:event_chknameActionPerformed

        private void chktel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chktel1ActionPerformed
            // TODO add your handling code here:
        }//GEN-LAST:event_chktel1ActionPerformed

        private void chktel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chktel2ActionPerformed
            // TODO add your handling code here:
        }//GEN-LAST:event_chktel2ActionPerformed

        private void searchCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustomerButtonActionPerformed

            try {

                SystemInfo.getLogger().log(Level.INFO, "å⁄ãqåüçı");
                SearchCustomerDialog sc = new SearchCustomerDialog(parentFrame, true);
                sc.setShopID(SystemInfo.getCurrentShop().getShopID());
                sc.setVisible(true);

                if (sc.getSelectedCustomer() != null && !sc.getSelectedCustomer().getCustomerID().equals("")) {
                    customerNo.setText(sc.getSelectedCustomer().getCustomerNo());
                    customerName1.setText(sc.getSelectedCustomer().getCustomerName(0));
                    customerName2.setText(sc.getSelectedCustomer().getCustomerName(1));
                    targetCustomer = sc.getSelectedCustomer();
                }

                sc = null;

            } finally {
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }

        }//GEN-LAST:event_searchCustomerButtonActionPerformed

        private void customerNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_customerNoFocusLost
            this.setCustomer();
        }//GEN-LAST:event_customerNoFocusLost

        private void customerNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerNoKeyReleased
            if (evt.getKeyCode() == evt.VK_ENTER) {
                searchButton.requestFocusInWindow();
            }
        }//GEN-LAST:event_customerNoKeyReleased
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane autoMailScrollPane;
    private javax.swing.JCheckBox chkNotMember;
    private javax.swing.JCheckBox chkaddress;
    private javax.swing.JCheckBox chkbirthday;
    private javax.swing.JCheckBox chkname;
    private javax.swing.JCheckBox chkpost;
    private javax.swing.JCheckBox chktel1;
    private javax.swing.JCheckBox chktel2;
    private com.geobeck.swing.JFormattedTextFieldEx customerName1;
    private com.geobeck.swing.JFormattedTextFieldEx customerName2;
    private com.geobeck.swing.JFormattedTextFieldEx customerNo;
    private javax.swing.JPanel jPanel1;
    private com.geobeck.swing.JTableEx mst_customer_integration;
    private javax.swing.JButton outExcelButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchCustomerButton;
    private javax.swing.JLabel technicClassNameLabel;
    // End of variables declaration//GEN-END:variables

    protected SearchCostomer sa = new SearchCostomer();
    protected MstCustomer targetCustomer = null;
	
	/**
	 * É{É^ÉìÇ…É}ÉEÉXÉJÅ[É\ÉãÇ™èÊÇ¡ÇΩÇ∆Ç´Ç…ÉJÅ[É\ÉãÇïœçXÇ∑ÇÈÉCÉxÉìÉgÇí«â¡Ç∑ÇÈÅB
	 */
	private void addMouseCursorChange()
	{
            SystemInfo.addMouseCursorChange(searchButton);
            SystemInfo.addMouseCursorChange(outExcelButton);
            SystemInfo.addMouseCursorChange(searchCustomerButton);
	}

        /**
	 * èâä˙âªÇçsÇ§
	 */
	private void init()
	{
	}

	/**
	 * ÉRÉìÉ|Å[ÉlÉìÉgÇÃäeÉäÉXÉiÅ[ÇÉZÉbÉgÇ∑ÇÈÅB
	 */
	private void setListener()
	{
            customerNo.addKeyListener(SystemInfo.getMoveNextField());
            customerNo.addFocusListener(SystemInfo.getSelectText());
        }

        /**
	 * åüçıåãâ Çï\é¶Ç∑ÇÈÅB
	 */
	public void showCustomer()
	{
		DefaultTableModel model = (DefaultTableModel)mst_customer_integration.getModel();

		if( mst_customer_integration.getCellEditor() != null ) mst_customer_integration.getCellEditor().stopCellEditing();
		model.setRowCount(0);
		SwingUtil.clearTable(mst_customer_integration);

                for(CustomerData cd : sa)
		{
			model.addRow(new Object[]{
                            cd.getCustomerNo(),
                            cd.getCustomerName(),
                            cd.getPostalcode(),
                            cd.getAddress(),
                            cd.getPhoneNumber(),
                            cd.getCellularNumber(),
                            DateUtil.format(cd.getBirthday(), "yyyy/MM/dd"),
                            cd.getTargetNumber(),
                            getDetailButton(cd)
			});
		}
	}

         /**
         * ÉåÉ|Å[ÉgèoóÕÇçsÇ§
         */
        private void reportOutPut()
        {
            try {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

                    //å⁄ãqìùçá
                    this.customerIntegrationOutput();

            } finally {
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        }

       private void customerIntegrationOutput() {

            if (mst_customer_integration.getRowCount() == 0) {
                this.showMessageNoData();
                return;
            }

	    JExcelApi jx = new JExcelApi("å⁄ãqìùçá");
	    jx.setTemplateFile("/reports/å⁄ãqìùçá.xls");

            // ÉwÉbÉ_èoóÕ
            this.headerOutput(jx, 3, 3);

	    int outRow = 6;

	    // í«â¡çsêîÉZÉbÉg
	    jx.insertRow(outRow, mst_customer_integration.getRowCount() - 1);

	    // ÉfÅ[É^ÉZÉbÉg
            DefaultTableModel model = (DefaultTableModel)mst_customer_integration.getModel();
            for (int row = 0; row < mst_customer_integration.getRowCount(); row++) {
                for (int col = 0; col < mst_customer_integration.getColumnCount() - 1; col++) {
                    jx.setValue(col + 1, outRow, model.getValueAt(row, col));
                }
                outRow++;
            }

            //jx.removeRow(outRow);

	    jx.openWorkbook();
        }

        private void showMessageNoData() {

            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
        }

        private void headerOutput(JExcelApi jx, int row, int col) {

                String header = null;

                //éÅñº
                if (chkname.isSelected())
                {
                    header="éÅñº";
                }
                //óXï÷î‘çÜ
                if (chkpost.isSelected())
                {
                    if (header != null)
                    {
                        header+=", óXï÷î‘çÜ";
                    }
                    else
                    {
                        header="óXï÷î‘çÜ";
                    }
                }
                //èZèä
                if (chkaddress.isSelected())
                {
                    if (header != null)
                    {
                        header+=", èZèä";
                    }
                    else
                    {
                        header="èZèä";
                    }

                }
                //ìdòbî‘çÜ
                if (chktel1.isSelected())
                {
                    if (header != null)
                    {
                        header+=", ìdòbî‘çÜ";
                    }
                    else
                    {
                        header="ìdòbî‘çÜ";
                    }
                }
                 //ågë—î‘çÜ
                if (chktel2.isSelected())
                {
                    if (header != null)
                    {
                        header+=", ågë—î‘çÜ";
                    }
                    else
                    {
                        header="ågë—î‘çÜ";
                    }
                }
                //ê∂îNåéì˙
                if (chkbirthday.isSelected())
                {
                    if (header != null)
                    {
                        header+=", ê∂îNåéì˙";
                    }
                    else
                    {
                        header="ê∂îNåéì˙";
                    }
                }
                jx.setValue(col, row, header);
        }

         /**
	 * è⁄ç◊É{É^ÉìÇéÊìæÇ∑ÇÈ
	 */
	private JButton getDetailButton(final CustomerData ad)
	{
            JButton button = new JButton();
            button.setBorderPainted(false);
            button.setContentAreaFilled(false);

            button.setName("");
            button.setIcon(new javax.swing.ImageIcon(getClass().getResource(
                            "/images/" + SystemInfo.getSkinPackage() + "/button/common/detail_off.jpg")));
            button.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource(
                            "/images/" + SystemInfo.getSkinPackage() + "/button/common/detail_on.jpg")));

            button.setSize(48, 25);
            button.setEnabled(true);

            final Integer customerId = ad.getCustomerId();

            boolean name = false;
            boolean post = false;
            boolean address = false;
            boolean tel1 = false;
            boolean tel2 = false;
            boolean birthday = false;

            //éÅñº
            if (chkname.isSelected())
            {
                name = true;
            }
            //óXï÷î‘çÜ
            if (chkpost.isSelected())
            {
                post = true;
            }
            //èZèä
            if (chkaddress.isSelected())
            {
                address = true;
            }
            //ìdòbî‘çÜ
            if (chktel1.isSelected())
            {
                tel1 = true;
            }
            //ågë—î‘çÜ
            if (chktel2.isSelected())
            {
                tel2 = true;
            }

            //ê∂îNåéì˙
            if (chkbirthday.isSelected())
            {
                birthday = true;
            }

            final boolean fname =name;
            final boolean fpost =post;
            final boolean faddress =address;
            final boolean ftel1 =tel1;
            final boolean ftel2 =tel2;
            final boolean fbirthday =birthday;

            button.addActionListener(new java.awt.event.ActionListener()
            {
                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    try {

                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

                        //å⁄ãqìùçáâÊñ ÇåƒÇ—èoÇ∑
                        MstCustomerIntegrationDetailPanel cs = null;
                        cs = new MstCustomerIntegrationDetailPanel(customerId,
                                                                    fname,
                                                                    fpost,
                                                                    faddress,
                                                                    ftel1,
                                                                    ftel2,
                                                                    fbirthday,
                                                                    chkNotMember.isSelected());

                        SwingUtil.openAnchorDialog( parentFrame, true, cs, "å⁄ãqìùçá", SwingUtil.ANCHOR_HCENTER|SwingUtil.ANCHOR_VCENTER );
                        //((JDialog)cs.getParent().getParent().getParent().getParent()).dispose();
                        cs = null;
                        System.gc();

                        //åüçıèàóù
                        searchProc();

                    } finally {
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    }
                }
            });
            return button;
	}

        private void searchProc()
        {
            if (this.searchCostomer() == false)
            {
                return;
            }

            if (0 < sa.size()) {
                this.showCustomer();
            } else {
                SwingUtil.clearTable(mst_customer_integration);

                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(1112),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
            }
            return;
        }

        /**
	 * å⁄ãqåüçıèàóùÇçsÇ§ÅB
	 */
	public boolean searchCostomer()
	{
            boolean chkflg=false;
            try {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

		if (this.setSearchCondition() == false)
                {
                    MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(6003),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);

                    chkflg = false;
                }
                else
                {
                    ConnectionWrapper con = SystemInfo.getConnection();
                    //sa.setSortIndex(sort.getSelectedIndex());

                    //å⁄ãq
                    sa.setTargetCustomer(targetCustomer);

                    //îÒâÔàı
                    sa.setChkNotMember(chkNotMember.isSelected());

                    sa.load(con);

                    chkflg = true;
                }

            } catch(SQLException e) {
                SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            } finally {
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                return chkflg;
            }
	}

        /**
	 * åüçıèåèÇÉZÉbÉgÇ∑ÇÈÅB
	 */
	public boolean setSearchCondition()
	{
                boolean chkflg=false;
                sa.setName(false);
                sa.setPost(false);
                sa.setAddress(false);
                sa.setTel1(false);
                sa.setTel2(false);
                sa.setBirthday(false);
                sa.setTargetCustomer(null);
                
                //éÅñº
                if (chkname.isSelected())
                {
                    sa.setName(true);
                    chkflg=true;
                }

                //óXï÷î‘çÜ
                if (chkpost.isSelected())
                {
                    sa.setPost(true);
                    chkflg=true;
                }

                //èZèä
                if (chkaddress.isSelected())
                {
                    sa.setAddress(true);
                    chkflg=true;
                }

                //ìdòbî‘çÜ
                if (chktel1.isSelected())
                {
                    sa.setTel1(true);
                    chkflg=true;
                }

                 //ågë—î‘çÜ
                if (chktel2.isSelected())
                {
                    sa.setTel2(true);
                    chkflg=true;
                }

                //ê∂îNåéì˙
                if (chkbirthday.isSelected())
                {
                    sa.setBirthday(true);
                    chkflg=true;
                }

                return chkflg;
	}
	
	/**
	 * JTableÇÃóÒïùÇèâä˙âªÇ∑ÇÈÅB
	 */
	private void initTableColumnWidth()
	{
            //óÒÇÃïùÇê›íËÇ∑ÇÈÅB
            mst_customer_integration.getColumnModel().getColumn(0).setPreferredWidth(60);   //å⁄ãqNO
	    mst_customer_integration.getColumnModel().getColumn(1).setPreferredWidth(140);  //å⁄ãqñº
            mst_customer_integration.getColumnModel().getColumn(2).setPreferredWidth(70);  //óXï÷î‘çÜ
            mst_customer_integration.getColumnModel().getColumn(3).setPreferredWidth(300);  //èZèä
            mst_customer_integration.getColumnModel().getColumn(4).setPreferredWidth(100);  //ìdòbî‘çÜ
            mst_customer_integration.getColumnModel().getColumn(5).setPreferredWidth(100);  //ågë—î‘çÜ
            mst_customer_integration.getColumnModel().getColumn(6).setPreferredWidth(80);  //ê∂îNåéì˙
            mst_customer_integration.getColumnModel().getColumn(7).setPreferredWidth(70);  //ëŒè€é“êî
            mst_customer_integration.getColumnModel().getColumn(8).setPreferredWidth(60);  //è⁄ç◊
	}

	/**
	 * å⁄ãqÇÉZÉbÉgÇ∑ÇÈÅB
	 */
	private void setCustomer()
	{
            if (customerNo.getText().equals("0")) {
                customerName1.setText("");
                customerName2.setText("");
                targetCustomer = null;
                return;
            }

            if (targetCustomer != null) {
                if (targetCustomer.getCustomerNo().equals(customerNo.getText())) {
                    return;
                }
            }

            MstCustomer cus = null;

            try {

                cus = SelectSameNoData.getMstCustomerByNo(
                        parentFrame,
                        SystemInfo.getConnection(),
                        this.customerNo.getText(),
                        (SystemInfo.getSetteing().isShareCustomer() ? 0 :SystemInfo.getCurrentShop().getShopID()));

            } catch(SQLException e) {
                SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            }

            targetCustomer = cus;
            customerName1.setText(cus.getCustomerName(0));
            customerName2.setText(cus.getCustomerName(1));
	}

}
