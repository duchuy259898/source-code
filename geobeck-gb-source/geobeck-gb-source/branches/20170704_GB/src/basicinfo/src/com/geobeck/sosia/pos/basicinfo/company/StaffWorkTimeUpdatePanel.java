/*
 * StaffWorkTimeUpdatePanel.java
 *
 * Created on 2007/08/09, 16:29
 */

package com.geobeck.sosia.pos.basicinfo.company;

import java.util.*;
import java.sql.*;
import javax.swing.*;
import java.util.logging.*;
import java.text.SimpleDateFormat;
import com.geobeck.swing.*;
import com.geobeck.sosia.pos.system.*;
import com.geobeck.sosia.pos.util.*;
import com.geobeck.sql.*;
import com.geobeck.sosia.pos.data.company.*;
import com.geobeck.sosia.pos.master.company.MstShop;

/**
 *
 * @author  kanemoto
 */
public class StaffWorkTimeUpdatePanel extends  com.geobeck.sosia.pos.swing.AbstractImagePanelEx {

    private StaffWorkTime swt = null;
    private MstShop shop = null;
    
    /** Creates new form StaffWorkTimeUpdatePanel */
    public StaffWorkTimeUpdatePanel(MstShop shop, StaffWorkTime swt) {

        this.shop = shop;
        this.swt = swt;

	initComponents();
	this.setPath("èoëﬁãŒ");
	this.setTitle("èoëﬁãŒïœçX");
	this.setSize(425, 355);
	init();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        renewButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        recessTimeLabel5 = new javax.swing.JLabel();
        recessTimeLabel4 = new javax.swing.JLabel();
        recessStartTime4 = recessStartTime4 = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));
        ObjDateLabel4 = new javax.swing.JLabel();
        recessFinishTime4 = recessFinishTime4 = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));
        recessStartTime5 = recessStartTime5 = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));
        ObjDateLabel5 = new javax.swing.JLabel();
        recessFinishTime5 = recessFinishTime5 = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));
        recessTimeLabel3 = new javax.swing.JLabel();
        recessStartTime3 = recessStartTime3 = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));
        ObjDateLabel3 = new javax.swing.JLabel();
        recessFinishTime3 = recessFinishTime3 = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));
        recessTimeLabel2 = new javax.swing.JLabel();
        recessStartTime2 = recessStartTime2 = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));
        ObjDateLabel2 = new javax.swing.JLabel();
        recessFinishTime2 = recessFinishTime2 = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));
        recessTimeLabel1 = new javax.swing.JLabel();
        recessStartTime1 = recessStartTime1 = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));
        ObjDateLabel1 = new javax.swing.JLabel();
        recessFinishTime1 = recessFinishTime1 = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));
        staffName = new javax.swing.JTextField();
        shopName = new javax.swing.JTextField();
        date = new javax.swing.JTextField();
        staffLabel = new javax.swing.JLabel();
        ObjDateLabel = new javax.swing.JLabel();
        shopLabel = new javax.swing.JLabel();
        startTimeLabel = new javax.swing.JLabel();
        finishTimeLabel = new javax.swing.JLabel();
        workingStartTime = workingStartTime = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));
        workingFinishTime = workingFinishTime = new JFormattedTextField(FormatterCreator.createMaskFormatter("##:##", null, null));

        setFocusCycleRoot(true);
        renewButton.setIcon(SystemInfo.getImageIcon("/button/common/update_off.jpg"));
        renewButton.setBorderPainted(false);
        renewButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/update_on.jpg"));
        renewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renewButtonActionPerformed(evt);
            }
        });

        closeButton.setIcon(SystemInfo.getImageIcon("/button/common/close_off.jpg"));
        closeButton.setBorderPainted(false);
        closeButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/close_on.jpg"));
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jPanel1.setFocusCycleRoot(true);
        jPanel1.setOpaque(false);
        recessTimeLabel5.setText("\u4f11\u61a9\u6642\u9593\uff15");

        recessTimeLabel4.setText("\u4f11\u61a9\u6642\u9593\uff14");

        recessStartTime4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        recessStartTime4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recessStartTime4.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        recessStartTime4.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        ObjDateLabel4.setText("\uff5e");

        recessFinishTime4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        recessFinishTime4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recessFinishTime4.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        recessFinishTime4.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        recessStartTime5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        recessStartTime5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recessStartTime5.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        recessStartTime5.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        ObjDateLabel5.setText("\uff5e");

        recessFinishTime5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        recessFinishTime5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recessFinishTime5.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        recessFinishTime5.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        recessTimeLabel3.setText("\u4f11\u61a9\u6642\u9593\uff13");

        recessStartTime3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        recessStartTime3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recessStartTime3.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        recessStartTime3.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        ObjDateLabel3.setText("\uff5e");

        recessFinishTime3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        recessFinishTime3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recessFinishTime3.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        recessFinishTime3.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        recessTimeLabel2.setText("\u4f11\u61a9\u6642\u9593\uff12");

        recessStartTime2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        recessStartTime2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recessStartTime2.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        recessStartTime2.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        ObjDateLabel2.setText("\uff5e");

        recessFinishTime2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        recessFinishTime2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recessFinishTime2.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        recessFinishTime2.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        recessTimeLabel1.setText("\u4f11\u61a9\u6642\u9593\uff11");

        recessStartTime1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        recessStartTime1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recessStartTime1.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        recessStartTime1.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        ObjDateLabel1.setText("\uff5e");

        recessFinishTime1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        recessFinishTime1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        recessFinishTime1.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        recessFinishTime1.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        staffName.setEditable(false);
        staffName.setFocusable(false);

        shopName.setEditable(false);
        shopName.setFocusable(false);

        date.setEditable(false);
        date.setFocusable(false);

        staffLabel.setText("\u30b9\u30bf\u30c3\u30d5\u540d");

        ObjDateLabel.setText("\u51fa\u52e4\u65e5");

        shopLabel.setText("\u5e97\u8217");

        startTimeLabel.setText("\u51fa\u52e4\u6642\u9593");

        finishTimeLabel.setText("\u9000\u52e4\u6642\u9593");

        workingStartTime.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        workingStartTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        workingStartTime.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        workingStartTime.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        workingFinishTime.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        workingFinishTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        workingFinishTime.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        workingFinishTime.setFont(new java.awt.Font("MS UI Gothic", 0, 14));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(recessTimeLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(recessTimeLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(recessStartTime4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ObjDateLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(recessFinishTime4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(recessStartTime5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ObjDateLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(recessFinishTime5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(recessTimeLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recessStartTime3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ObjDateLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recessFinishTime3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(recessTimeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recessStartTime2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ObjDateLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recessFinishTime2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(recessTimeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(recessStartTime1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ObjDateLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(recessFinishTime1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(staffName, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shopName, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(staffLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ObjDateLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(shopLabel, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(startTimeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(finishTimeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(workingStartTime)
                            .addComponent(workingFinishTime, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shopName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ObjDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staffLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(workingStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finishTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(workingFinishTime, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recessTimeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recessStartTime1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ObjDateLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recessFinishTime1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recessTimeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recessStartTime2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ObjDateLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recessFinishTime2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recessTimeLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recessStartTime3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ObjDateLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recessFinishTime3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recessTimeLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recessStartTime4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ObjDateLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recessFinishTime4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recessTimeLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recessStartTime5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ObjDateLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recessFinishTime5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(renewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(renewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.close();
    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * èâä˙âªÇ∑ÇÈ
     */
    private void init()
    {
        setKeyListener();

        SystemInfo.addMouseCursorChange(closeButton);
        SystemInfo.addMouseCursorChange(renewButton);
        
        shopName.setText(shop.getShopName());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
        date.setText(sdf.format(swt.getWorkingDate().getTime()));
        staffName.setText(swt.getStaff().getFullStaffName());
        
        workingStartTime.setText(formatTime(swt.getWorkingStartTime()));
        workingFinishTime.setText(formatTime(swt.getWorkingFinishTime()));

        recessStartTime1.setText(formatTime(swt.getRecessStartTime1()));
        recessFinishTime1.setText(formatTime(swt.getRecessFinishTime1()));
        recessStartTime2.setText(formatTime(swt.getRecessStartTime2()));
        recessFinishTime2.setText(formatTime(swt.getRecessFinishTime2()));
        recessStartTime3.setText(formatTime(swt.getRecessStartTime3()));
        recessFinishTime3.setText(formatTime(swt.getRecessFinishTime3()));
        recessStartTime4.setText(formatTime(swt.getRecessStartTime4()));
        recessFinishTime4.setText(formatTime(swt.getRecessFinishTime4()));
        recessStartTime5.setText(formatTime(swt.getRecessStartTime5()));
        recessFinishTime5.setText(formatTime(swt.getRecessFinishTime5()));
    }
    
    private void renewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renewButtonActionPerformed

        if (!checkTime(startTimeLabel, workingStartTime)) return;
        if (!checkTime(finishTimeLabel, workingFinishTime)) return;
        if (!checkTime(recessTimeLabel1, recessStartTime1)) return;
        if (!checkTime(recessTimeLabel1, recessFinishTime1)) return;
        if (!checkTime(recessTimeLabel2, recessStartTime2)) return;
        if (!checkTime(recessTimeLabel2, recessFinishTime2)) return;
        if (!checkTime(recessTimeLabel3, recessStartTime3)) return;
        if (!checkTime(recessTimeLabel3, recessFinishTime3)) return;
        if (!checkTime(recessTimeLabel4, recessStartTime4)) return;
        if (!checkTime(recessTimeLabel4, recessFinishTime4)) return;
        if (!checkTime(recessTimeLabel5, recessStartTime5)) return;
        if (!checkTime(recessTimeLabel5, recessFinishTime5)) return;
        
        int ret = MessageDialog.showYesNoDialog(
                        this,
                        MessageUtil.getMessage(103),
                        this.getTitle(),
                        JOptionPane.QUESTION_MESSAGE,
                        JOptionPane.NO_OPTION);
                    
        if (ret == JOptionPane.YES_OPTION) {
            this.regist();
            this.close();
        }

    }//GEN-LAST:event_renewButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ObjDateLabel;
    private javax.swing.JLabel ObjDateLabel1;
    private javax.swing.JLabel ObjDateLabel2;
    private javax.swing.JLabel ObjDateLabel3;
    private javax.swing.JLabel ObjDateLabel4;
    private javax.swing.JLabel ObjDateLabel5;
    private javax.swing.JButton closeButton;
    private javax.swing.JTextField date;
    private javax.swing.JLabel finishTimeLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JFormattedTextField recessFinishTime1;
    private javax.swing.JFormattedTextField recessFinishTime2;
    private javax.swing.JFormattedTextField recessFinishTime3;
    private javax.swing.JFormattedTextField recessFinishTime4;
    private javax.swing.JFormattedTextField recessFinishTime5;
    private javax.swing.JFormattedTextField recessStartTime1;
    private javax.swing.JFormattedTextField recessStartTime2;
    private javax.swing.JFormattedTextField recessStartTime3;
    private javax.swing.JFormattedTextField recessStartTime4;
    private javax.swing.JFormattedTextField recessStartTime5;
    private javax.swing.JLabel recessTimeLabel1;
    private javax.swing.JLabel recessTimeLabel2;
    private javax.swing.JLabel recessTimeLabel3;
    private javax.swing.JLabel recessTimeLabel4;
    private javax.swing.JLabel recessTimeLabel5;
    private javax.swing.JButton renewButton;
    private javax.swing.JLabel shopLabel;
    private javax.swing.JTextField shopName;
    private javax.swing.JLabel staffLabel;
    private javax.swing.JTextField staffName;
    private javax.swing.JLabel startTimeLabel;
    private javax.swing.JFormattedTextField workingFinishTime;
    private javax.swing.JFormattedTextField workingStartTime;
    // End of variables declaration//GEN-END:variables
  
    private void setKeyListener()
    {
        workingStartTime.addKeyListener(SystemInfo.getMoveNextField());
        workingStartTime.addFocusListener(SystemInfo.getSelectText());
        workingFinishTime.addKeyListener(SystemInfo.getMoveNextField());
        workingFinishTime.addFocusListener(SystemInfo.getSelectText());

        recessStartTime1.addKeyListener(SystemInfo.getMoveNextField());
        recessStartTime1.addFocusListener(SystemInfo.getSelectText());
        recessStartTime2.addKeyListener(SystemInfo.getMoveNextField());
        recessStartTime2.addFocusListener(SystemInfo.getSelectText());
        recessStartTime3.addKeyListener(SystemInfo.getMoveNextField());
        recessStartTime3.addFocusListener(SystemInfo.getSelectText());
        recessStartTime4.addKeyListener(SystemInfo.getMoveNextField());
        recessStartTime4.addFocusListener(SystemInfo.getSelectText());
        recessStartTime5.addKeyListener(SystemInfo.getMoveNextField());
        recessStartTime5.addFocusListener(SystemInfo.getSelectText());

        recessFinishTime1.addKeyListener(SystemInfo.getMoveNextField());
        recessFinishTime1.addFocusListener(SystemInfo.getSelectText());
        recessFinishTime2.addKeyListener(SystemInfo.getMoveNextField());
        recessFinishTime2.addFocusListener(SystemInfo.getSelectText());
        recessFinishTime3.addKeyListener(SystemInfo.getMoveNextField());
        recessFinishTime3.addFocusListener(SystemInfo.getSelectText());
        recessFinishTime4.addKeyListener(SystemInfo.getMoveNextField());
        recessFinishTime4.addFocusListener(SystemInfo.getSelectText());
        recessFinishTime5.addKeyListener(SystemInfo.getMoveNextField());
        recessFinishTime5.addFocusListener(SystemInfo.getSelectText());
    }
    
    /**
     * èoëﬁãŒÉfÅ[É^Çìoò^Ç∑ÇÈÅB
     * @param con ÉRÉlÉNÉVÉáÉì
     * @return ê¨å˜éûtrueÇï‘Ç∑ÅB
     */
    private void regist()
    {
        try
        {
            swt.setWorkingStartTime(getSelectedDate(workingStartTime));
            swt.setWorkingFinishTime(getSelectedDate(workingFinishTime, isNextDay(workingStartTime, workingFinishTime) ? 1 : 0));

            swt.setRecessStartTime1(getSelectedDate(recessStartTime1));
            swt.setRecessFinishTime1(getSelectedDate(recessFinishTime1, isNextDay(recessStartTime1, recessFinishTime1) ? 1 : 0));

            swt.setRecessStartTime2(getSelectedDate(recessStartTime2));
            swt.setRecessFinishTime2(getSelectedDate(recessFinishTime2, isNextDay(recessStartTime2, recessFinishTime2) ? 1 : 0));

            swt.setRecessStartTime3(getSelectedDate(recessStartTime3));
            swt.setRecessFinishTime3(getSelectedDate(recessFinishTime3, isNextDay(recessStartTime3, recessFinishTime3) ? 1 : 0));

            swt.setRecessStartTime4(getSelectedDate(recessStartTime4));
            swt.setRecessFinishTime4(getSelectedDate(recessFinishTime4, isNextDay(recessStartTime4, recessFinishTime4) ? 1 : 0));

            swt.setRecessStartTime5(getSelectedDate(recessStartTime5));
            swt.setRecessFinishTime5(getSelectedDate(recessFinishTime5, isNextDay(recessStartTime5, recessFinishTime5) ? 1 : 0));

            swt.regist(SystemInfo.getConnection());
        }
        catch(SQLException e)
        {
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
        }
    }
    
    /**
     * É_ÉCÉAÉçÉOÇï¬Ç∂ÇÈ
     */
    private void close()
    {
        if (this.isDialog()) {
            ((JDialog)this.getParent().getParent().getParent().getParent()).setVisible(false);
        } else {
            this.setVisible(false);
        }
    }
    
    /**
     * éûä‘ÇÃÉ`ÉFÉbÉNÇçsÇ§ÅB
     * @param time éûä‘
     * @return true - ÇnÇj
     */
    private boolean checkTime(JLabel label, JFormattedTextField time) {

        if (time.getText().equals("  :  ")) return true;

        if (!this.checkTimeFormat(time.getText())) {
            MessageDialog.showMessageDialog(
                this,
                MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, label.getText()),
                this.getTitle(),
                JOptionPane.ERROR_MESSAGE);

                time.requestFocusInWindow();
                time.selectAll();
            
            return false;
        }
/*
        // âcã∆éûä‘ì‡É`ÉFÉbÉN
        if (!this.checkTimeTerm(time)) {
            if (MessageDialog.showYesNoDialog(
                this,
                MessageUtil.getMessage(5004),
                this.getTitle(), JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION) {
                return false;
            }
        }
*/
        return true;
    }

    private boolean checkTimeFormat(String time) {

        if (!time.matches("[0-9]{1,2}:[0-9]{2}")) return false;

        int hour = Integer.parseInt(time.replaceAll(":.+", ""));
        int minute = Integer.parseInt(time.replaceAll(".+:", ""));

        if (hour < 0 || 30 < hour) return false;
        if (minute < 0 || 59 < minute) return false;

        return true;
    }

    private boolean checkTimeTerm(String time) {

        int hour = Integer.parseInt(time.replaceAll(":.+", ""));
        int minute = Integer.parseInt(time.replaceAll(".+:", ""));

        if (hour < shop.getOpenHour() || shop.getCloseHour() < hour) return false;

        if (hour == shop.getOpenHour() && minute < shop.getOpenMinute()) return false;

        if (hour == shop.getCloseHour() && shop.getCloseMinute() < minute) return false;

        return true;
    }

    private boolean isNextDay(JFormattedTextField timeFrom, JFormattedTextField timeTo) {

        boolean result = false;
        
        if (!timeFrom.getText().equals("  :  ") && !timeTo.getText().equals("  :  ")) {

            if (timeFrom.getText().compareTo(timeTo.getText()) > 0) {
                result = true;
            }
        }

        return result;
    }
    
    private GregorianCalendar getSelectedDate(JFormattedTextField time) {
        return getSelectedDate(time, 0);
    }
    
    private GregorianCalendar getSelectedDate(JFormattedTextField time, int offsetDay) {
        
        GregorianCalendar result = null;
        
        if (!time.getText().equals("  :  ")) {

            int hour = Integer.parseInt(time.getText().replaceAll(":.+", ""));
            int minute = Integer.parseInt(time.getText().replaceAll(".+:", ""));

            result = new GregorianCalendar();
            result.setTime(swt.getWorkingDate().getTime());
            result.add(Calendar.DAY_OF_MONTH, offsetDay);
            
            if (24 <= hour) {
                result.add(result.DAY_OF_MONTH, 1);
                hour -= 24;
            }

            result.set(Calendar.HOUR_OF_DAY, hour);
            result.set(Calendar.MINUTE, minute);
        }

        return result;
    }

    /**
     * éûä‘Çï∂éöóÒÇ…ïœä∑Ç∑ÇÈÅB
     * @param time éûä‘
     * @return éûä‘ÇÃï∂éöóÒ
     */
    private String formatTime(GregorianCalendar time)
    {
        String result = "";
        
        if (time != null) {
            int h,m = 0;
            h = time.get(Calendar.HOUR_OF_DAY);
            m = time.get(Calendar.MINUTE);

            if (swt.getWorkingDate().get(Calendar.DAY_OF_MONTH) != time.get(Calendar.DAY_OF_MONTH)) {
                h += 24;
            }

            if (time != null) {
                result = String.format("%1$02d", h) + ":" + String.format("%1$02d", m);
            }
        }
        
        return result;
    }

}
