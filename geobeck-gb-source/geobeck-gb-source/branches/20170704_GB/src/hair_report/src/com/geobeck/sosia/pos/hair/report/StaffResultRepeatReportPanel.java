/*
 * StaffResultRepeatReportPanel.java
 *
 * Created on 2008/06/14, 15:00
 */

package com.geobeck.sosia.pos.hair.report;

import com.geobeck.sosia.pos.basicinfo.SimpleMaster;
import com.geobeck.sosia.pos.system.SystemInfo;
import java.awt.*;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.text.*;
import com.geobeck.swing.*;
import com.geobeck.sosia.pos.master.company.*;
import com.geobeck.sosia.pos.report.bean.ReportParameterBean;
import com.geobeck.sosia.pos.hair.report.logic.ReportLogic;
import com.geobeck.sosia.pos.master.MstData;
import com.geobeck.sosia.pos.swing.SelectTableCellRenderer;
import com.geobeck.sosia.pos.util.*;
import com.geobeck.sql.ConnectionWrapper;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  saito
 */
public class StaffResultRepeatReportPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx
{
        //IVS_vtnhan start add 20140723 MASHU_íSìñçƒóàï™êÕ
        private MstShopCategorys		mscg		=	new MstShopCategorys();
        private MstShopCategorys mrsRef = new MstShopCategorys();
        private MstShopCategorys mrsUse = new MstShopCategorys();
        private int useShopCategory = 0;
        private boolean isHideCategory = false;
        //IVS_vtnhan end add 20140723 MASHU_íSìñçƒóàï™êÕ
	/** Creates new form StaffResultRepeatReportPanel */
	public StaffResultRepeatReportPanel()
	{
		initComponents();
		addMouseCursorChange();
                //IVS_vtnhan start edit 20140723 MASHU_íSìñçƒóàï™êÕ
               // this.setSize(450, 603);
                this.setSize(720, 603);
                //IVS_vtnhan end add 20140723 MASHU_íSìñçƒóàï™êÕ
		this.setPath("í†ï[èoóÕ");
		this.setTitle("íSìñï çƒóàê¨ê—");
		this.setKeyListener();
                
                target.addItem(SystemInfo.getGroup());
                SystemInfo.getGroup().addGroupDataToJComboBox(target, 3);
                if (!SystemInfo.isGroup()) {
                    target.setSelectedItem(SystemInfo.getCurrentShop());
                }
                
                //ëŒè€ä˙ä‘ÇÃê›íË
		this.termFrom.setDate(new Date());
		this.termTo.setDate(new Date());
		
		//ê≈î≤ÅAê≈çûÇÃèâä˙ê›íË
		if(SystemInfo.getAccountSetting().getReportPriceType() == 0)
		{
			rdoTaxBlank.setSelected(false);
			rdoTaxUnit.setSelected(true);
		}
		else
		{
			rdoTaxBlank.setSelected(true);
			rdoTaxUnit.setSelected(false);
		}
   
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportTypeGroup = new javax.swing.ButtonGroup();
        taxGroup = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        pnlMain = new javax.swing.JPanel();
        targetLabel = new javax.swing.JLabel();
        target = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        jPanel1 = new javax.swing.JPanel();
        termtLabe = new javax.swing.JLabel();
        termFrom = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        termtLabe1 = new javax.swing.JLabel();
        termTo = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        termtLabe2 = new javax.swing.JLabel();
        calculationTo = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        termtLabe3 = new javax.swing.JLabel();
        calculationFrom = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        btnOutput1 = new javax.swing.JButton();
        lblTargetPeriod4 = new javax.swing.JLabel();
        txtFixedCount = new javax.swing.JTextField();
        ((PlainDocument)txtFixedCount.getDocument()).setDocumentFilter(
            new CustomFilter(3, CustomFilter.NUMERIC));
        lblTargetPeriod5 = new javax.swing.JLabel();
        lblNewDivision = new javax.swing.JLabel();
        radnewShop = new javax.swing.JRadioButton();
        radNewAllShop = new javax.swing.JRadioButton();
        lblTargetPeriod10 = new javax.swing.JLabel();
        rdoSameShopCatVisit = new javax.swing.JRadioButton();
        rdoDiffShopCatVisit = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        lblTax = new javax.swing.JLabel();
        rdoTaxUnit = new javax.swing.JRadioButton();
        rdoTaxBlank = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        referenceCategoryLeftScrollPane = new javax.swing.JScrollPane();
        tblReferenceCategoryName = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        selectButton = new javax.swing.JButton();
        selectAllButton = new javax.swing.JButton();
        releaseButton = new javax.swing.JButton();
        releaseAllButton = new javax.swing.JButton();
        selectCategoryRightScrollPane = new javax.swing.JScrollPane();
        tblSelectCategoryName = new javax.swing.JTable();
        lblCategory = new javax.swing.JLabel();

        setFocusCycleRoot(true);

        pnlMain.setFocusCycleRoot(true);
        pnlMain.setOpaque(false);

        targetLabel.setText("ëŒè€");
        targetLabel.setFocusCycleRoot(true);

        target.setFocusCycleRoot(true);
        target.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlMainLayout = new org.jdesktop.layout.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .add(targetLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(21, 21, 21)
                .add(target, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 216, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(targetLabel)
                    .add(target, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "íSìñï çƒóàê¨ê—", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 51, 51)));
        jPanel1.setOpaque(false);

        termtLabe.setText("ï]âøä˙ä‘");

        termFrom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        termFrom.setDate(new java.util.Date());
        termFrom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                termFromItemStateChanged(evt);
            }
        });

        termtLabe1.setText("Å`");

        termTo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        termTo.setDate(new java.util.Date());

        termtLabe2.setText("èWåvä˙ä‘");

        calculationTo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        calculationTo.setDate(new java.util.Date());

        termtLabe3.setText("Å`");

        calculationFrom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        calculationFrom.setDate(new java.util.Date());

        btnOutput1.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutput1.setBorderPainted(false);
        btnOutput1.setContentAreaFilled(false);
        btnOutput1.setFocusCycleRoot(true);
        btnOutput1.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutput1ActionPerformed(evt);
            }
        });

        lblTargetPeriod4.setText("å≈íËâÒêî");

        txtFixedCount.setText("4");

        lblTargetPeriod5.setText("âÒà»è„");

        lblNewDivision.setText("êVãKãÊï™");
        lblNewDivision.setFocusCycleRoot(true);

        buttonGroup2.add(radnewShop);
        radnewShop.setSelected(true);
        radnewShop.setText("é©ìXêVãK");
        radnewShop.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        radnewShop.setFocusCycleRoot(true);
        radnewShop.setMargin(new java.awt.Insets(0, 0, 0, 0));
        radnewShop.setOpaque(false);

        buttonGroup2.add(radNewAllShop);
        radNewAllShop.setText("ëSìXêVãK");
        radNewAllShop.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        radNewAllShop.setFocusCycleRoot(true);
        radNewAllShop.setMargin(new java.awt.Insets(0, 0, 0, 0));
        radNewAllShop.setOpaque(false);

        lblTargetPeriod10.setText("ã∆ë‘çƒóà");

        buttonGroup1.add(rdoSameShopCatVisit);
        rdoSameShopCatVisit.setSelected(true);
        rdoSameShopCatVisit.setText("ìØã∆ë‘Ç≈ÇÃçƒóàÇÃÇ›ëŒè€");
        rdoSameShopCatVisit.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoSameShopCatVisit.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoSameShopCatVisit.setOpaque(false);

        buttonGroup1.add(rdoDiffShopCatVisit);
        rdoDiffShopCatVisit.setText("ëºã∆ë‘Ç≈ÇÃçƒóàÇ‡ëŒè€");
        rdoDiffShopCatVisit.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoDiffShopCatVisit.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoDiffShopCatVisit.setOpaque(false);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(termtLabe, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(termFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(termtLabe2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(calculationFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(termtLabe3)
                            .add(termtLabe1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(termTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(38, 38, 38)
                                .add(btnOutput1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(calculationTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblTargetPeriod4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(lblNewDivision)
                            .add(lblTargetPeriod10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(radnewShop)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(radNewAllShop))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(txtFixedCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(lblTargetPeriod5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(rdoDiffShopCatVisit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 172, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(rdoSameShopCatVisit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(338, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(termtLabe, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(termFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(termtLabe1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(termtLabe2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(termtLabe3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(calculationFrom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(btnOutput1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(termTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(calculationTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblTargetPeriod4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtFixedCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblTargetPeriod5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblNewDivision)
                    .add(radnewShop)
                    .add(radNewAllShop))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblTargetPeriod10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(rdoSameShopCatVisit)
                    .add(rdoDiffShopCatVisit)))
        );

        jPanel2.setOpaque(false);

        lblTax.setText("ê≈ãÊï™");
        lblTax.setFocusCycleRoot(true);

        taxGroup.add(rdoTaxUnit);
        rdoTaxUnit.setText("ê≈çû");
        rdoTaxUnit.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoTaxUnit.setFocusCycleRoot(true);
        rdoTaxUnit.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoTaxUnit.setOpaque(false);

        taxGroup.add(rdoTaxBlank);
        rdoTaxBlank.setText("ê≈î≤");
        rdoTaxBlank.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoTaxBlank.setFocusCycleRoot(true);
        rdoTaxBlank.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoTaxBlank.setOpaque(false);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(lblTax)
                .add(44, 44, 44)
                .add(rdoTaxUnit)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(rdoTaxBlank)
                .addContainerGap(598, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblTax)
                    .add(rdoTaxUnit)
                    .add(rdoTaxBlank))
                .addContainerGap())
        );

        jPanel3.setOpaque(false);

        tblReferenceCategoryName.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ã∆ë‘ñº", "ã∆ë‘ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReferenceCategoryName.setSelectionForeground(new java.awt.Color(0, 0, 0));
        //nhanvt
        tblReferenceCategoryName.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(tblReferenceCategoryName, SystemInfo.getTableHeaderRenderer());
        tblReferenceCategoryName.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        SelectTableCellRenderer.setSelectTableCellRenderer(tblReferenceCategoryName);
        //nhanvt
        tblReferenceCategoryName.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tblReferenceCategoryNameMouseMoved(evt);
            }
        });
        referenceCategoryLeftScrollPane.setViewportView(tblReferenceCategoryName);
        tblReferenceCategoryName.getColumnModel().getColumn(0).setMinWidth(250);
        tblReferenceCategoryName.getColumnModel().getColumn(0).setMaxWidth(250);
        tblReferenceCategoryName.getColumnModel().getColumn(1).setMinWidth(0);
        tblReferenceCategoryName.getColumnModel().getColumn(1).setPreferredWidth(0);
        tblReferenceCategoryName.getColumnModel().getColumn(1).setMaxWidth(0);

        jPanel4.setOpaque(false);

        selectButton.setIcon(SystemInfo.getImageIcon("/button/arrow/right_off.jpg"));
        selectButton.setBorderPainted(false);
        selectButton.setContentAreaFilled(false);
        selectButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/right_on.jpg"));
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        selectAllButton.setIcon(SystemInfo.getImageIcon("/button/arrow/right2_off.jpg"));
        selectAllButton.setBorderPainted(false);
        selectAllButton.setContentAreaFilled(false);
        selectAllButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/right2_on.jpg"));
        selectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllButtonActionPerformed(evt);
            }
        });

        releaseButton.setIcon(SystemInfo.getImageIcon("/button/arrow/left_off.jpg"));
        releaseButton.setBorderPainted(false);
        releaseButton.setContentAreaFilled(false);
        releaseButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/left_on.jpg"));
        releaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releaseButtonActionPerformed(evt);
            }
        });

        releaseAllButton.setIcon(SystemInfo.getImageIcon("/button/arrow/left2_off.jpg"));
        releaseAllButton.setBorderPainted(false);
        releaseAllButton.setContentAreaFilled(false);
        releaseAllButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/left2_on.jpg"));
        releaseAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releaseAllButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(selectButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(releaseButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(releaseAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(selectAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(selectAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(selectButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 39, Short.MAX_VALUE)
                .add(releaseButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(releaseAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        tblSelectCategoryName.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ã∆ë‘ñº", "ã∆ë‘ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSelectCategoryName.setSelectionForeground(new java.awt.Color(0, 0, 0));
        //nhanvt
        tblSelectCategoryName.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(tblSelectCategoryName, SystemInfo.getTableHeaderRenderer());
        tblSelectCategoryName.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        SelectTableCellRenderer.setSelectTableCellRenderer(tblSelectCategoryName);
        //TableColumnModel model = tblSelectCategoryName.getColumnModel();
        //model.getColumn(2).setCellEditor(new IntegerCellEditor(new JTextField()));
        //model.getColumn(3).setCellEditor(new IntegerCellEditor(new JTextField()));
        //model.getColumn(4).setCellEditor(new IntegerCellEditor(new JTextField()));
        //model.getColumn(5).setCellEditor(new IntegerCellEditor(new JTextField()));
        //nhanvt
        tblSelectCategoryName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSelectCategoryNameMouseClicked(evt);
            }
        });
        tblSelectCategoryName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblSelectCategoryNamePropertyChange(evt);
            }
        });
        selectCategoryRightScrollPane.setViewportView(tblSelectCategoryName);
        tblSelectCategoryName.getColumnModel().getColumn(0).setMinWidth(250);
        tblSelectCategoryName.getColumnModel().getColumn(0).setMaxWidth(250);
        tblSelectCategoryName.getColumnModel().getColumn(1).setMinWidth(0);
        tblSelectCategoryName.getColumnModel().getColumn(1).setPreferredWidth(0);
        tblSelectCategoryName.getColumnModel().getColumn(1).setMaxWidth(0);

        lblCategory.setText("èWåvã∆ë‘");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(lblCategory)
                .add(32, 32, 32)
                .add(referenceCategoryLeftScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 251, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(selectCategoryRightScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 251, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(lblCategory)
                    .add(selectCategoryRightScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(referenceCategoryLeftScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlMain, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(pnlMain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 166, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOutput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutput1ActionPerformed
                
                if (!this.checkInput()) return;
                if (!SystemInfo.checkAuthorityPassword(246)) return;

                ReportLogic logic = new ReportLogic();
		ReportParameterBean paramBean = new ReportParameterBean();
		paramBean.setMainReportType(ReportParameterBean.MAIN_REPORT_STAFF);
		
		//ÉOÉãÅ[Év
		if(target.getSelectedItem() instanceof MstGroup) {
			MstGroup	mg	=	(MstGroup)target.getSelectedItem();
			paramBean.setTargetName(mg.getGroupName());
			paramBean.setShopIDList(mg.getShopIDListAll());
		}
		//ìXï‹
		else if(target.getSelectedItem() instanceof MstShop) {
			MstShop		ms	=	(MstShop)target.getSelectedItem();
			paramBean.setTargetName(ms.getShopName());
			paramBean.setShopIDList(ms.getShopID().toString());
		}
		
		//ëŒè€Ç∆Ç»ÇÈìXï‹Ç™ë∂ç›ÇµÇ»Ç¢èÍçá
		if(paramBean.getShopIDList().equals("")) {
			MessageDialog.showMessageDialog(this,
				MessageUtil.getMessage(4001),
				this.getTitle(),
				JOptionPane.ERROR_MESSAGE);
			return;
		}
		
                //ê≈ãÊï™
		if(this.rdoTaxBlank.isSelected()) {
			paramBean.setTaxType(ReportParameterBean.TAX_TYPE_BLANK);	// ê≈ãÊï™(ê≈î≤Ç´)
		} else if(this.rdoTaxUnit.isSelected()) {
			paramBean.setTaxType(ReportParameterBean.TAX_TYPE_UNIT);	// ê≈ãÊï™(ê≈çûÇ›)
		}
                //IVS_vtnhan start add 20140723 MASHU_íSìñçƒóàï™êÕ
                
                //nhanvt start add 20150121 New request #34998
                if(rdoDiffShopCatVisit.isSelected()){
                        paramBean.setDiffShopCatVisit(true);
                }else{
                        paramBean.setDiffShopCatVisit(false);
                }
                
                
                    String lstShopCategoryId = "";
                String lstNameShopCategory = "";
                if(mrsUse.size() >0){
                    int count = 0;
                            for(MstShopCategory category : mrsUse){
                                if(category.getShopCategoryId() != null){
                                    lstShopCategoryId += category.getShopCategoryId();
                            lstNameShopCategory += category.getShopClassName();
                                    count++;
                            if(count < mrsUse.size()){
                                        lstShopCategoryId += ",";
                                lstNameShopCategory += "ÅA";
                                    }
                                }
                            }
                        }
                        if(!lstShopCategoryId.equals("")){
                            paramBean.setListCategoryId(lstShopCategoryId);
                        }else{
                            paramBean.setListCategoryId(null);
                        }
                
                paramBean.setListCategoryName(lstNameShopCategory);
		//nhanvt end add 20150121 New request #34998
                
                paramBean.setIsHideCategory(isHideCategory);
                if(this.radnewShop.isSelected()) {
			paramBean.setNewDevision(ReportParameterBean.NEW_DEVISION);	//é©ìXêVãK
                        paramBean.setDevisionName("é©ìXêVãK");
		} else if(this.radNewAllShop.isSelected()) {
			paramBean.setNewDevision(ReportParameterBean.NEW_ALL_DEVISION);	// ëSìXêVãK
                        paramBean.setDevisionName("ëSìXêVãK");
		}
                paramBean.setUseShopCategory(useShopCategory);
                //IVS_vtnhan end add 20140723 MASHU_íSìñçƒóàï™êÕ
		
		//äÑà¯ÇÃãÊï™ÇÃê›íË
		Integer discountType = SystemInfo.getAccountSetting().getDiscountType();
		paramBean.setDiscountType(discountType);
		
                //ëŒè€ä˙ä‘
		paramBean.setCalculationStartDate(this.termFrom.getDateStr("/"));
		paramBean.setCalculationEndDate(this.termTo.getDateStr("/"));
		paramBean.setCalculationStartDateObj(this.termFrom.getDate());
		paramBean.setCalculationEndDateObj(this.termTo.getDate());
                //èWåvä˙ä‘
		paramBean.setTargetStartDate(this.calculationFrom.getDateStr("/"));
		paramBean.setTargetEndDate(this.calculationTo.getDateStr("/"));
		paramBean.setTargetStartDateObj(this.calculationFrom.getDate());
		paramBean.setTargetEndDateObj(this.calculationTo.getDate());
		
		Calendar start = Calendar.getInstance();
		Calendar end = Calendar.getInstance();
		start.setTime(this.termFrom.getDate());
		end.setTime(this.termTo.getDate());
                
		if(start.compareTo(end) != 0) {
                        //ëŒè€ä˙ä‘Ç™äJénì˙ÅÑèIóπì˙Ç»ÇÁÉGÉâÅ[
			if(start.after(end)) {
				MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, "ëŒè€ä˙ä‘"),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
				return;
			}
		}
		
		start.setTime(this.calculationFrom.getDate());
		end.setTime(this.calculationTo.getDate());
		
		if(start.compareTo(end) != 0) {
                        //èWåvä˙ä‘Ç™äJénì˙ÅÑèIóπì˙Ç»ÇÁÉGÉâÅ[
			if(start.after(end)) {
				MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, "èWåvä˙ä‘"),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
				return;
			}
		}
                
                // å≈íËâÒêî
                int fixedCount = 5;
                try {
                    fixedCount = Integer.parseInt(this.txtFixedCount.getText());
                } catch(NumberFormatException e){
                    
                }
                paramBean.setFixedCount(fixedCount);
		
		
		//èoóÕèàóù
		boolean logicResult = true;
		try {
        		//íSìñï çƒóàê¨ê—
			logicResult = logic.outStaffReportReappearance(paramBean);
		} catch (Exception e) {
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
			MessageDialog.showMessageDialog(this,
				MessageUtil.getMessage(1099),
				this.getTitle(),
				JOptionPane.ERROR_MESSAGE);
			return;
		}
		
		// ÉGÉâÅ[éû
		if(!logicResult) {
			MessageDialog.showMessageDialog(this,
				MessageUtil.getMessage(4001),
				this.getTitle(),
				JOptionPane.ERROR_MESSAGE);
		}
    }//GEN-LAST:event_btnOutput1ActionPerformed
    
    private boolean checkInput()
	{
                 //  5. From of ï]âøä˙ä‘ = End of ï]âøä˙ä‘ = NUll => error : äJénì˙Ç‡ÇµÇ≠ÇÕèIóπì˙Ç™ê›íËÇ≥ÇÍÇƒÇ¢Ç‹ÇπÇÒÅB
                if(termFrom.getDate() == null && termTo.getDate() == null   )
		{
			MessageDialog.showMessageDialog(this,
					"äJénì˙Ç‡ÇµÇ≠ÇÕèIóπì˙Ç™ê›íËÇ≥ÇÍÇƒÇ¢Ç‹ÇπÇÒÅB", this.getTitle(), JOptionPane.ERROR_MESSAGE);
                         termFrom.requestFocusInWindow();
			return	false;
		} 
		//6. From of ï]âøä˙ä‘ OR End of ï]âøä˙ä‘ = NULL => error : äJénì˙Ç‡ÇµÇ≠ÇÕèIóπì˙Ç™ê›íËÇ≥ÇÍÇƒÇ¢Ç‹ÇπÇÒÅB 
                else if(termFrom.getDate() == null || termTo.getDate() == null   )
		{
			MessageDialog.showMessageDialog(this,
					"äJénì˙Ç‡ÇµÇ≠ÇÕèIóπì˙Ç™ê›íËÇ≥ÇÍÇƒÇ¢Ç‹ÇπÇÒÅB", this.getTitle(), JOptionPane.ERROR_MESSAGE);
                        if(termFrom.getDate() == null){
                            termFrom.requestFocusInWindow();
                        }else{
                            termTo.requestFocusInWindow();
                        }
			return	false;
		}
                //7. From of ï]âøä˙ä‘ > End of ï]âøä˙ä‘ => error : äJénì˙Ç™èIóπì˙ÇÊÇËëOÇÃì˙ïtÇ…Ç»Ç¡ÇƒÇ¢Ç‹Ç∑ÅB
                 else if(termFrom.getDate().after( termTo.getDate()))
		{
			MessageDialog.showMessageDialog(this,
					"äJénì˙Ç™èIóπì˙ÇÊÇËëOÇÃì˙ïtÇ…Ç»Ç¡ÇƒÇ¢Ç‹Ç∑ÅB", this.getTitle(), JOptionPane.ERROR_MESSAGE);
                        termFrom.requestFocusInWindow();
			return	false;
		}
             
                // èWåvä˙ä‘
                // 2. From of èWåvä˙ä‘ = End of èWåvä˙ä‘ = NUll => error : äJénì˙Ç‡ÇµÇ≠ÇÕèIóπì˙Ç™ê›íËÇ≥ÇÍÇƒÇ¢Ç‹ÇπÇÒÅB
                if(calculationFrom.getDate() == null && calculationTo.getDate() == null   )
		{
			MessageDialog.showMessageDialog(this,
					"äJénì˙Ç‡ÇµÇ≠ÇÕèIóπì˙Ç™ê›íËÇ≥ÇÍÇƒÇ¢Ç‹ÇπÇÒÅB", this.getTitle(), JOptionPane.ERROR_MESSAGE);
                         calculationFrom.requestFocusInWindow();
			return	false;
		} 
		//3. From of èWåvä˙ä‘ OR End of èWåvä˙ä‘ = NULL => error : äJénì˙Ç‡ÇµÇ≠ÇÕèIóπì˙Ç™ê›íËÇ≥ÇÍÇƒÇ¢Ç‹ÇπÇÒÅB 
                else if(calculationFrom.getDate() == null || calculationTo.getDate() == null   )
		{
			MessageDialog.showMessageDialog(this,
					"äJénì˙Ç‡ÇµÇ≠ÇÕèIóπì˙Ç™ê›íËÇ≥ÇÍÇƒÇ¢Ç‹ÇπÇÒÅB", this.getTitle(), JOptionPane.ERROR_MESSAGE);
                        if(calculationFrom.getDate() == null){
                            calculationFrom.requestFocusInWindow();
                        }else{
                            calculationTo.requestFocusInWindow();
                        }
			return	false;
		}
                //4. From of èWåvä˙ä‘ > End of èWåvä˙ä‘ => error : äJénì˙Ç™èIóπì˙ÇÊÇËëOÇÃì˙ïtÇ…Ç»Ç¡ÇƒÇ¢Ç‹Ç∑ÅB
                 else if(calculationFrom.getDate().after( calculationTo.getDate()))
		{
			MessageDialog.showMessageDialog(this,
					"äJénì˙Ç™èIóπì˙ÇÊÇËëOÇÃì˙ïtÇ…Ç»Ç¡ÇƒÇ¢Ç‹Ç∑ÅB", this.getTitle(), JOptionPane.ERROR_MESSAGE);
                        calculationFrom.requestFocusInWindow();
			return	false;
		}
                // 1. From of èWåvä˙ä‘Å@ÅÉÅ@from of ï]âøä˙ä‘Å@ÅÅÅÑerror :  èWåvä˙ä‘ÇÃê›íËÇ™ä‘à·Ç¡ÇƒÇ¢Ç‹Ç∑ÅB
                    //  èWåvä˙ä‘ÇÃFromÇÕï]âøä˙ä‘ÇÃFromà»ç~ÇÃì˙ïtÇ≈ê›íËÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
		if(calculationFrom.getDate().before(termFrom.getDate()))
		{
			MessageDialog.showMessageDialog(this,
					"èWåvä˙ä‘ÇÃê›íËÇ™ä‘à·Ç¡ÇƒÇ¢Ç‹Ç∑ÅB\nèWåvä˙ä‘ÇÃFromÇÕï]âøä˙ä‘ÇÃFromà»ç~ÇÃì˙ïtÇ≈ê›íËÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB ", this.getTitle(), JOptionPane.ERROR_MESSAGE);
                        calculationFrom.requestFocusInWindow();
			return	false;
		}
		return	true;
	}
    
    private void termFromItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_termFromItemStateChanged
      //nhanvt edit 20141013 Request #31243
         calculationFrom.setDate(termFrom.getDate());
        //nhanvt edit 20141013 Request #31243
    }//GEN-LAST:event_termFromItemStateChanged

    private void tblReferenceCategoryNameMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblReferenceCategoryNameMouseMoved

    }//GEN-LAST:event_tblReferenceCategoryNameMouseMoved

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
         //IVS_vtnhan start add 20140723 MASHU_íSìñçƒóàï™êÕ
        this.moveMutiCategory(true);
         //IVS_vtnhan end add 20140723 MASHU_íSìñçƒóàï™êÕ
    }//GEN-LAST:event_selectButtonActionPerformed

    private void selectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllButtonActionPerformed
        //IVS_vtnhan start add 20140723 MASHU_íSìñçƒóàï™êÕ
        this.moveCategoryAll(true);
         //IVS_vtnhan end add 20140723 MASHU_íSìñçƒóàï™êÕ
    }//GEN-LAST:event_selectAllButtonActionPerformed

    private void releaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releaseButtonActionPerformed
        //IVS_vtnhan start add 20140723 MASHU_íSìñçƒóàï™êÕ
        this.moveMutiCategory(false);
         //IVS_vtnhan end add 20140723 MASHU_íSìñçƒóàï™êÕ
    }//GEN-LAST:event_releaseButtonActionPerformed

    private void releaseAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releaseAllButtonActionPerformed
        //IVS_vtnhan start add 20140723 MASHU_íSìñçƒóàï™êÕ
        this.moveCategoryAll(false);
         //IVS_vtnhan end add 20140723 MASHU_íSìñçƒóàï™êÕ
    }//GEN-LAST:event_releaseAllButtonActionPerformed

    private void tblSelectCategoryNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSelectCategoryNameMouseClicked
       
    }//GEN-LAST:event_tblSelectCategoryNameMouseClicked

    private void tblSelectCategoryNamePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblSelectCategoryNamePropertyChange

    }//GEN-LAST:event_tblSelectCategoryNamePropertyChange

    private void targetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetActionPerformed
        // TODO add your handling code here:
         //IVS_vtnhan start add 20140723 MASHU_íSìñçƒóàï™êÕ
        this.chargeDataCombo();
         //IVS_vtnhan end add 20140723 MASHU_íSìñçƒóàï™êÕ
    }//GEN-LAST:event_targetActionPerformed
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOutput1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo calculationFrom;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo calculationTo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblNewDivision;
    private javax.swing.JLabel lblTargetPeriod10;
    private javax.swing.JLabel lblTargetPeriod4;
    private javax.swing.JLabel lblTargetPeriod5;
    private javax.swing.JLabel lblTax;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JRadioButton radNewAllShop;
    private javax.swing.JRadioButton radnewShop;
    private javax.swing.JRadioButton rdoDiffShopCatVisit;
    private javax.swing.JRadioButton rdoSameShopCatVisit;
    private javax.swing.JRadioButton rdoTaxBlank;
    private javax.swing.JRadioButton rdoTaxUnit;
    private javax.swing.JScrollPane referenceCategoryLeftScrollPane;
    private javax.swing.JButton releaseAllButton;
    private javax.swing.JButton releaseButton;
    private javax.swing.ButtonGroup reportTypeGroup;
    private javax.swing.JButton selectAllButton;
    private javax.swing.JButton selectButton;
    private javax.swing.JScrollPane selectCategoryRightScrollPane;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel target;
    private javax.swing.JLabel targetLabel;
    private javax.swing.ButtonGroup taxGroup;
    private javax.swing.JTable tblReferenceCategoryName;
    private javax.swing.JTable tblSelectCategoryName;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo termFrom;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo termTo;
    private javax.swing.JLabel termtLabe;
    private javax.swing.JLabel termtLabe1;
    private javax.swing.JLabel termtLabe2;
    private javax.swing.JLabel termtLabe3;
    private javax.swing.JTextField txtFixedCount;
    // End of variables declaration//GEN-END:variables
	
	private	StaffResultRepeatReportFocusTraversalPolicy	ftp	=
			new StaffResultRepeatReportFocusTraversalPolicy();
	
	/**
	 * É{É^ÉìÇ…É}ÉEÉXÉJÅ[É\ÉãÇ™èÊÇ¡ÇΩÇ∆Ç´Ç…ÉJÅ[É\ÉãÇïœçXÇ∑ÇÈÉCÉxÉìÉgÇí«â¡Ç∑ÇÈÅB
	 */
	private void addMouseCursorChange()
	{
		SystemInfo.addMouseCursorChange(btnOutput1);
	}
	
	private void setKeyListener()
	{
		calculationTo.addKeyListener(SystemInfo.getMoveNextField());
		calculationTo.addFocusListener(SystemInfo.getSelectText());
		termTo.addKeyListener(SystemInfo.getMoveNextField());
		termTo.addFocusListener(SystemInfo.getSelectText());
		termFrom.addKeyListener(SystemInfo.getMoveNextField());
		termFrom.addFocusListener(SystemInfo.getSelectText());
		rdoTaxBlank.addKeyListener(SystemInfo.getMoveNextField());
		rdoTaxUnit.addKeyListener(SystemInfo.getMoveNextField());
                //IVS_vtnhan start add 20140730 MASHU_íSìñçƒóàï™êÕ
                tblReferenceCategoryName.addKeyListener(SystemInfo.getMoveNextField());
                selectAllButton.addKeyListener(SystemInfo.getMoveNextField());
                selectButton.addKeyListener(SystemInfo.getMoveNextField());
                releaseButton.addKeyListener(SystemInfo.getMoveNextField());
                releaseAllButton.addKeyListener(SystemInfo.getMoveNextField());
                tblSelectCategoryName.addKeyListener(SystemInfo.getMoveNextField());
                radnewShop.addKeyListener(SystemInfo.getMoveNextField());
                radNewAllShop.addKeyListener(SystemInfo.getMoveNextField());
                //IVS_vtnhan end add 20140730 MASHU_íSìñçƒóàï™êÕ
		target.addKeyListener(SystemInfo.getMoveNextField());
		target.addFocusListener(SystemInfo.getSelectText());
		txtFixedCount.addKeyListener(SystemInfo.getMoveNextField());
		txtFixedCount.addFocusListener(SystemInfo.getSelectText());
	}
	
	/**
	 * íSìñï çƒóàê¨ê—âÊñ ópFocusTraversalPolicyÇéÊìæÇ∑ÇÈÅB
	 * @return  íSìñï çƒóàê¨ê—âÊñ ópFocusTraversalPolicy
	 */
	public StaffResultRepeatReportFocusTraversalPolicy getFocusTraversalPolicy()
	{
		return	ftp;
	}
          //IVS_vtnhan start add 20140723 MASHU_íSìñçƒóàï™êÕ
  
        /**
        * init data for table ã∆ë‘ñº left with group shop
        */
       private void initCategoryWithGroupShop() {
           mrsRef = new MstShopCategorys();
           SimpleMaster sm = new SimpleMaster(
                   "",
                   "mst_shop_category",
                   "shop_category_id",
                   "shop_class_name", 0);

           sm.loadData();
           for (MstData md : sm) {
               if(md != null){
                   MstShopCategory category = new MstShopCategory();
                   category.setShopCategoryId(md.getID());
                   category.setShopClassName(md.getName());
                   category.setDisplaySeq(md.getDisplaySeq());
                   mrsRef.add(category);
               }

           }

       } 

       /**
        * init data for table ã∆ë‘ñº left with muti shop
        */
       private void initCategoryWithMutiShop() {
            mrsRef = new MstShopCategorys();
            MstShop ms = (MstShop)target.getSelectedItem();
            if(ms.getShopID() != null){
               try
               {
                       mscg = new MstShopCategorys();
                       ConnectionWrapper	con	=	SystemInfo.getConnection();

                       mscg.loadByShop(con,ms.getShopID());

                       if(mscg.size() > 0){
                           mrsRef = mscg;
                       }

               }
               catch(SQLException e)
               {

                       SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
               }
            }

       }  

       /**
        * change combo and show again two table
        * change combo
        * @param evt 
        */
        private void chargeDataCombo() {   

            mrsRef = new MstShopCategorys();
            mrsUse = new MstShopCategorys();
            //ÉOÉãÅ[Év
            if(target.getSelectedItem() instanceof MstGroup) {
                     displayForDesign(true, 1);
                      useShopCategory = 1;
                     isHideCategory = true;
                     initCategoryWithGroupShop();

            }
            //ìXï‹
            else if(target.getSelectedItem() instanceof MstShop) {
                 MstShop ms = (MstShop)target.getSelectedItem();
                 if(ms.getUseShopCategory().equals(1)){
                        displayForDesign(false, 1);
                        useShopCategory = 1;
                        isHideCategory = true;
                        initCategoryWithMutiShop();

                 }else{

                        displayForDesign(false, 0);
                        useShopCategory = 0;
                        isHideCategory = false;

                 }

            }
           

            this.showItems();
       } 

     /**
      * move item
      * @param isSelect 
      */
      public void moveMutiCategory(boolean isSelect) {

        JTable fromTable = (isSelect ? tblReferenceCategoryName : tblSelectCategoryName);

        int index = fromTable.getSelectedRow();
        if (index < 0) return;
        ArrayList<MstShopCategory> tmp = new ArrayList<MstShopCategory>();
        if (isSelect) {
             int[]  selectedIndex = fromTable.getSelectedRows();
            if (selectedIndex.length > 0) {
                for (int i = 0; i < selectedIndex.length; i++) {
                    mrsUse.add(mrsRef.get(selectedIndex[i]));
                    tmp.add(mrsRef.get(selectedIndex[i]));
                }
                mrsRef.removeAll(tmp);
            }
    
        } else {
           
            int[]  selectedIndex = fromTable.getSelectedRows();
            if (selectedIndex.length > 0) {
                for (int i = 0; i < selectedIndex.length; i++) { 
                    mrsRef.add(mrsUse.get(selectedIndex[i]));
                    tmp.add(mrsUse.get(selectedIndex[i]));
                }
                 mrsUse.removeAll(tmp);
            }
           
        }

        this.showItems();
    }
      
    /**
     * move all item
     * @param isSelect 
     */
    public void moveCategoryAll(boolean isSelect) {

        JTable fromTable = (isSelect ? tblReferenceCategoryName : tblSelectCategoryName);

        if (fromTable.getRowCount() == 0) return;

        if (isSelect) {
            for (MstShopCategory mr : mrsRef) mrsUse.add(mr);
            mrsRef.clear();
        } else {
            for (MstShopCategory mr : mrsUse) mrsRef.add(mr);
            mrsUse.clear();
        }

        this.showItems();
    }
      
    /**
     * show data on two table
     */
    private void showItems() {
        this.showItems(mrsRef, tblReferenceCategoryName);
        this.showItems(mrsUse, tblSelectCategoryName);
    } 
    
    /**
     * show data detail on two table
     * @param list
     * @param table 
     */
    private void showItems(ArrayList<MstShopCategory> list, JTable table) {

        Collections.sort(list, new ItemComparator());

        if (table.getCellEditor() != null) table.getCellEditor().stopCellEditing();
        SwingUtil.clearTable(table);
        
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        for (MstShopCategory mr : list) {
            model.addRow(new Object[]{
                mr.getShopClassName()
            });
           
        }
    }
    
    /**
     * control design screen follow combo ëŒè€
     * @param isGroup
     * @param useShopCategory 
     */
    public void displayForDesign(boolean isGroup, Integer useShopCategory){
       
        if(isGroup){
            SwingUtil.clearTable(tblReferenceCategoryName);
            SwingUtil.clearTable(tblSelectCategoryName);
            lblCategory.setVisible(true);
            referenceCategoryLeftScrollPane.setVisible(true);
            tblReferenceCategoryName.setVisible(true);
            selectCategoryRightScrollPane.setVisible(true);
            tblSelectCategoryName.setVisible(true);

            selectAllButton.setVisible(true);
            selectButton.setVisible(true);
            releaseButton.setVisible(true);
            releaseAllButton.setVisible(true);
            //Luc start edit 20150213 #35207
            if(SystemInfo.getSetteing().isUseShopCategory()) {
            jPanel3.setVisible(true);
            lblTargetPeriod10.setVisible(true);
            rdoSameShopCatVisit.setVisible(true);
            rdoDiffShopCatVisit.setVisible(true);
            }else {
                jPanel3.setVisible(false);
                lblTargetPeriod10.setVisible(false);
                rdoSameShopCatVisit.setVisible(false);
                rdoDiffShopCatVisit.setVisible(false);
            }
            //Luc end edit 20150213 #35207
            radnewShop.setSelected(false);
            radNewAllShop.setSelected(true);
            radnewShop.setEnabled(false);
            radNewAllShop.setEnabled(true);
            //nhanvt start add 20150122 New request #34998
            
            //nhanvt end add 20150122 New request #34998        
        }else{
            MstShop ms = (MstShop)target.getSelectedItem();
            if(ms.getUseShopCategory().equals(1)){
                   SwingUtil.clearTable(tblReferenceCategoryName);
                   SwingUtil.clearTable(tblSelectCategoryName);
                   lblCategory.setVisible(true);
                   referenceCategoryLeftScrollPane.setVisible(true);
                   tblReferenceCategoryName.setVisible(true);

                   selectCategoryRightScrollPane.setVisible(true);
                   tblSelectCategoryName.setVisible(true);

                   selectAllButton.setVisible(true);
                   selectButton.setVisible(true);
                   releaseButton.setVisible(true);
                   releaseAllButton.setVisible(true);

                   radnewShop.setSelected(true);
                   radNewAllShop.setSelected(false);
                   radnewShop.setEnabled(true);
                   radNewAllShop.setEnabled(true);
                   jPanel3.setVisible(true);
                   //nhanvt start add 20150122 New request #34998
                   lblTargetPeriod10.setVisible(true);
                   rdoSameShopCatVisit.setVisible(true);
                   rdoDiffShopCatVisit.setVisible(true);
                   //nhanvt end add 20150122 New request #34998

            }else{

                   SwingUtil.clearTable(tblReferenceCategoryName);
                   SwingUtil.clearTable(tblSelectCategoryName);

                   lblCategory.setVisible(false);
                   referenceCategoryLeftScrollPane.setVisible(false);
                   tblReferenceCategoryName.setVisible(false);

                   selectCategoryRightScrollPane.setVisible(false);
                   tblSelectCategoryName.setVisible(false);

                   selectAllButton.setVisible(false);
                   selectButton.setVisible(false);
                   releaseButton.setVisible(false);
                   releaseAllButton.setVisible(false);
                   jPanel3.setVisible(false);
                   radnewShop.setSelected(true);
                   radNewAllShop.setSelected(false);
                   radnewShop.setEnabled(true);
                   radNewAllShop.setEnabled(true);
                   //nhanvt start add 20150122 New request #34998
                   lblTargetPeriod10.setVisible(false);
                   rdoSameShopCatVisit.setVisible(false);
                   rdoDiffShopCatVisit.setVisible(false);
                   //nhanvt end add 20150122 New request #34998

            }
        }

    }
    
    /**
     * compare data
     */
   private class ItemComparator implements java.util.Comparator {
        public int compare(Object s, Object t) {
            return ((MstShopCategory) s).getDisplaySeq()- ((MstShopCategory) t).getDisplaySeq();
	}
   }
    //IVS_vtnhan end add 20140723 MASHU_íSìñçƒóàï™êÕ
	
	
	/**
	 * íSìñï çƒóàê¨ê—âÊñ ópFocusTraversalPolicy
	 */
	private class StaffResultRepeatReportFocusTraversalPolicy
					extends FocusTraversalPolicy
	{
		/**
		 * aComponentStaffResultRepeatReportFocusTraversalPolicyÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃÇ†Ç∆Ç…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentAfter(Container aContainer,
										   Component aComponent)
		{
			if (aComponent.equals(target))
			{
				return this.getSelectedTaxType();
			}
                        
                        else if (aComponent.equals(rdoTaxBlank) ||
					aComponent.equals(rdoTaxUnit))
			{
				return termFrom;
			}
			else if (aComponent.equals(termFrom))
			{
				return termTo;
			}
			else if (aComponent.equals(termTo))
			{
				return calculationTo;
			}
			else if (aComponent.equals(calculationTo))
			{
				return txtFixedCount;
                        }
                        //IVS_vtnhan start add 20140723 MASHU_íSìñçƒóàï™êÕ
			/*else if (aComponent.equals(txtFixedCount))
			{
				return target;
			}*/
                        else if (aComponent.equals(txtFixedCount))
			{
                            if(radnewShop.isEnabled() && radnewShop.isSelected()){
                                return radnewShop;
                            }
                            if(radNewAllShop.isEnabled() && radNewAllShop.isSelected()){
                                return radNewAllShop;
                            }
                            return target;
			}
                        else if (aComponent.equals(radnewShop) && radnewShop.isEnabled() && radnewShop.isSelected())
			{
				return target;
			}
                         else if (aComponent.equals(radNewAllShop) && radNewAllShop.isEnabled() && radNewAllShop.isSelected())
			{
				return target;
			}
			//IVS_vtnhan end add 20140723 MASHU_íSìñçƒóàï™êÕ
                        return target;
		}

		/**
		 * aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentBefore(Container aContainer,
											Component aComponent)
		{
                         //IVS_vtnhan start edit 20140723 MASHU_íSìñçƒóàï™êÕ
			if (aComponent.equals(target))
			{
                            if(radnewShop.isEnabled() && radnewShop.isSelected()){
                                return radnewShop;
                            }
                             if(radNewAllShop.isEnabled() && radNewAllShop.isSelected()){
                                return radNewAllShop;
                            }
                            return txtFixedCount;
			}else if(aComponent.equals(radnewShop)&& radnewShop.isEnabled() && radnewShop.isSelected() ){
                             return txtFixedCount;
                        }else if(aComponent.equals(radNewAllShop)&& radNewAllShop.isEnabled() && radNewAllShop.isSelected() ){
                             return txtFixedCount;
                        }
                         //IVS_vtnhan end edit 20140723 MASHU_íSìñçƒóàï™êÕ
                        else if (aComponent.equals(txtFixedCount))
			{
				return calculationTo;
			}
                        else if (aComponent.equals(rdoTaxBlank) ||
					aComponent.equals(rdoTaxUnit))
			{
                                return target;
			}
			else if (aComponent.equals(termFrom))
			{
				return this.getSelectedTaxType();
			}
			else if (aComponent.equals(termTo))
			{
				return termFrom;
			}
			else if (aComponent.equals(calculationTo))
			{
				return termTo;
			}
			
                        return target;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈èâÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAèáï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer êÊì™ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃêÊì™ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getFirstComponent(Container aContainer)
		{
                        return target;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAãtï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer aContainer - ç≈å„ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getLastComponent(Container aContainer)
		{
                        return calculationTo;
		}

		/**
		 * ÉtÉHÅ[ÉJÉXÇê›íËÇ∑ÇÈÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÉãÅ[ÉgÇ∆Ç∑ÇÈÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇ™êVÇµÇ≠äJénÇ≥ÇÍÇΩÇ∆Ç´Ç…ÅAÇ±ÇÃÉRÉìÉ|Å[ÉlÉìÉgÇ…ç≈èâÇ…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇ‹Ç∑ÅB
		 * @param aContainer ÉfÉtÉHÉãÉgÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃÉfÉtÉHÉãÉgÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getDefaultComponent(Container aContainer)
		{
                        return calculationTo;
		}
		
		/**
		 * ÉEÉBÉìÉhÉEÇ™ç≈èâÇ…ï\é¶Ç≥ÇÍÇΩÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * show() Ç‹ÇΩÇÕ setVisible(true) ÇÃåƒÇ—èoÇµÇ≈àÍìxÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆ÅA
		 * èâä˙âªÉRÉìÉ|Å[ÉlÉìÉgÇÕÇªÇÍà»ç~égópÇ≥ÇÍÇ‹ÇπÇÒÅB
		 * àÍìxï ÇÃÉEÉBÉìÉhÉEÇ…à⁄Ç¡ÇΩÉtÉHÅ[ÉJÉXÇ™çƒÇ—ê›íËÇ≥ÇÍÇΩèÍçáÅA
		 * Ç‹ÇΩÇÕÅAàÍìxîÒï\é¶èÛë‘Ç…Ç»Ç¡ÇΩÉEÉBÉìÉhÉEÇ™çƒÇ—ï\é¶Ç≥ÇÍÇΩèÍçáÇÕÅA
		 * ÇªÇÃÉEÉBÉìÉhÉEÇÃç≈å„Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇΩÉRÉìÉ|Å[ÉlÉìÉgÇ™ÉtÉHÅ[ÉJÉXèäóLé“Ç…Ç»ÇËÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÃÉfÉtÉHÉãÉgé¿ëïÇ≈ÇÕÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * @param window èâä˙ÉRÉìÉ|Å[ÉlÉìÉgÇ™ï‘Ç≥ÇÍÇÈÉEÉBÉìÉhÉE
		 * @return ç≈èâÇ…ÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÅBìKêÿÇ»ÉRÉìÉ|Å[ÉlÉìÉgÇ™Ç»Ç¢èÍçáÇÕ null
		 */
		public Component getInitialComponent(Window window)
		{
                        return calculationTo;
		}
		
                /**
                 * ëIëíÜÇÃê≈ãÊï™Çï‘ÇµÇ‹Ç∑ÅB
                 */
		private Component getSelectedTaxType()
		{
			if(rdoTaxUnit.isSelected())
			{
				return	rdoTaxUnit;
			}
			
			return	rdoTaxBlank;
		}
	}
}

