/*
 * ContractRateReportPanel.java
 *
 * Created on 2015/11/04
 */
package com.geobeck.sosia.pos.hair.report;

import java.awt.*;
import java.util.*;
import java.util.logging.*;
import javax.swing.*;

import com.geobeck.sosia.pos.system.SystemInfo;
import com.geobeck.sosia.pos.report.bean.*;
import com.geobeck.sosia.pos.hair.report.logic.ReportLogic;
import com.geobeck.sosia.pos.hair.report.util.JExcelApi;
import com.geobeck.sql.*;
import com.geobeck.swing.*;
import com.geobeck.sosia.pos.master.company.*;
import com.geobeck.sosia.pos.util.*;
import java.sql.SQLException;
import java.text.SimpleDateFormat;

/**
 *
 * @author lvtu
 */
public class ProposalReportPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx {

    //declare variable
    
    /**
     * Creates new form ContractReportPanel
     */
    public ProposalReportPanel() {
        initComponents();
        addMouseCursorChange();
        this.setSize(720, 500);
        this.setPath("ï™êÕí†ï[ÅÑÅÑññ±í†ï[");
        this.setTitle("íÒàƒèëàÍóó");
        this.setKeyListener();
        SystemInfo.initGroupShopComponents(cmbShop, 3);
        this.initStaff();
        cmbTargetPeriodStart.setDate(SystemInfo.getCurrentShop().getSystemDate().getTime());
        cmbTargetPeriodEnd.setDate(SystemInfo.getCurrentShop().getSystemDate().getTime());
 
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportTypeGroup = new javax.swing.ButtonGroup();
        taxGroup = new javax.swing.ButtonGroup();
        groupOutputCondition = new javax.swing.ButtonGroup();
        groupDateCondition = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblTargetPeriod = new javax.swing.JLabel();
        cmbTargetPeriodStart = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        jLabel1 = new javax.swing.JLabel();
        cmbTargetPeriodEnd = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        lblStaff = new javax.swing.JLabel();
        btnOutputExcel = new javax.swing.JButton();
        lblOutput = new javax.swing.JLabel();
        rdoAll = new javax.swing.JRadioButton();
        rdoNotContract = new javax.swing.JRadioButton();
        cmbstaff = new javax.swing.JComboBox();
        rdoInContract = new javax.swing.JRadioButton();
        lblShop = new javax.swing.JLabel();
        cmbShop = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        lbDatecondition = new javax.swing.JLabel();
        rdoCreateDate = new javax.swing.JRadioButton();
        rdoDealine = new javax.swing.JRadioButton();

        setFocusCycleRoot(true);

        jPanel1.setOpaque(false);

        lblTargetPeriod.setText("èWåvä˙ä‘");

        cmbTargetPeriodStart.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodStart.setForeground(java.awt.Color.white);
        cmbTargetPeriodStart.setMaximumSize(new java.awt.Dimension(65, 20));
        cmbTargetPeriodStart.setMinimumSize(new java.awt.Dimension(65, 20));
        cmbTargetPeriodStart.setPreferredSize(new java.awt.Dimension(85, 20));
        cmbTargetPeriodStart.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodStartFocusGained(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Å`");

        cmbTargetPeriodEnd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodEnd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodEndFocusGained(evt);
            }
        });

        lblStaff.setText("çÏê¨é“");

        btnOutputExcel.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutputExcel.setBorderPainted(false);
        btnOutputExcel.setContentAreaFilled(false);
        btnOutputExcel.setFocusCycleRoot(true);
        btnOutputExcel.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutputExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutputExcelActionPerformed(evt);
            }
        });

        lblOutput.setText("èoóÕèåè");

        groupOutputCondition.add(rdoAll);
        rdoAll.setSelected(true);
        rdoAll.setText("ëSÇƒ");
        rdoAll.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoAll.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoAll.setOpaque(false);

        groupOutputCondition.add(rdoNotContract);
        rdoNotContract.setText("ñ¢å_ñÒ");
        rdoNotContract.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoNotContract.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoNotContract.setOpaque(false);

        cmbstaff.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        groupOutputCondition.add(rdoInContract);
        rdoInContract.setText("å_ñÒçœ");
        rdoInContract.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoInContract.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoInContract.setOpaque(false);
        rdoInContract.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdoInContractStateChanged(evt);
            }
        });

        lblShop.setText("ëŒè€ìXï‹");

        cmbShop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbShopActionPerformed(evt);
            }
        });

        lbDatecondition.setText("ì˙ïtèåè");

        groupDateCondition.add(rdoCreateDate);
        rdoCreateDate.setSelected(true);
        rdoCreateDate.setText("çÏê¨ì˙");
        rdoCreateDate.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoCreateDate.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoCreateDate.setOpaque(false);

        groupDateCondition.add(rdoDealine);
        rdoDealine.setText("óLå¯ä˙å¿");
        rdoDealine.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoDealine.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoDealine.setOpaque(false);
        rdoDealine.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdoDealineStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(lblOutput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, lblShop, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, lblTargetPeriod, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(cmbTargetPeriodStart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(0, 0, 0)
                                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(0, 0, 0)
                                        .add(cmbTargetPeriodEnd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(cmbShop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 198, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(92, 92, 92)
                                .add(btnOutputExcel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(rdoAll, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(rdoInContract, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(lblStaff, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(cmbstaff, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(rdoNotContract, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                                .add(lbDatecondition, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(rdoCreateDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(rdoDealine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 131, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(lblShop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cmbShop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(btnOutputExcel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(2, 2, 2)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lbDatecondition, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(rdoCreateDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(rdoDealine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblTargetPeriod, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbTargetPeriodStart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbTargetPeriodEnd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblOutput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(rdoAll, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(rdoInContract, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(rdoNotContract, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblStaff, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbstaff, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(191, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnOutputExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutputExcelActionPerformed

        btnOutputExcel.setCursor(null);

        try {

            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

            ReportParameterBean paramBean = new ReportParameterBean();

            boolean logicResult = true;
            try {

                //ÉOÉãÅ[Év
                if (cmbShop.getSelectedItem() instanceof MstGroup) {
                    MstGroup mg = (MstGroup) cmbShop.getSelectedItem();
                    paramBean.setTargetName(mg.getGroupName());
                    paramBean.setShopIDList(mg.getShopIDListAll());
                } //ìXï‹
                else if (cmbShop.getSelectedItem() instanceof MstShop) {
                    MstShop ms = (MstShop) cmbShop.getSelectedItem();
                    paramBean.setTargetName(ms.getShopName());
                    paramBean.setShopIDList(ms.getShopID().toString());
                }

                //ëŒè€Ç∆Ç»ÇÈìXï‹Ç™ë∂ç›ÇµÇ»Ç¢èÍçá
                if (paramBean.getShopIDList().equals("")) {
                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(4001),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (0 < cmbstaff.getSelectedIndex()) {
                    MstStaff ms = (MstStaff) cmbstaff.getSelectedItem();
                    paramBean.setStaffId(ms.getStaffID());
                    paramBean.setStaffName(ms.getFullStaffName());
                }

                if (this.cmbTargetPeriodStart.getDate() == null
                        || this.cmbTargetPeriodEnd.getDate() == null) {
                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, "ëŒè€ä˙ä‘"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }
                Calendar start = Calendar.getInstance();
                Calendar end = Calendar.getInstance();

                start.setTime(this.cmbTargetPeriodStart.getDate());
                end.setTime(this.cmbTargetPeriodEnd.getDate());
                if (start.compareTo(end) != 0) {
                    if (start.after(end)) {
                        MessageDialog.showMessageDialog(this,
                                MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, "ëŒè€ä˙ä‘"),
                                this.getTitle(),
                                JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }

                paramBean.setTargetStartDate(this.cmbTargetPeriodStart.getDateStr());
                paramBean.setTargetEndDate(this.cmbTargetPeriodEnd.getDateStr());

                Calendar cal = Calendar.getInstance();
                cal.setTime(cmbTargetPeriodStart.getDate());
                cal.set(Calendar.HOUR_OF_DAY, 0);
                cal.set(Calendar.MINUTE, 0);
                cal.set(Calendar.SECOND, 0);
                paramBean.setTargetStartDateObj(cal.getTime());

                cal.setTime(cmbTargetPeriodEnd.getDate());
                cal.set(Calendar.HOUR_OF_DAY, 23);
                cal.set(Calendar.MINUTE, 59);
                cal.set(Calendar.SECOND, 59);
                paramBean.setTargetEndDateObj(cal.getTime());
               
            StringBuilder sql = new StringBuilder();
            
            sql.append("	SELECT t.*, ");
            sql.append("		   array_to_string(array ");
            sql.append("				(SELECT CASE WHEN dpd1.product_division = 2 THEN mi1.item_name ELSE mc1.course_name END ");
            sql.append("				 FROM data_proposal_detail dpd1 ");
            sql.append("				 LEFT JOIN mst_item mi1 ON mi1.item_id = dpd1.product_id ");
            sql.append("				 LEFT JOIN mst_course mc1 ON dpd1.product_id = mc1.course_id ");
            sql.append("				 WHERE dpd1.shop_id = t.shop_id ");
            sql.append("				 AND dpd1.proposal_id = t.proposal_id ), ', ') AS product_name ");
            sql.append("	FROM ");
            sql.append("	  (SELECT ms.shop_id, ");
            sql.append("			  ms.shop_name, ");
            sql.append("			  dp.proposal_date, ");
            sql.append("			  cus.customer_no, ");
            sql.append("			  cus.customer_name1, ");
            sql.append("			  cus.customer_name2, ");
            sql.append("			  staff.staff_id, ");
            sql.append("			  staff.staff_name1, ");
            sql.append("			  staff.staff_name2, ");
            sql.append("			  dp.proposal_id, ");
            sql.append("			  dp.proposal_name, ");
            sql.append("			  sum(CASE WHEN dpd.product_division = 2 THEN (dpd.product_value * dpd.product_num) ELSE 0 END) AS item_value, ");
            sql.append("			  sum(CASE WHEN dpd.product_division = 5 THEN (dpd.product_value) ELSE 0 END) AS course_value, ");
            sql.append("			  dp.proposal_valid_date, ");
            sql.append("			  shopcontract.shop_name  as shop_name_contract, ");
            sql.append("			  ds.slip_no ");
            sql.append("	   FROM data_proposal dp ");
            sql.append("	   INNER JOIN data_proposal_detail dpd ON dpd.shop_id = dp.shop_id ");
            sql.append("	   AND dpd.proposal_id = dp.proposal_id ");
            sql.append("	   INNER JOIN mst_shop ms ON ms.shop_id = dp.shop_id ");
            sql.append("	   INNER JOIN mst_staff staff ON staff.staff_id = dp.staff_id ");
            sql.append("	   INNER JOIN mst_customer cus ON cus.customer_id = dp.customer_id ");
            sql.append("	   LEFT JOIN mst_item mi ON mi.item_id = dpd.product_id ");
            sql.append("	   LEFT JOIN mst_item_class mic ON mic.item_class_id = mi.item_class_id ");
            sql.append("	   LEFT JOIN mst_course mc ON dpd.product_id = mc.course_id ");
            sql.append("	   LEFT JOIN mst_course_class mcc ON mcc.course_class_id = mc.course_class_id ");
            sql.append("	   LEFT JOIN mst_shop shopcontract ON shopcontract.shop_id = dp.contract_shop_id ");
            sql.append("	   LEFT JOIN data_sales ds ON ds.slip_no = dp.slip_no ");
            sql.append("	   AND ds.delete_date IS NULL ");
            sql.append("	   WHERE dp.shop_id IN(" + paramBean.getShopIDList() + ") ");
            if ( paramBean.getStaffId() != null) {
                sql.append("		 AND staff.staff_id = " + paramBean.getStaffId() +"  ");
            }
            sql.append("		 AND dp.delete_date IS NULL ");
            sql.append("		 AND dpd.delete_date IS NULL ");
            if (rdoCreateDate.isSelected()) {
                sql.append("	AND proposal_date BETWEEN '" + paramBean.getTargetStartDate() + " 00:00:00' and '" + paramBean.getTargetEndDate() + " 23:59:59' ");
            }else if (rdoDealine.isSelected()){
                sql.append("	AND proposal_valid_date BETWEEN '" + paramBean.getTargetStartDate() + " 00:00:00' and '" + paramBean.getTargetEndDate() + " 23:59:59' ");
            }
            if ( rdoInContract.isSelected()) {
                sql.append("		 AND dp.slip_no IS NOT NULL ");
            }else if (rdoNotContract.isSelected()) {
                sql.append("		 AND dp.slip_no IS NULL ");
            }
            sql.append("	   GROUP BY ms.shop_id, ");
            sql.append("				ms.shop_name, ");
            sql.append("				dp.proposal_date, ");
            sql.append("				cus.customer_no, ");
            sql.append("				cus.customer_name1, ");
            sql.append("				cus.customer_name2, ");
            sql.append("				staff.staff_id, ");
            sql.append("				staff.staff_name1, ");
            sql.append("				staff.staff_name2, ");
            sql.append("				dp.proposal_id, ");
            sql.append("				dp.proposal_name, ");
            sql.append("				dp.proposal_valid_date, ");
            sql.append("				shopcontract.shop_name, ");
            sql.append("				ds.slip_no) t     ");
                
            
            
            SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
            ConnectionWrapper cw = SystemInfo.getConnection();
            ResultSetWrapper rs = new ResultSetWrapper();

            try {
                
                rs = cw.executeQuery(sql.toString());
                if (!rs.next()) {
                    MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(4001),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
                    return;
                }

                JExcelApi jx = new JExcelApi("íÒàƒèëàÍóó");
                jx.setTemplateFile("/reports/íÒàƒèëàÍóó.xls");
                jx.setValue(2, 3, paramBean.getTargetName());
                if (rdoCreateDate.isSelected()) {
                    jx.setValue(2, 4, "çÏê¨ì˙");
                }else if (rdoDealine.isSelected()) {
                    jx.setValue(2, 4, "óLå¯ä˙å¿");
                }
                jx.setValue(2, 5, format.format(paramBean.getTargetStartDateObj()) + " Å` " + format.format(paramBean.getTargetEndDateObj()));
                if ( rdoAll.isSelected()) {
                    jx.setValue(2, 6, "ëSÇƒ");
                }else if (rdoInContract.isSelected()) {
                    jx.setValue(2, 6, "å_ñÒçœ");
                }else if (rdoNotContract.isSelected()) {
                    jx.setValue(2, 6, "ñ¢å_ñÒ");
                }
                jx.setValue(2, 7, paramBean.getStaffName());
                
                int row = 10;
                int num = 0;
                rs.last();
                num = rs.getRow();
                // insert row
                if (num > 1) {
                    jx.insertRow(row, num - 1);
                }
                
                rs.beforeFirst();
                 while (rs.next()) {
                    Double courseValue = rs.getDouble("course_value");
                    Double itemValue    = rs.getDouble("item_value");
                    Double total        = courseValue + itemValue;
                    
                    String FullName = (rs.getString("customer_name1") == null ? "" : rs.getString("customer_name1"))
                    + (rs.getString("customer_name2") == null || rs.getString("customer_name2").equals("") ? "" : "Å@" + rs.getString("customer_name2"));
                     
                    jx.setValue(1, row, rs.getString("shop_name"));
                    jx.setValue(2, row, format.format(rs.getDate("proposal_date")));
                    jx.setValue(3, row, rs.getString("customer_no"));
                    jx.setValue(4, row, FullName);
                    jx.setValue(5, row, rs.getString("proposal_name"));
                    jx.setValue(6, row, rs.getString("product_name"));
                    jx.setValue(7, row, courseValue.longValue());
                    jx.setValue(8, row, itemValue.longValue());
                    jx.setValue(9, row, total.longValue());
                    jx.setValue(10, row, format.format(rs.getDate("proposal_valid_date")));
                    jx.setValue(11, row, rs.getString("shop_name_contract"));
                    jx.setValue(12, row, rs.getString("slip_no"));
                    
                    row ++ ;
                 }
                
                jx.openWorkbook();
            } catch (Exception e) {
                SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(1099),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
            }
            } catch (Exception e) {
                SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(1099),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

        } finally {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }

    }//GEN-LAST:event_btnOutputExcelActionPerformed

    private void cmbTargetPeriodEndFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodEndFocusGained
        cmbTargetPeriodEnd.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodEndFocusGained

    private void cmbTargetPeriodStartFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodStartFocusGained
        cmbTargetPeriodStart.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodStartFocusGained

    private void cmbShopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbShopActionPerformed
        
    }//GEN-LAST:event_cmbShopActionPerformed

    private void rdoInContractStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdoInContractStateChanged

    }//GEN-LAST:event_rdoInContractStateChanged

    private void rdoDealineStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdoDealineStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoDealineStateChanged

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOutputExcel;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel cmbShop;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEnd;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStart;
    private javax.swing.JComboBox cmbstaff;
    private javax.swing.ButtonGroup groupDateCondition;
    private javax.swing.ButtonGroup groupOutputCondition;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbDatecondition;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JLabel lblShop;
    private javax.swing.JLabel lblStaff;
    private javax.swing.JLabel lblTargetPeriod;
    private javax.swing.JRadioButton rdoAll;
    private javax.swing.JRadioButton rdoCreateDate;
    private javax.swing.JRadioButton rdoDealine;
    private javax.swing.JRadioButton rdoInContract;
    private javax.swing.JRadioButton rdoNotContract;
    private javax.swing.ButtonGroup reportTypeGroup;
    private javax.swing.ButtonGroup taxGroup;
    // End of variables declaration//GEN-END:variables
    private ContractRateReportPanelFocusTraversalPolicy ftp =
            new ContractRateReportPanelFocusTraversalPolicy();

    /**
     * É{É^ÉìÇ…É}ÉEÉXÉJÅ[É\ÉãÇ™èÊÇ¡ÇΩÇ∆Ç´Ç…ÉJÅ[É\ÉãÇïœçXÇ∑ÇÈÉCÉxÉìÉgÇí«â¡Ç∑ÇÈÅB
     */
    private void addMouseCursorChange() {
        SystemInfo.addMouseCursorChange(btnOutputExcel);
    }

    private void setKeyListener() {
        cmbShop.addKeyListener(SystemInfo.getMoveNextField());
        rdoCreateDate.addKeyListener(SystemInfo.getMoveNextField());
        rdoDealine.addKeyListener(SystemInfo.getMoveNextField());
        cmbTargetPeriodEnd.addKeyListener(SystemInfo.getMoveNextField());
        cmbTargetPeriodEnd.addFocusListener(SystemInfo.getSelectText());
        cmbTargetPeriodStart.addKeyListener(SystemInfo.getMoveNextField());
        cmbTargetPeriodStart.addFocusListener(SystemInfo.getSelectText());
        rdoAll.addKeyListener(SystemInfo.getMoveNextField());
        rdoInContract.addKeyListener(SystemInfo.getMoveNextField());
        rdoNotContract.addKeyListener(SystemInfo.getMoveNextField());
        cmbstaff.addKeyListener(SystemInfo.getMoveNextField());
    }

    /**
     * ÉåÉWíSìñé“Çèâä˙âªÇ∑ÇÈÅB
     */
    private void initStaff() {
        cmbstaff.addItem(new MstStaff());
        SystemInfo.initStaffComponent(cmbstaff);
        cmbstaff.setSelectedIndex(0);
    }
    
    /**
     * ã∆ñ±ïÒçêâÊñ ópFocusTraversalPolicyÇéÊìæÇ∑ÇÈÅB
     *
     * @return ã∆ñ±ïÒçêâÊñ ópFocusTraversalPolicy
     */
    public ContractRateReportPanelFocusTraversalPolicy getFocusTraversalPolicy() {
        return ftp;
    }

    /**
     * ã∆ñ±ïÒçêâÊñ ópFocusTraversalPolicy
     */
    private class ContractRateReportPanelFocusTraversalPolicy
            extends FocusTraversalPolicy {

        /**
         * aComponBusinessReportFocusTraversalPolicyÅB aContainer ÇÕ aComponent
         * ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
         *
         * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
         * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
         * @return aComponent ÇÃÇ†Ç∆Ç…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ
         * null
         */
        public Component getComponentAfter(Container aContainer,
                Component aComponent) {
            if (aComponent.equals(rdoCreateDate)) {
                    return rdoDealine;
            }else if (aComponent.equals(rdoDealine)) {
                return cmbTargetPeriodStart;
            }else if (aComponent.equals(cmbTargetPeriodStart)) {
                return cmbTargetPeriodEnd;
            } else if (aComponent.equals(cmbTargetPeriodEnd)) {
                return rdoAll;
            } else if (aComponent.equals(rdoAll)) {
                return rdoInContract;
            } else if (aComponent.equals(rdoInContract)) {
                return rdoNotContract;
            } 
            return cmbstaff;
        }

        /**
         * aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ Component Çï‘ÇµÇ‹Ç∑ÅB aContainer ÇÕ aComponent
         * ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
         *
         * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
         * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
         * @return aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ
         * null
         */
        public Component getComponentBefore(Container aContainer,
                Component aComponent) {
            if (aComponent.equals(rdoCreateDate)) {
                    return rdoDealine;
            }else if (aComponent.equals(rdoDealine)) {
                return cmbTargetPeriodStart;
            }else if (aComponent.equals(cmbTargetPeriodStart)) {
                return cmbTargetPeriodEnd;
            } else if (aComponent.equals(cmbTargetPeriodEnd)) {
                return rdoAll;
            } else if (aComponent.equals(rdoAll)) {
                return rdoInContract;
            } else if (aComponent.equals(rdoInContract)) {
                return rdoNotContract;
            } 
            return cmbstaff;
        }

        /**
         * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈èâÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAèáï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ
         * Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
         *
         * @param aContainer êÊì™ÇÃ Component
         * Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
         * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃêÊì™ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component
         * Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
         */
        public Component getFirstComponent(Container aContainer) {
            return cmbShop;
        }

        /**
         * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAãtï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ
         * Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
         *
         * @param aContainer aContainer - ç≈å„ÇÃ Component
         * Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
         * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component
         * Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
         */
        public Component getLastComponent(Container aContainer) {
            return cmbstaff;
        }

        /**
         * ÉtÉHÅ[ÉJÉXÇê›íËÇ∑ÇÈÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB aContainer
         * ÇÉãÅ[ÉgÇ∆Ç∑ÇÈÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇ™êVÇµÇ≠äJénÇ≥ÇÍÇΩÇ∆Ç´Ç…ÅAÇ±ÇÃÉRÉìÉ|Å[ÉlÉìÉgÇ…ç≈èâÇ…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇ‹Ç∑ÅB
         *
         * @param aContainer ÉfÉtÉHÉãÉgÇÃ Component
         * Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
         * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃÉfÉtÉHÉãÉgÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component
         * Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
         */
        public Component getDefaultComponent(Container aContainer) {
            return cmbShop;
        }

        /**
         * ÉEÉBÉìÉhÉEÇ™ç≈èâÇ…ï\é¶Ç≥ÇÍÇΩÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB show() Ç‹ÇΩÇÕ setVisible(true)
         * ÇÃåƒÇ—èoÇµÇ≈àÍìxÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆ÅA èâä˙âªÉRÉìÉ|Å[ÉlÉìÉgÇÕÇªÇÍà»ç~égópÇ≥ÇÍÇ‹ÇπÇÒÅB
         * àÍìxï ÇÃÉEÉBÉìÉhÉEÇ…à⁄Ç¡ÇΩÉtÉHÅ[ÉJÉXÇ™çƒÇ—ê›íËÇ≥ÇÍÇΩèÍçáÅA Ç‹ÇΩÇÕÅAàÍìxîÒï\é¶èÛë‘Ç…Ç»Ç¡ÇΩÉEÉBÉìÉhÉEÇ™çƒÇ—ï\é¶Ç≥ÇÍÇΩèÍçáÇÕÅA
         * ÇªÇÃÉEÉBÉìÉhÉEÇÃç≈å„Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇΩÉRÉìÉ|Å[ÉlÉìÉgÇ™ÉtÉHÅ[ÉJÉXèäóLé“Ç…Ç»ÇËÇ‹Ç∑ÅB
         * Ç±ÇÃÉÅÉ\ÉbÉhÇÃÉfÉtÉHÉãÉgé¿ëïÇ≈ÇÕÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
         *
         * @param window èâä˙ÉRÉìÉ|Å[ÉlÉìÉgÇ™ï‘Ç≥ÇÍÇÈÉEÉBÉìÉhÉE
         * @return ç≈èâÇ…ÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÅBìKêÿÇ»ÉRÉìÉ|Å[ÉlÉìÉgÇ™Ç»Ç¢èÍçáÇÕ null
         */
    }
}
