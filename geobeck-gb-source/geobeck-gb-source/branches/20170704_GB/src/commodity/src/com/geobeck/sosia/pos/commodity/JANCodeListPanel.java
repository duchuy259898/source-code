package com.geobeck.sosia.pos.commodity;
/*
 * JANCodeListPanel.java
 *
 * Created on 2007/04/23, 15:16
 */

import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
import java.io.*;
import java.sql.*;
import java.util.*;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.*;
import javax.swing.text.*;

import com.geobeck.sql.*;
import com.geobeck.swing.*;
import com.geobeck.util.*;
import com.geobeck.sosia.pos.data.commodity.*;
import com.geobeck.sosia.pos.report.util.*;
import com.geobeck.sosia.pos.system.*;
import com.geobeck.sosia.pos.util.*;
import com.geobeck.sosia.pos.master.product.*;

/**
 *
 * @author  katagiri
 */
public class JANCodeListPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx
{
	
	/**
	 * Creates new form JANCodeListPanel
	 */
	public JANCodeListPanel()
	{
		initComponents();
		this.setPath("商品管理");
		this.setTitle("JANコード一覧");
		this.setSize(833, 691);
		this.init();
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        itemClass = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        item = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        jLabel3 = new javax.swing.JLabel();
        btnOutput = new javax.swing.JButton();

        jPanel1.setOpaque(false);
        jLabel2.setText("\u5546\u54c1\u5206\u985e");

        itemClass.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                itemClassActionPerformed(evt);
            }
        });

        jLabel3.setText("\u5546\u54c1");

        btnOutput.setIcon(SystemInfo.getImageIcon("/button/print/output_pdf_off.jpg"));
        btnOutput.setBorderPainted(false);
        btnOutput.setContentAreaFilled(false);
        btnOutput.setPressedIcon(SystemInfo.getImageIcon("/button/print/output_pdf_on.jpg"));
        btnOutput.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnOutputActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(item, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(itemClass, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnOutput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(itemClass, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(item, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .add(btnOutput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void btnOutputActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnOutputActionPerformed
	{//GEN-HEADEREND:event_btnOutputActionPerformed
		this.print();
	}//GEN-LAST:event_btnOutputActionPerformed

	private void itemClassActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_itemClassActionPerformed
	{//GEN-HEADEREND:event_itemClassActionPerformed
		this.initItem();
	}//GEN-LAST:event_itemClassActionPerformed
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOutput;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel item;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel itemClass;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
	
	private	JANCodeList			janCodeList		=	null;
	
	private void init()
	{
		janCodeList		=	new JANCodeList();
		this.initItemClass();
	}
	
	private void initItemClass()
	{
		itemClass.removeAllItems();
		
		MstItemClass	all	=	new MstItemClass();
		all.setItemClassName("全て");
		itemClass.addItem(all);
		
		for(MstItemClass mic : janCodeList.getItemClasses())
		{
			itemClass.addItem(mic);
		}
	}
	
	private void initItem()
	{
		item.removeAllItems();
		MstItem	all	=	new MstItem();
		all.setItemName("全て");
		item.addItem(all);
		
		if(0 <= itemClass.getSelectedIndex())
		{
			MstItemClass	mic		=	(MstItemClass)itemClass.getSelectedItem();
			
			for(MstItem mi : mic)
			{
				item.addItem(mi);
			}
		}
	}
	
	private void print()
	{
		this.setJANCodeList();
		janCodeList.print();
	}
	
	private void setJANCodeList()
	{
		janCodeList.clear();
		
		int		index	=	0;
		
		if(itemClass.getSelectedIndex() == 0)
		{
			for(MstItemClass mic : janCodeList.getItemClasses())
			{
				this.setJANCodeList(mic);
			}
		}
		else if(item.getSelectedIndex() == 0)
		{
			MstItemClass	mic	=	(MstItemClass)itemClass.getSelectedItem();
			
			this.setJANCodeList(mic);
		}
		else
		{
			JANCodeListData	jcld	=	new JANCodeListData(
					(MstItemClass)itemClass.getSelectedItem());
			jcld.setJanCodeData(0, janCodeList.getJANCodeData(
					(MstItem)item.getSelectedItem()));
			janCodeList.add(jcld);
		}
	}
	
	
	private void setJANCodeList(MstItemClass mic)
	{
		int		index	=	0;
		JANCodeListData	jcld	=	null;
		
		if(mic.size() == 0)
		{
			return;
		}

		for(MstItem mi : mic)
		{
			if(index == 0)
			{
				if(jcld != null)
				{
					janCodeList.add(jcld);
				}
				
				jcld	=	new JANCodeListData(mic);
			}

			jcld.setJanCodeData(index, janCodeList.getJANCodeData(mi));
			index	++;

			if(index == 4)
			{
				index	=	0;
			}
		}

		if(0 < index && jcld != null)
		{
			janCodeList.add(jcld);
		}
	}
}
