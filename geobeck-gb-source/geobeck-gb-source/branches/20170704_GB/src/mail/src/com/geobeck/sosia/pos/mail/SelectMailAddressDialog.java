/*
 * SelectMailAddressDialog.java
 *
 * Created on 2007/02/26, 16:54
 */

package com.geobeck.sosia.pos.mail;

import com.geobeck.sosia.pos.system.*;

/**
 *
 * @author  katagiri
 */
public class SelectMailAddressDialog extends javax.swing.JDialog
{
	
	/** Creates new form SelectMailAddressDialog */
	public SelectMailAddressDialog(java.awt.Frame parent, boolean modal,
			SelectMailAddressDialogOpener smado)
	{
		super(parent, modal);
		initComponents();
		this.smado	=	smado;
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        mailAddressGroup = new javax.swing.ButtonGroup();
        imagePanel1 = new com.geobeck.swing.ImagePanel();
        pcOnly = new javax.swing.JRadioButton();
        cellularOnly = new javax.swing.JRadioButton();
        pcPriority = new javax.swing.JRadioButton();
        cellularPriority = new javax.swing.JRadioButton();
        decideButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        mailAddressGroup.add(pcOnly);
        pcOnly.setText("\uff30\uff23\u30e1\u30fc\u30eb\u306e\u307f");
        pcOnly.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        pcOnly.setMargin(new java.awt.Insets(0, 0, 0, 0));

        mailAddressGroup.add(cellularOnly);
        cellularOnly.setText("\u643a\u5e2f\u30e1\u30fc\u30eb\u306e\u307f");
        cellularOnly.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        cellularOnly.setMargin(new java.awt.Insets(0, 0, 0, 0));

        mailAddressGroup.add(pcPriority);
        pcPriority.setSelected(true);
        pcPriority.setText("\uff30\uff23\u512a\u5148\uff08\uff30\uff23\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304c\u5165\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u643a\u5e2f\u306e\u65b9\u306b\u9001\u4fe1\u3055\u308c\u307e\u3059\u3002\uff09");
        pcPriority.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        pcPriority.setMargin(new java.awt.Insets(0, 0, 0, 0));

        mailAddressGroup.add(cellularPriority);
        cellularPriority.setText("\u643a\u5e2f\u512a\u5148\uff08\u643a\u5e2f\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304c\u5165\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u3001\uff30\uff23\u306e\u65b9\u306b\u9001\u4fe1\u3055\u308c\u307e\u3059\u3002\uff09");
        cellularPriority.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        cellularPriority.setMargin(new java.awt.Insets(0, 0, 0, 0));

        decideButton.setIcon(SystemInfo.getImageIcon("/button/select/select_off.jpg"));
        decideButton.setBorderPainted(false);
        decideButton.setContentAreaFilled(false);
        decideButton.setPressedIcon(SystemInfo.getImageIcon("/button/select/select_on.jpg"));
        decideButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                decideButtonActionPerformed(evt);
            }
        });

        backButton.setIcon(SystemInfo.getImageIcon("/button/common/back_off.jpg"));
        backButton.setBorderPainted(false);
        backButton.setContentAreaFilled(false);
        backButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/back_on.jpg"));
        backButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                backButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout imagePanel1Layout = new org.jdesktop.layout.GroupLayout(imagePanel1);
        imagePanel1.setLayout(imagePanel1Layout);
        imagePanel1Layout.setHorizontalGroup(
            imagePanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(imagePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(imagePanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pcPriority)
                    .add(imagePanel1Layout.createSequentialGroup()
                        .add(decideButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(backButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(cellularPriority)
                    .add(pcOnly)
                    .add(cellularOnly))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        imagePanel1Layout.setVerticalGroup(
            imagePanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(imagePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(pcPriority)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cellularPriority)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pcOnly)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cellularOnly)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 28, Short.MAX_VALUE)
                .add(imagePanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(decideButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(backButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, imagePanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(imagePanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void backButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_backButtonActionPerformed
	{//GEN-HEADEREND:event_backButtonActionPerformed
		smado.setSelectedAddress(-1);
		this.setVisible(false);
	}//GEN-LAST:event_backButtonActionPerformed

	private void decideButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_decideButtonActionPerformed
	{//GEN-HEADEREND:event_decideButtonActionPerformed
		this.setSelectedAddress();
		this.setVisible(false);
	}//GEN-LAST:event_decideButtonActionPerformed
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JRadioButton cellularOnly;
    private javax.swing.JRadioButton cellularPriority;
    private javax.swing.JButton decideButton;
    private com.geobeck.swing.ImagePanel imagePanel1;
    private javax.swing.ButtonGroup mailAddressGroup;
    private javax.swing.JRadioButton pcOnly;
    private javax.swing.JRadioButton pcPriority;
    // End of variables declaration//GEN-END:variables
	
	private	SelectMailAddressDialogOpener smado		=	null;
	
	private void setSelectedAddress()
	{
		Integer		selectedAddress	=	-1;
		
		if(pcPriority.isSelected())
		{
			selectedAddress	=	0;
		}
		else if(cellularPriority.isSelected())
		{
			selectedAddress	=	1;
		}
		else if(pcOnly.isSelected())
		{
			selectedAddress	=	2;
		}
		else if(cellularOnly.isSelected())
		{
			selectedAddress	=	3;
		}
		
		smado.setSelectedAddress(selectedAddress);
	}
}
