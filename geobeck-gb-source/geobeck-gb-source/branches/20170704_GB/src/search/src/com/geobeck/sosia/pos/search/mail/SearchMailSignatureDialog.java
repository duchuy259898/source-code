/*
 * SearchMailSignatureDialog.java
 *
 * Created on 2006/11/03, 13:50
 */

package com.geobeck.sosia.pos.search.mail;

import java.util.*;
import java.util.logging.*;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;

import com.geobeck.sql.*;
import com.geobeck.sosia.pos.system.*;
import com.geobeck.sosia.pos.master.mail.*;
import com.geobeck.swing.*;
import com.geobeck.sosia.pos.swing.*;

/**
 *
 * @author  katagiri
 */
public class SearchMailSignatureDialog extends javax.swing.JDialog
{
	
	/** Creates new form SearchMailSignatureDialog */
	public SearchMailSignatureDialog(java.awt.Frame parent, boolean modal,
			Integer groupID, Integer shopID)
	{
		super(parent, modal);
		initComponents();
		init(groupID, shopID);
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        signatureGroup = new javax.swing.ButtonGroup();
        bakcPanel = new com.geobeck.swing.ImagePanel();
        signatureBodyScrollPane = new javax.swing.JScrollPane();
        signatureBody = new javax.swing.JTextArea();
        signature2 = new javax.swing.JRadioButton();
        signature3 = new javax.swing.JRadioButton();
        signature1 = new javax.swing.JRadioButton();
        backButton = new javax.swing.JButton();
        selectButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        bakcPanel.setImage(SystemInfo.getImageIcon("/contents_background.jpg"));
        signatureBody.setColumns(20);
        signatureBody.setRows(5);
        signatureBodyScrollPane.setViewportView(signatureBody);

        signatureGroup.add(signature2);
        signature2.setText("\u7f72\u540d\uff12");
        signature2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        signature2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        signature2.setOpaque(false);

        signatureGroup.add(signature3);
        signature3.setText("\u7f72\u540d\uff13");
        signature3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        signature3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        signature3.setOpaque(false);

        signatureGroup.add(signature1);
        signature1.setSelected(true);
        signature1.setText("\u7f72\u540d\uff11");
        signature1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        signature1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        signature1.setOpaque(false);

        backButton.setIcon(SystemInfo.getImageIcon("/button/common/close_off.jpg"));
        backButton.setBorderPainted(false);
        backButton.setContentAreaFilled(false);
        backButton.setFocusable(false);
        backButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/close_on.jpg"));
        backButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                backButtonbackPrevious(evt);
            }
        });

        selectButton.setIcon(SystemInfo.getImageIcon("/button/select/select_off.jpg"));
        selectButton.setBorderPainted(false);
        selectButton.setContentAreaFilled(false);
        selectButton.setFocusable(false);
        selectButton.setPressedIcon(SystemInfo.getImageIcon("/button/select/select_on.jpg"));
        selectButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                selectButtonselectCustomer(evt);
            }
        });

        org.jdesktop.layout.GroupLayout bakcPanelLayout = new org.jdesktop.layout.GroupLayout(bakcPanel);
        bakcPanel.setLayout(bakcPanelLayout);
        bakcPanelLayout.setHorizontalGroup(
            bakcPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, bakcPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(bakcPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, signatureBodyScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                    .add(bakcPanelLayout.createSequentialGroup()
                        .add(signature1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(signature2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(signature3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(selectButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(backButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        bakcPanelLayout.linkSize(new java.awt.Component[] {signature1, signature2, signature3}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        bakcPanelLayout.setVerticalGroup(
            bakcPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(bakcPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(bakcPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(signature1)
                    .add(signature2)
                    .add(signature3)
                    .add(backButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(selectButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(signatureBodyScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, bakcPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(bakcPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void selectButtonselectCustomer(java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectButtonselectCustomer
	{//GEN-HEADEREND:event_selectButtonselectCustomer
		this.setSelectedSignature();
		this.setVisible(false);
	}//GEN-LAST:event_selectButtonselectCustomer

	private void backButtonbackPrevious(java.awt.event.ActionEvent evt)//GEN-FIRST:event_backButtonbackPrevious
	{//GEN-HEADEREND:event_backButtonbackPrevious
		this.setVisible(false);
	}//GEN-LAST:event_backButtonbackPrevious
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private com.geobeck.swing.ImagePanel bakcPanel;
    private javax.swing.JButton selectButton;
    private javax.swing.JRadioButton signature1;
    private javax.swing.JRadioButton signature2;
    private javax.swing.JRadioButton signature3;
    private javax.swing.JTextArea signatureBody;
    private javax.swing.JScrollPane signatureBodyScrollPane;
    private javax.swing.ButtonGroup signatureGroup;
    // End of variables declaration//GEN-END:variables
	
	private	MstMailSignature	currentSignature	=	null;
	
	private	Integer				selectedSignatureID	=	null;
	private String				selectedSignature	=	"";
	
	public MstMailSignature getCurrentSignature()
	{
		if(currentSignature == null)
		{
			currentSignature	=	new MstMailSignature();
		}
		return currentSignature;
	}

	public void setCurrentSignature(MstMailSignature currentSignature)
	{
		this.currentSignature = currentSignature;
	}
	
	private void setSelectedSignature()
	{
		selectedSignatureID	=	this.getCurrentSignatureID();
		selectedSignature	=	this.getCurrentSignature().getMailSignaturBody();
	}
	
	public Integer getSelectedSignatureID()
	{
		return	selectedSignatureID;
	}
	
	public String getSelectedSignature()
	{
		return	selectedSignature;
	}
	
	private void init(Integer groupID, Integer shopID)
	{
		this.getCurrentSignature().setGroupID(groupID);
		this.getCurrentSignature().setShopID(shopID);
		
		this.addSignatureChangeListener(signature1);
		this.addSignatureChangeListener(signature2);
		this.addSignatureChangeListener(signature3);
		
		this.changeCurrentSignature();
	}
	
	private void addSignatureChangeListener(javax.swing.JRadioButton sigRadio)
	{
        sigRadio.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                changeCurrentSignature();
            }
        });
	}
	
	private void changeCurrentSignature()
	{
		getCurrentSignature().setMailSignaturBody("");
		
		getCurrentSignature().setMailSignaturID(this.getCurrentSignatureID());
		
		try
		{
			getCurrentSignature().load(SystemInfo.getConnection());
		}
		catch(Exception e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
		
		signatureBody.setText(getCurrentSignature().getMailSignaturBody());
		
		signatureBody.updateUI();
	}
	
	private Integer getCurrentSignatureID()
	{
		if(signature1.isSelected())
		{
			return	1;
		}
		else if(signature2.isSelected())
		{
			return	2;
		}
		else if(signature3.isSelected())
		{
			return	3;
		}
		
		return	0;
	}
}
