/*
 * SearchAccountDialog.java
 *
 * Created on 2006/05/08, 15:59
 */

package com.geobeck.sosia.pos.search.account;

import com.geobeck.sosia.pos.data.account.DataSales;
import com.geobeck.sosia.pos.master.account.MstPaymentClass;
import com.geobeck.sosia.pos.system.SystemInfo;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.*;
import javax.swing.text.*;
import java.sql.*;
import java.util.*;
import java.util.logging.*;

import com.geobeck.sql.*;
import com.geobeck.swing.*;
import com.geobeck.util.*;
import com.geobeck.sosia.pos.master.*;
import com.geobeck.sosia.pos.master.company.*;
import com.geobeck.sosia.pos.search.*;
import com.geobeck.sosia.pos.swing.*;
import com.geobeck.sosia.pos.swing.company.*;
import com.geobeck.sosia.pos.util.*;

/**
 * ì`ï[åüçıâÊñ 
 * @author katagiri
 */
public class SearchAccountDialog extends javax.swing.JDialog
{
	/**
	 * ÉeÅ[ÉuÉãÇÃïùÇÃç≈è¨íl
	 */
	private final int	TABLE_WIDTH_MIN		=	440;
	
	/**
	 * ÉRÉìÉXÉgÉâÉNÉ^
	 * @param parent 
	 * @param modal 
	 */
	public SearchAccountDialog(java.awt.Frame parent, boolean modal)
	{
		super(parent, modal);
		this.init();
		initComponents();
		SystemInfo.initGroupShopComponents(shop, 2);
		sa.setShop((MstShop)shop.getSelectedItem());
		addMouseCursorChange();
		this.initStaff();
		this.setListener();
		SwingUtil.moveCenter(this);
	}
	/**
	 * ÉRÉìÉXÉgÉâÉNÉ^
	 * @param parent 
	 * @param modal 
	 */
	public SearchAccountDialog(java.awt.Dialog parent, boolean modal)
	{
		super(parent, modal);
		this.init();
		initComponents();
		addMouseCursorChange();
		this.setListener();
		SwingUtil.moveCenter(this);
		
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        backPanel = new com.geobeck.swing.ImagePanel();
        selectButton = new javax.swing.JButton();
        salesDateLabel = new javax.swing.JLabel();
        slipNoLabel = new javax.swing.JLabel();
        customerIDLabel = new javax.swing.JLabel();
        toLabel1 = new javax.swing.JLabel();
        slipNo1 = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)slipNo1.getDocument()).setDocumentFilter(
            new CustomFilter(9, CustomFilter.NUMERIC));
        toLabel2 = new javax.swing.JLabel();
        slipNo2 = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)slipNo2.getDocument()).setDocumentFilter(
            new CustomFilter(9, CustomFilter.NUMERIC));
        customerNo1 = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)customerNo1.getDocument()).setDocumentFilter(
            new CustomFilter(15, CustomFilter.ALPHAMERIC));
        toLabel3 = new javax.swing.JLabel();
        customerNo2 = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)customerNo2.getDocument()).setDocumentFilter(
            new CustomFilter(15, CustomFilter.ALPHAMERIC));
        staffLabel = new javax.swing.JLabel();
        paymentClassLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        accountsScrollPane = new javax.swing.JScrollPane();
        searchResult = new javax.swing.JTable();
        salesDate1 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        salesDate2 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        deleteButton = new javax.swing.JButton();
        staff = new javax.swing.JComboBox();
        paymentClassPanel = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        shop = new javax.swing.JComboBox();
        shopLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("\u4f1d\u7968\u691c\u7d22");
        setFocusTraversalPolicy(getFocusTraversalPolicy());
        addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentResized(java.awt.event.ComponentEvent evt)
            {
                formComponentResized(evt);
            }
        });

        backPanel.setImage(SystemInfo.getImageIcon("/contents_background.jpg"));
        selectButton.setIcon(SystemInfo.getImageIcon("/button/select/select_off.jpg"));
        selectButton.setBorderPainted(false);
        selectButton.setContentAreaFilled(false);
        selectButton.setPressedIcon(SystemInfo.getImageIcon("/button/select/select_on.jpg"));
        selectButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                selectButtonActionPerformed(evt);
            }
        });

        salesDateLabel.setText("\u58f2\u4e0a\u65e5");

        slipNoLabel.setText("\u4f1d\u7968No.");

        customerIDLabel.setText("\u9867\u5ba2No.");

        toLabel1.setText("\uff5e");

        slipNo1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        slipNo1.setColumns(9);
        slipNo1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        toLabel2.setText("\uff5e");

        slipNo2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        slipNo2.setColumns(9);
        slipNo2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        customerNo1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        customerNo1.setColumns(15);

        toLabel3.setText("\uff5e");

        customerNo2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        customerNo2.setColumns(15);

        staffLabel.setText("\u30ec\u30b8\u62c5\u5f53\u8005");

        paymentClassLabel.setText("\u652f\u6255\u533a\u5206");

        searchButton.setIcon(SystemInfo.getImageIcon("/button/search/search_off.jpg"));
        searchButton.setBorderPainted(false);
        searchButton.setContentAreaFilled(false);
        searchButton.setPressedIcon(SystemInfo.getImageIcon("/button/search/search_on.jpg"));
        searchButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchButtonActionPerformed(evt);
            }
        });

        accountsScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        this.initPaymentClass();
        searchResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "îÑè„ì˙", "ì`ï[No.", "å⁄ãqNo.", "å⁄ãqñº", "ÉåÉWíSìñé“", "åªã‡éxï•", "ÉJÅ[Éhéxï•", "êMîÃéxï•"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Long.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        searchResult.setSelectionBackground(new java.awt.Color(220, 220, 220));
        searchResult.setSelectionForeground(new java.awt.Color(0, 0, 0));
        searchResult.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        searchResult.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(searchResult, SystemInfo.getTableHeaderRenderer());
        searchResult.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        SelectTableCellRenderer.setSelectTableCellRenderer(searchResult);
        searchResult.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                searchResultMouseClicked(evt);
            }
        });

        accountsScrollPane.setViewportView(searchResult);

        salesDate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        salesDate1.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                salesDate1FocusGained(evt);
            }
        });

        salesDate2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        salesDate2.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                salesDate2FocusGained(evt);
            }
        });

        deleteButton.setIcon(SystemInfo.getImageIcon("/button/common/delete_off.jpg"));
        deleteButton.setBorderPainted(false);
        deleteButton.setContentAreaFilled(false);
        deleteButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/delete_on.jpg"));
        deleteButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteButtonActionPerformed(evt);
            }
        });

        staff.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        paymentClassPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 3));

        paymentClassPanel.setOpaque(false);

        backButton.setIcon(SystemInfo.getImageIcon("/button/common/close_off.jpg"));
        backButton.setBorderPainted(false);
        backButton.setContentAreaFilled(false);
        backButton.setFocusTraversalPolicy(getFocusTraversalPolicy());
        backButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/close_on.jpg"));
        backButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                backButtonActionPerformed(evt);
            }
        });

        shop.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        shop.setRenderer(new GroupComboBoxCellRenderer());

        shopLabel.setText("\u5e97\u8217");

        org.jdesktop.layout.GroupLayout backPanelLayout = new org.jdesktop.layout.GroupLayout(backPanel);
        backPanel.setLayout(backPanelLayout);
        backPanelLayout.setHorizontalGroup(
            backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(accountsScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                    .add(backPanelLayout.createSequentialGroup()
                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(backPanelLayout.createSequentialGroup()
                                .add(paymentClassLabel)
                                .add(29, 29, 29)
                                .add(paymentClassPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 279, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(searchButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(backPanelLayout.createSequentialGroup()
                                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(slipNoLabel)
                                    .add(shopLabel))
                                .add(37, 37, 37)
                                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(shop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 209, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(backPanelLayout.createSequentialGroup()
                                        .add(slipNo1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(toLabel2)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(slipNo2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(backPanelLayout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(staffLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(customerIDLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE))
                                    .add(salesDateLabel))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(staff, 0, 275, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, backPanelLayout.createSequentialGroup()
                                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                            .add(customerNo1, 0, 0, Short.MAX_VALUE)
                                            .add(salesDate1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(backPanelLayout.createSequentialGroup()
                                                .add(toLabel1)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(salesDate2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(backPanelLayout.createSequentialGroup()
                                                .add(toLabel3)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(customerNo2, 0, 0, Short.MAX_VALUE)))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(backButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, backPanelLayout.createSequentialGroup()
                                .add(134, 134, 134)
                                .add(selectButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(deleteButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        backPanelLayout.setVerticalGroup(
            backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(backPanelLayout.createSequentialGroup()
                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, salesDate2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, salesDateLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, salesDate1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                            .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(shop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(shopLabel)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(slipNoLabel)
                            .add(toLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(slipNo2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(slipNo1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(backPanelLayout.createSequentialGroup()
                                .add(paymentClassLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 20, Short.MAX_VALUE)
                                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(searchButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(deleteButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(selectButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(paymentClassPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(backPanelLayout.createSequentialGroup()
                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(backPanelLayout.createSequentialGroup()
                                .add(31, 31, 31)
                                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(customerIDLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(customerNo1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(toLabel3)
                                    .add(customerNo2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(backButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(toLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(staff, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(staffLabel))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(accountsScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addContainerGap())
        );

        backPanelLayout.linkSize(new java.awt.Component[] {customerNo1, customerNo2, slipNo1, slipNo2, staff}, org.jdesktop.layout.GroupLayout.VERTICAL);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteButtonActionPerformed
	{//GEN-HEADEREND:event_deleteButtonActionPerformed
		this.delete();
	}//GEN-LAST:event_deleteButtonActionPerformed

	private void salesDate2FocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_salesDate2FocusGained
	{//GEN-HEADEREND:event_salesDate2FocusGained
		if(salesDate2.getInputContext() != null)
			salesDate2.getInputContext().setCharacterSubsets(null);
	}//GEN-LAST:event_salesDate2FocusGained

	private void salesDate1FocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_salesDate1FocusGained
	{//GEN-HEADEREND:event_salesDate1FocusGained
		if(salesDate1.getInputContext() != null)
			salesDate1.getInputContext().setCharacterSubsets(null);
	}//GEN-LAST:event_salesDate1FocusGained

	private void searchResultMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_searchResultMouseClicked
	{//GEN-HEADEREND:event_searchResultMouseClicked
		if(evt.getClickCount() == 2)
		{
			if(0 <= searchResult.getSelectedRow())
			{
				this.select();
			}
		}
	}//GEN-LAST:event_searchResultMouseClicked

	private void searchButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchButtonActionPerformed
	{//GEN-HEADEREND:event_searchButtonActionPerformed
		this.searchAccount();
		this.showAccount();
	}//GEN-LAST:event_searchButtonActionPerformed

	private void selectButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectButtonActionPerformed
	{//GEN-HEADEREND:event_selectButtonActionPerformed
		this.select();
	}//GEN-LAST:event_selectButtonActionPerformed

	/**
	 * ÉtÉHÅ[ÉÄÇÃÉTÉCÉYÇïœçXÇµÇΩÇ∆Ç´ÇÃèàóù
	 * @param evt 
	 */
	private void formComponentResized(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentResized
	{//GEN-HEADEREND:event_formComponentResized
		this.resizeComponets();
	}//GEN-LAST:event_formComponentResized

	/**
	 * ñﬂÇÈÉ{É^ÉìÇ™âüÇ≥ÇÍÇΩÇ∆Ç´ÇÃèàóù
	 * @param evt 
	 */
	private void backButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_backButtonActionPerformed
	{//GEN-HEADEREND:event_backButtonActionPerformed
		this.setVisible(false);
	}//GEN-LAST:event_backButtonActionPerformed

	/**
	 * ëIëÉ{É^ÉìÇ™âüÇ≥ÇÍÇΩÇ∆Ç´ÇÃèàóù
	 * @param evt 
	 */	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane accountsScrollPane;
    private javax.swing.JButton backButton;
    private com.geobeck.swing.ImagePanel backPanel;
    private javax.swing.JLabel customerIDLabel;
    private com.geobeck.swing.JFormattedTextFieldEx customerNo1;
    private com.geobeck.swing.JFormattedTextFieldEx customerNo2;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel paymentClassLabel;
    private javax.swing.JPanel paymentClassPanel;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo salesDate1;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo salesDate2;
    private javax.swing.JLabel salesDateLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JTable searchResult;
    private javax.swing.JButton selectButton;
    private javax.swing.JComboBox shop;
    private javax.swing.JLabel shopLabel;
    private com.geobeck.swing.JFormattedTextFieldEx slipNo1;
    private com.geobeck.swing.JFormattedTextFieldEx slipNo2;
    private javax.swing.JLabel slipNoLabel;
    private javax.swing.JComboBox staff;
    private javax.swing.JLabel staffLabel;
    private javax.swing.JLabel toLabel1;
    private javax.swing.JLabel toLabel2;
    private javax.swing.JLabel toLabel3;
    // End of variables declaration//GEN-END:variables
	
	private ArrayList<JCheckBox> paymentClasses	=	new ArrayList<JCheckBox>();
	
	private SearchAccount	sa	=	new SearchAccount();
	
	private Integer		selectedSlipNo	=	null;
	
	private boolean		parentDialog	=	true;
	
	/**
	 * ì`ï[åüçıâÊñ ópFocusTraversalPolicy
	 */
	private	SearchAccountFocusTraversalPolicy	ftp	=
			new SearchAccountFocusTraversalPolicy();
	
	/**
	 * ì`ï[åüçıâÊñ ópFocusTraversalPolicyÇéÊìæÇ∑ÇÈÅB
	 * @return ì`ï[åüçıâÊñ ópFocusTraversalPolicy
	 */
	public SearchAccountFocusTraversalPolicy getFocusTraversalPolicy()
	{
		return	ftp;
	}
	
	/**
	 * É{É^ÉìÇ…É}ÉEÉXÉJÅ[É\ÉãÇ™èÊÇ¡ÇΩÇ∆Ç´Ç…ÉJÅ[É\ÉãÇïœçXÇ∑ÇÈÉCÉxÉìÉgÇí«â¡Ç∑ÇÈÅB
	 */
	private void addMouseCursorChange()
	{
		SystemInfo.addMouseCursorChange(searchButton);
		SystemInfo.addMouseCursorChange(selectButton);
		SystemInfo.addMouseCursorChange(deleteButton);
		SystemInfo.addMouseCursorChange(backButton);
	}
	
	/**
	 * ÉRÉìÉ|Å[ÉlÉìÉgÇÃäeÉäÉXÉiÅ[ÇÉZÉbÉgÇ∑ÇÈÅB
	 */
	private void setListener()
	{
		customerNo1.addKeyListener(SystemInfo.getMoveNextField());
		customerNo1.addFocusListener(SystemInfo.getSelectText());
		customerNo2.addKeyListener(SystemInfo.getMoveNextField());
		customerNo2.addFocusListener(SystemInfo.getSelectText());
		salesDate1.addKeyListener(SystemInfo.getMoveNextField());
		salesDate1.addFocusListener(SystemInfo.getSelectText());
		salesDate2.addKeyListener(SystemInfo.getMoveNextField());
		salesDate2.addFocusListener(SystemInfo.getSelectText());
		slipNo1.addKeyListener(SystemInfo.getMoveNextField());
		slipNo1.addFocusListener(SystemInfo.getSelectText());
		slipNo2.addKeyListener(SystemInfo.getMoveNextField());
		slipNo2.addFocusListener(SystemInfo.getSelectText());
		staff.addKeyListener(SystemInfo.getMoveNextField());
	}
	
	/**
	 * èâä˙âªèàóùÇçsÇ§ÅB
	 */
	private void init()
	{
		try
		{
			ConnectionWrapper	con	=	SystemInfo.getConnection();
			sa.init(con);
		}
		catch(SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
	}
	
	/**
	 * ÉåÉWíSìñé“Çèâä˙âªÇ∑ÇÈÅB
	 */
	private void initStaff()
	{
		staff.addItem(new MstStaff());
		SystemInfo.initStaffComponent(staff);
		
		staff.setSelectedIndex(0);
	}
	
	/**
	 * éxï•ãÊï™Çèâä˙âªÇ∑ÇÈÅB
	 */
	private void initPaymentClass()
	{
		this.addPaymentClass("paymentClass0", "ëSÇƒ");
		
		Integer	index	=	1;
		
		for(MstPaymentClass mpc : sa.getPaymentClasses())
		{
			this.addPaymentClass("paymentClass" + index.toString(),
					mpc.getPaymentClassName());
			
			index ++;
		}
	}
	
	/**
	 * éxï•ãÊï™Çí«â¡Ç∑ÇÈÅB
	 * @param caption éxï•ãÊï™ñº
	 * @param x Çòç¿ïW
	 * @param y Çôç¿ïW
	 */
	private void addPaymentClass(String name, String caption)
	{
		JCheckBox	cb	=	new JCheckBox(caption);
		cb.setName(name);
		cb.setOpaque(false);
		cb.addKeyListener(SystemInfo.getMoveNextField());
		cb.setFocusTraversalPolicy(this.getFocusTraversalPolicy());
		cb.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
		cb.setFocusTraversalPolicy(getFocusTraversalPolicy());
		cb.setMargin(new java.awt.Insets(0, 0, 0, 0));
		cb.setSelected(true);
		if(0 < paymentClasses.size())
		{
			JLabel	padding	=	new JLabel("Å@Å@Å@");
			paymentClassPanel.add(padding);
		}
		paymentClassPanel.add(cb);
		paymentClasses.add(cb);
	}
	
	/**
	 * ÉtÉHÅ[ÉÄÇÃÉTÉCÉYÇ…çáÇÌÇπÇƒÉRÉìÉ|Å[ÉlÉìÉgÇÃÉTÉCÉYÇ∆à íuÇïœçXÇ∑ÇÈÅB
	 */
	private void resizeComponets()
	{
		//ÉeÅ[ÉuÉãÇÃïùÇ∆çÇÇ≥Çê›íËÇ∑ÇÈÅB
		/*int	w	=	this.getWidth() - 32;
		int	h	=	this.getHeight() - accountsScrollPane.getY() - 45;
		if(w < TABLE_WIDTH_MIN)		w	=	TABLE_WIDTH_MIN;
		if(h < 0)		w	=	0;
		accountsScrollPane.setSize(w, h);
		searchResult.setSize(accountsScrollPane.getSize());
		
		//É{É^ÉìÇÃâEë§ÇÃÇòç¿ïWÇéÊìæÇ∑ÇÈÅB
		int	x	=	this.getWidth() - 20;
		if(x < TABLE_WIDTH_MIN + 12)		x	=	TABLE_WIDTH_MIN + 12;
		
		searchButton.setLocation(x - searchButton.getWidth(), searchButton.getY());*/
	}
	
	/**
	 * ì`ï[åüçıèàóùÇçsÇ§ÅB
	 */
	public void searchAccount()
	{
		this.setSearchCondition();
		
		try
		{
			ConnectionWrapper	con	=	SystemInfo.getConnection();
			
			sa.load(con);
		}
		catch(SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
	}
	
	/**
	 * åüçıèåèÇÉZÉbÉgÇ∑ÇÈÅB
	 */
	private void setSearchCondition()
	{
		sa.setShop((MstShop)shop.getSelectedItem());
		//îÑè„ì˙
		sa.setSalesDate(0, salesDate1.getDate());
		sa.setSalesDate(1, salesDate2.getDate());
		//ì`ï[No.
		sa.setSlipNO(0, (slipNo1.getText().equals("") ? null : Integer.parseInt(slipNo1.getText())));
		sa.setSlipNO(1, (slipNo2.getText().equals("") ? null : Integer.parseInt(slipNo2.getText())));
		//å⁄ãqID
		sa.setCustomerNo(0, (customerNo1.getText().equals("") ? null : customerNo1.getText()));
		sa.setCustomerNo(1, (customerNo2.getText().equals("") ? null : customerNo2.getText()));
		//ÉåÉWíSìñé“
		sa.setStaff((MstStaff)staff.getSelectedItem());
		//éxï•ãÊï™
		for(int i = 0; i < paymentClasses.size(); i ++)
		{
			sa.getSearchPC().set(i, paymentClasses.get(i).isSelected());
		}
	}
	
	/**
	 * åüçıåãâ Çï\é¶Ç∑ÇÈÅB
	 */
	public void showAccount()
	{
		SwingUtil.clearTable(searchResult);
		
		DefaultTableModel	model	=	(DefaultTableModel)searchResult.getModel();
		
		for(AccountData ad : sa)
		{
			ArrayList<Object>	rowData	=	new ArrayList<Object>();
			rowData.add(DateUtil.format(ad.getSales().getSalesDate(), "yyyy/MM/dd"));
			rowData.add(ad.getSales().getSlipNo());
			rowData.add(ad.getSales().getCustomer().getCustomerNo());
			rowData.add(ad.getSales().getCustomer().getFullCustomerName());
			rowData.add(ad.getStaff().getFullStaffName());
			for(Long pv : ad.getPaymentValue())
			{
				rowData.add(pv);
			}
			model.addRow(rowData.toArray());
		}
	}
	
	/**
	 * ì`ï[Ç™ëIëÇ≥ÇÍÇΩÇ∆Ç´ÇÃèàóùÇçsÇ§ÅB
	 */
	private void select()
	{
		//ì`ï[Ç™ëIëÇ≥ÇÍÇƒÇ¢ÇÈèÍçá
		if(0 <= searchResult.getSelectedRow())
		{
			//ëIëÇ≥ÇÍÇƒÇ¢ÇÈì`ï[No.ÇÉZÉbÉg
			this.setSelectedSlipNo(sa.get(searchResult.getSelectedRow()).getSales().getSlipNo());
			
			this.setVisible(false);
		}
	}
	
	
	/**
	 * ì`ï[çÌèúèàóùÇçsÇ§ÅB
	 */
	private void delete()
	{
		if(searchResult.getSelectedRow() < 0)
				return;
		
		DataSales	sales	=	sa.get(searchResult.getSelectedRow()).getSales();
		
		if(MessageDialog.showYesNoDialog(this,
					MessageUtil.getMessage(MessageUtil.CONFIRM_DELETE,
							"ì`ï[No." + sales.getSlipNo().toString()),
					JOptionPane.WARNING_MESSAGE) != 0)
		{
			return;
		}
		
		try
		{
			ConnectionWrapper con	=	SystemInfo.getConnection();
			
			if(sales.deleteAll(con))
			{
				this.searchAccount();
				this.showAccount();
			}
		}
		catch(Exception e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
	}
	
	/**
	 * ì`ï[åüçıâÊñ ópFocusTraversalPolicy
	 */
	private class SearchAccountFocusTraversalPolicy
					extends FocusTraversalPolicy
	{
		/**
		 * aComponent ÇÃÇ†Ç∆Ç≈ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃÇ†Ç∆Ç…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentAfter(Container aContainer,
										   Component aComponent)
		{
			if (aComponent.equals(salesDate1))
			{
				return salesDate2;
			}
			else if (aComponent.equals(salesDate2))
			{
				return slipNo1;
			}
			else if (aComponent.equals(slipNo1))
			{
				return slipNo2;
			}
			else if (aComponent.equals(slipNo2))
			{
				return customerNo1;
			}
			else if (aComponent.equals(customerNo1))
			{
				return customerNo2;
			}
			else if (aComponent.equals(customerNo2))
			{
				return staff;
			}
			else if (aComponent.equals(staff))
			{
				return this.getFirstPaymentClass();
			}
			else if (aComponent.equals(searchButton))
			{
				return	salesDate1;
			}
			else if (aComponent.getName() != null &&
					0 <= aComponent.getName().indexOf("paymentClass"))
			{
				return this.getNextPaymentClass(aComponent);
			}
			
			return salesDate1;
		}

		/**
		 * aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentBefore(Container aContainer,
											Component aComponent)
		{
			if (aComponent.equals(salesDate1))
			{
				return searchButton;
			}
			else if (aComponent.equals(salesDate2))
			{
				return salesDate1;
			}
			else if (aComponent.equals(slipNo1))
			{
				return salesDate2;
			}
			else if (aComponent.equals(slipNo2))
			{
				return slipNo1;
			}
			else if (aComponent.equals(customerNo1))
			{
				return slipNo2;
			}
			else if (aComponent.equals(customerNo2))
			{
				return customerNo1;
			}
			else if (aComponent.equals(staff))
			{
				return customerNo2;
			}
			else if (aComponent.equals(searchButton))
			{
				return	this.getLastPaymentClass();
			}
			else if (aComponent.getName() != null &&
					0 <= aComponent.getName().indexOf("paymentClass"))
			{
				return this.getPreviousPaymentClass(aComponent);
			}
			
			return salesDate1;
		}
		
		/**
		 * ç≈èâÇÃéxï•ãÊï™
		 * @return ç≈èâÇÃéxï•ãÊï™
		 */
		private Component getFirstPaymentClass()
		{
			if(0 < paymentClasses.size())
					return	paymentClasses.get(0);
			else
					return	null;
		}
		
		/**
		 * ç≈å„ÇÃéxï•ãÊï™
		 * @return ç≈å„ÇÃéxï•ãÊï™
		 */
		private Component getLastPaymentClass()
		{
			if(0 < paymentClasses.size())
					return	paymentClasses.get(paymentClasses.size() - 1);
			else
					return	null;
		}
		
		/**
		 * éüÇÃéxï•ãÊï™ÇéÊìæÇ∑ÇÈÅBÅiñ≥ÇØÇÍÇŒÉXÉ^ÉbÉtIDÅj
		 * @param pc åªç›ÇÃéxï•ãÊï™
		 * @return éüÇÃéxï•ãÊï™
		 */
		private Component getNextPaymentClass(Component pc)
		{
			int	index	=	Integer.parseInt(pc.getName().replaceAll("paymentClass", ""));
			
			if(0 <= index && index < paymentClasses.size() - 1)
			{
				return	paymentClasses.get(index + 1);
			}
			
			return	searchButton;
		}
		
		/**
		 * ëOÇÃéxï•ãÊï™ÇéÊìæÇ∑ÇÈÅBÅiñ≥ÇØÇÍÇŒÉXÉ^ÉbÉtIDÅj
		 * @param pc åªç›ÇÃéxï•ãÊï™
		 * @return ëOÇÃéxï•ãÊï™
		 */
		private Component getPreviousPaymentClass(Component pc)
		{
			int	index	=	Integer.parseInt(pc.getName().replaceAll("paymentClass", ""));
			
			if(1 <= index && index < paymentClasses.size())
			{
				return	paymentClasses.get(index - 1);
			}
			
			return	staff;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈èâÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAèáï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer êÊì™ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃêÊì™ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getFirstComponent(Container aContainer)
		{
			return salesDate1;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAãtï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer aContainer - ç≈å„ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getLastComponent(Container aContainer)
		{
			return searchButton;
		}

		/**
		 * ÉtÉHÅ[ÉJÉXÇê›íËÇ∑ÇÈÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÉãÅ[ÉgÇ∆Ç∑ÇÈÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇ™êVÇµÇ≠äJénÇ≥ÇÍÇΩÇ∆Ç´Ç…ÅAÇ±ÇÃÉRÉìÉ|Å[ÉlÉìÉgÇ…ç≈èâÇ…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇ‹Ç∑ÅB
		 * @param aContainer ÉfÉtÉHÉãÉgÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃÉfÉtÉHÉãÉgÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getDefaultComponent(Container aContainer)
		{
			return salesDate1;
		}
		
		/**
		 * ÉEÉBÉìÉhÉEÇ™ç≈èâÇ…ï\é¶Ç≥ÇÍÇΩÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * show() Ç‹ÇΩÇÕ setVisible(true) ÇÃåƒÇ—èoÇµÇ≈àÍìxÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆ÅA
		 * èâä˙âªÉRÉìÉ|Å[ÉlÉìÉgÇÕÇªÇÍà»ç~égópÇ≥ÇÍÇ‹ÇπÇÒÅB
		 * àÍìxï ÇÃÉEÉBÉìÉhÉEÇ…à⁄Ç¡ÇΩÉtÉHÅ[ÉJÉXÇ™çƒÇ—ê›íËÇ≥ÇÍÇΩèÍçáÅA
		 * Ç‹ÇΩÇÕÅAàÍìxîÒï\é¶èÛë‘Ç…Ç»Ç¡ÇΩÉEÉBÉìÉhÉEÇ™çƒÇ—ï\é¶Ç≥ÇÍÇΩèÍçáÇÕÅA
		 * ÇªÇÃÉEÉBÉìÉhÉEÇÃç≈å„Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇΩÉRÉìÉ|Å[ÉlÉìÉgÇ™ÉtÉHÅ[ÉJÉXèäóLé“Ç…Ç»ÇËÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÃÉfÉtÉHÉãÉgé¿ëïÇ≈ÇÕÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * @param window èâä˙ÉRÉìÉ|Å[ÉlÉìÉgÇ™ï‘Ç≥ÇÍÇÈÉEÉBÉìÉhÉE
		 * @return ç≈èâÇ…ÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÅBìKêÿÇ»ÉRÉìÉ|Å[ÉlÉìÉgÇ™Ç»Ç¢èÍçáÇÕ null
		 */
		public Component getInitialComponent(Window window)
		{
			return salesDate1;
		}
	}

	/**
	 * ëIëÇ≥ÇÍÇƒÇ¢ÇÈì`ï[No.ÇéÊìæÇ∑ÇÈÅB
	 * @return ëIëÇ≥ÇÍÇƒÇ¢ÇÈì`ï[No.
	 */
	public MstShop getSelectedShop()
	{
		return (MstShop)shop.getSelectedItem();
	}

	/**
	 * ëIëÇ≥ÇÍÇƒÇ¢ÇÈì`ï[No.ÇéÊìæÇ∑ÇÈÅB
	 * @return ëIëÇ≥ÇÍÇƒÇ¢ÇÈì`ï[No.
	 */
	public Integer getSelectedSlipNo()
	{
		return selectedSlipNo;
	}

	/**
	 * ëIëÇ≥ÇÍÇƒÇ¢ÇÈì`ï[No.ÇÉZÉbÉgÇ∑ÇÈÅB
	 * @param selectedSlipNo ëIëÇ≥ÇÍÇƒÇ¢ÇÈì`ï[No.
	 */
	public void setSelectedSlipNo(Integer selectedSlipNo)
	{
		this.selectedSlipNo = selectedSlipNo;
	}

	/**
	 * ì`ï[åüçıâÊñ Ç©ÇÁì`ï[ì¸óÕâÊñ ÇäJÇ≠Ç©ÇéÊìæÇ∑ÇÈÅB
	 * @return true - ì`ï[åüçıâÊñ Ç©ÇÁì`ï[ì¸óÕâÊñ ÇäJÇ≠èÍçá
	 */
	public boolean isParentDialog()
	{
		return parentDialog;
	}

	/**
	 * ì`ï[åüçıâÊñ Ç©ÇÁì`ï[ì¸óÕâÊñ ÇäJÇ≠Ç©ÇÉZÉbÉgÇ∑ÇÈÅB
	 * @param parentDialog true - ì`ï[åüçıâÊñ Ç©ÇÁì`ï[ì¸óÕâÊñ ÇäJÇ≠èÍçá
	 */
	public void setParentDialog(boolean parentDialog)
	{
		this.parentDialog = parentDialog;
		deleteButton.setVisible(parentDialog);
	}
}