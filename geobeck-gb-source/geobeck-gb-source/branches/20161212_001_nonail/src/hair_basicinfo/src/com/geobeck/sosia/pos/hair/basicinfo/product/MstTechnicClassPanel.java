/*
 * MstTechnicClassPanel.java
 *
 * Created on 2006/10/20, 11:01
 */

package com.geobeck.sosia.pos.hair.basicinfo.product;

import com.geobeck.sosia.pos.basicinfo.SimpleMaster;
import com.geobeck.sosia.pos.basicinfo.SimpleMasterDialog;
import com.geobeck.sosia.pos.hair.master.product.*;
import com.geobeck.sosia.pos.master.MstData;
// IVS_LeTheHieu Start add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
import com.geobeck.sosia.pos.master.company.MstShopCategory;
import com.geobeck.sosia.pos.master.company.MstShopCategorys;
// IVS_LeTheHieu End add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
import com.geobeck.sosia.pos.system.SystemInfo;
import java.awt.*;
import javax.swing.*;
import javax.swing.table.*;
import javax.swing.text.*;
import java.sql.*;
import java.util.logging.*;

import com.geobeck.sql.*;
import com.geobeck.swing.*;
import com.geobeck.util.*;
import com.geobeck.sosia.pos.swing.*;
import com.geobeck.sosia.pos.util.*;
import java.util.ArrayList;

/**
 *
 * @author  katagiri
 */
public class MstTechnicClassPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx
{
	private MstTechnicClasses		mtcs		=	new MstTechnicClasses();
        // IVS_LeTheHieu Start add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
        private MstShopCategorys                mscs            =       new MstShopCategorys();
        private MstShopCategory                 msc             =       new MstShopCategory();
        private Integer useShopCategory                                 =       null;
        private Integer shopId                                          =       null;
        // IVS_LeTheHieu End add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
	private Integer				selIndex	=	-1;
	
	/** Creates new form MstTechnicClassPanel */
	public MstTechnicClassPanel()
	{
		super();
		initComponents();
		addMouseCursorChange();
		this.setSize(800, 680);
		this.setPath("äÓñ{ê›íË >> ãZèpÉ}ÉXÉ^");
		this.setTitle("ãZèpï™óﬁìoò^");
		this.setListener();
                this.initTableColumnWidth();
		this.init();
                
                if (!SystemInfo.getSetteing().isUsePrepaid()) {
                    chkPrepaid.setVisible(false);
                }
	}

        private void initIntegration() {

            integration.removeAllItems();
            integration.addItem(null);
            
            SimpleMaster sm = new SimpleMaster(
                    "",
                    "mst_technic_integration",
                    "technic_integration_id",
                    "technic_integration_name", 0);

            sm.loadData();
  
            for (MstData md : sm) {
                integration.addItem(md);
            }

            integration.setSelectedIndex(0);
        }
        
        // IVS_LeTheHieu Start add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
        /**
         * ã∆ë‘Çèâä˙âªÇ∑ÇÈÅB
         * @param  None
         * @return None
         * @author IVS_LeTheHieu
         * @since  20140703
         */
        private void initBusiness() {

            business.removeAllItems();
            business.addItem(null);
            
            SimpleMaster sb = new SimpleMaster(
                    "",
                    "mst_shop_category",
                    "shop_category_id",
                    "shop_class_name", 0);

            sb.loadData();
  
            for (MstData md : sb) {
                business.addItem(md);
            }

            business.setSelectedIndex(0);
        }
        // IVS_LeTheHieu End add 20140703 GB_MASHU_ãZèpï™óﬁìoò^

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        addButton = new javax.swing.JButton();
        technicClassesScrollPane = new javax.swing.JScrollPane();
        technicClasses = new javax.swing.JTable();
        displaySeq = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)displaySeq.getDocument()).setDocumentFilter(
            new CustomFilter(4, CustomFilter.NUMERIC));
        technicClassName = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)technicClassName.getDocument()).setDocumentFilter(
            new CustomFilter(20));
        productButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        renewButton = new javax.swing.JButton();
        technicClassNameLabel = new javax.swing.JLabel();
        displaySeqLabel = new javax.swing.JLabel();
        technicClassContractedNameLabel = new javax.swing.JLabel();
        technicClassContractedName = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)technicClassName.getDocument()).setDocumentFilter(
            new CustomFilter(20));
        chkPrepaid = new javax.swing.JCheckBox();
        integrationButton = new javax.swing.JButton();
        technicClassContractedNameLabel1 = new javax.swing.JLabel();
        integration = new javax.swing.JComboBox();
        businesslbl = new javax.swing.JLabel();
        business = new javax.swing.JComboBox();

        addButton.setIcon(SystemInfo.getImageIcon("/button/common/insert_off.jpg"));
        addButton.setBorderPainted(false);
        addButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/insert_on.jpg"));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        technicClassesScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        technicClasses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "ï™óﬁñº", "ï™óﬁó™èÃ", "ï\é¶èá", "ÉvÉäÉyÉCÉh", "ìùçáï™óﬁ", "ã∆ë‘"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        technicClasses.setSelectionBackground(new java.awt.Color(220, 220, 220));
        technicClasses.setSelectionForeground(new java.awt.Color(0, 0, 0));
        technicClasses.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        technicClasses.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(technicClasses, SystemInfo.getTableHeaderRenderer());
        technicClasses.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);

        SelectTableCellRenderer.setSelectTableCellRenderer(technicClasses);
        technicClasses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                technicClassesMouseReleased(evt);
            }
        });
        technicClasses.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                technicClassesKeyReleased(evt);
            }
        });
        technicClassesScrollPane.setViewportView(technicClasses);
        technicClasses.getColumnModel().getColumn(0).setPreferredWidth(80);

        displaySeq.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        displaySeq.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        technicClassName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        technicClassName.setDocument(new CustomPlainDocument(20));
        technicClassName.setInputKanji(true);

        productButton.setIcon(SystemInfo.getImageIcon("/button/master/regist_technic_off.jpg"));
        productButton.setBorderPainted(false);
        productButton.setPressedIcon(SystemInfo.getImageIcon("/button/master/regist_technic_on.jpg"));
        productButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productButtonActionPerformed(evt);
            }
        });

        deleteButton.setIcon(SystemInfo.getImageIcon("/button/common/delete_off.jpg"));
        deleteButton.setBorderPainted(false);
        deleteButton.setEnabled(false);
        deleteButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/delete_on.jpg"));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        renewButton.setIcon(SystemInfo.getImageIcon("/button/common/update_off.jpg"));
        renewButton.setBorderPainted(false);
        renewButton.setEnabled(false);
        renewButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/update_on.jpg"));
        renewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renewButtonActionPerformed(evt);
            }
        });

        technicClassNameLabel.setText("ï™óﬁñº");

        displaySeqLabel.setText("ë}ì¸à íu");

        technicClassContractedNameLabel.setText("ï™óﬁó™èÃ");

        technicClassContractedName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        technicClassContractedName.setDocument(new CustomPlainDocument(20));
        technicClassContractedName.setInputKanji(true);

        chkPrepaid.setText("ÉvÉäÉyÉCÉh");
        chkPrepaid.setOpaque(false);

        integrationButton.setIcon(SystemInfo.getImageIcon("/button/master/integration_reg_off.jpg"));
        integrationButton.setBorderPainted(false);
        integrationButton.setPressedIcon(SystemInfo.getImageIcon("/button/master/integration_reg_on.jpg"));
        integrationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                integrationButtonActionPerformed(evt);
            }
        });

        technicClassContractedNameLabel1.setText("ìùçáï™óﬁ");

        integration.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        businesslbl.setText("ã∆ë‘");

        business.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(technicClassContractedNameLabel)
                            .add(technicClassNameLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(technicClassName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 295, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(integration, 0, 189, Short.MAX_VALUE)
                                    .add(technicClassContractedName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(displaySeqLabel)
                                    .add(businesslbl))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(displaySeq, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(40, 40, 40)
                                        .add(chkPrepaid))
                                    .add(business, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 189, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(technicClassContractedNameLabel1)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                            .add(addButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(renewButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(7, 7, 7)
                            .add(deleteButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(productButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(integrationButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, technicClassesScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 684, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(technicClassNameLabel)
                    .add(technicClassName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(technicClassContractedNameLabel)
                    .add(technicClassContractedName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(displaySeqLabel)
                    .add(displaySeq, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(chkPrepaid))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(technicClassContractedNameLabel1)
                            .add(integration, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(businesslbl)
                            .add(business, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(addButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(renewButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(deleteButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(productButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(integrationButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(technicClassesScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
	if(this.checkInput()) {
	    this.regist(true);
	    this.refresh();
	}
    }//GEN-LAST:event_addButtonActionPerformed

    private void renewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renewButtonActionPerformed
	if(this.checkInput()) {
	    this.regist(false);
	    this.refresh();
	}
    }//GEN-LAST:event_renewButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
	if(this.checkDelete()){
	    this.delete();
	    this.refresh();
	} else{
	    MessageDialog.showMessageDialog(this,
		MessageUtil.getMessage(7101, "ï™óﬁ","ãZèp"),
		this.getTitle(),
		JOptionPane.ERROR_MESSAGE);
	}
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void productButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productButtonActionPerformed
	SystemInfo.getLogger().log(Level.INFO, "ãZèpìoò^");
	MstTechnicPanel	mtp	=	new MstTechnicPanel();
	
	if(0 <= selIndex) {
	    mtp.setSelectedTechnicClassID(mtcs.get(selIndex).getTechnicClassID());
	}
	
	parentFrame.changeContents(mtp);
    }//GEN-LAST:event_productButtonActionPerformed

	private void technicClassesMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_technicClassesMouseReleased
	{//GEN-HEADEREND:event_technicClassesMouseReleased
		this.changeCurrentData();
	}//GEN-LAST:event_technicClassesMouseReleased

	private void technicClassesKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_technicClassesKeyReleased
	{//GEN-HEADEREND:event_technicClassesKeyReleased
		this.changeCurrentData();
	}//GEN-LAST:event_technicClassesKeyReleased

        private void integrationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_integrationButtonActionPerformed

            SimpleMasterDialog dlg = new SimpleMasterDialog(
                    "ãZèpìùçá",
                    "mst_technic_integration",
                    "technic_integration_id",
                    "technic_integration_name",
                    20, SystemInfo.getTableHeaderRenderer());

            dlg.setOpener(this);
            SwingUtil.openAnchorDialog( null, true, dlg, "ãZèpï™óﬁìùçá", SwingUtil.ANCHOR_HCENTER | SwingUtil.ANCHOR_VCENTER );

            this.initIntegration();
            this.refresh();

        }//GEN-LAST:event_integrationButtonActionPerformed
	
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox business;
    private javax.swing.JLabel businesslbl;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkPrepaid;
    private javax.swing.JButton deleteButton;
    private com.geobeck.swing.JFormattedTextFieldEx displaySeq;
    private javax.swing.JLabel displaySeqLabel;
    private javax.swing.JComboBox integration;
    private javax.swing.JButton integrationButton;
    private javax.swing.JButton productButton;
    private javax.swing.JButton renewButton;
    private com.geobeck.swing.JFormattedTextFieldEx technicClassContractedName;
    private javax.swing.JLabel technicClassContractedNameLabel;
    private javax.swing.JLabel technicClassContractedNameLabel1;
    private com.geobeck.swing.JFormattedTextFieldEx technicClassName;
    private javax.swing.JLabel technicClassNameLabel;
    private javax.swing.JTable technicClasses;
    private javax.swing.JScrollPane technicClassesScrollPane;
    // End of variables declaration//GEN-END:variables
	
	/**
	 * ãZèpï™óﬁÉ}ÉXÉ^ìoò^âÊñ ópFocusTraversalPolicy
	 */
	private	MstTechnicClassFocusTraversalPolicy	ftp	=
			new MstTechnicClassFocusTraversalPolicy();
	
	/**
	 * ãZèpï™óﬁÉ}ÉXÉ^ìoò^âÊñ ópFocusTraversalPolicyÇéÊìæÇ∑ÇÈÅB
	 * @return ãZèpï™óﬁÉ}ÉXÉ^ìoò^âÊñ ópFocusTraversalPolicy
	 */
	public MstTechnicClassFocusTraversalPolicy getFocusTraversalPolicy()
	{
		return	ftp;
	}
	
	/**
	 * É{É^ÉìÇ…É}ÉEÉXÉJÅ[É\ÉãÇ™èÊÇ¡ÇΩÇ∆Ç´Ç…ÉJÅ[É\ÉãÇïœçXÇ∑ÇÈÉCÉxÉìÉgÇí«â¡Ç∑ÇÈÅB
	 */
	private void addMouseCursorChange()
	{
		SystemInfo.addMouseCursorChange(addButton);
		SystemInfo.addMouseCursorChange(renewButton);
		SystemInfo.addMouseCursorChange(deleteButton);
		SystemInfo.addMouseCursorChange(productButton);
		SystemInfo.addMouseCursorChange(integrationButton);
	}
	
	/**
	 * ÉRÉìÉ|Å[ÉlÉìÉgÇÃäeÉäÉXÉiÅ[ÇÉZÉbÉgÇ∑ÇÈÅB
	 */
	private void setListener()
	{
		technicClassName.addKeyListener(SystemInfo.getMoveNextField());
		technicClassName.addFocusListener(SystemInfo.getSelectText());
		technicClassContractedName.addKeyListener(SystemInfo.getMoveNextField());
		technicClassContractedName.addFocusListener(SystemInfo.getSelectText());
		displaySeq.addKeyListener(SystemInfo.getMoveNextField());
		displaySeq.addFocusListener(SystemInfo.getSelectText());
		integration.addKeyListener(SystemInfo.getMoveNextField());
		integration.addFocusListener(SystemInfo.getSelectText());
                // IVS_LeTheHieu Start add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
                business.addKeyListener(SystemInfo.getMoveNextField());
                business.addFocusListener(SystemInfo.getSelectText());
                // IVS_LeTheHieu End add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
	}
        
	/**
	 * èâä˙âªèàóùÇçsÇ§ÅB
	 */
	private void init()
	{

		try
		{
			ConnectionWrapper	con	=	SystemInfo.getConnection();
			
			mtcs.load(con);
                        
		}
		catch(Exception e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
                
                // IVS_LeTheHieu Start add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
                useShopCategory = SystemInfo.getCurrentShop().getUseShopCategory();
                shopId = SystemInfo.getCurrentShop().getShopID();
                if (shopId.equals(0)){
                    business.setVisible(true);
                    business.removeAllItems();
                    business.addItem(null);
                    // load business data
                    this.initBusiness();
                } else{
                    if (useShopCategory.equals(1)){
                        business.setVisible(true);
                        business.removeAllItems();
                        business.addItem(null);
                        // load business data
                        this.initBusiness();
                    }
                    else{
                        technicClasses.getColumnModel().getColumn(5).setMinWidth(0);
                        technicClasses.getColumnModel().getColumn(5).setMaxWidth(0);
                        technicClasses.getColumnModel().getColumn(5).setPreferredWidth(0);
                        businesslbl.setVisible(false);
                        business.removeAllItems();
                        business.setVisible(false);
                    }
                }
                // IVS_LeTheHieu End add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
                
                this.initIntegration();
                
		this.showData();
	}       
        
	/**
	 * çƒï\é¶ÇçsÇ§ÅB
	 */
	private void refresh()
	{
            try {
                ConnectionWrapper con = SystemInfo.getConnection();
                mtcs.load(con);
            } catch(Exception e) {
                SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            }

            //ÉeÅ[ÉuÉãÇ…è§ïiãÊï™É}ÉXÉ^ÉfÅ[É^Çï\é¶Ç∑ÇÈ
            this.showData();

            //ì¸óÕÇÉNÉäÉAÇ∑ÇÈ
            this.clear();

            technicClassName.requestFocusInWindow();
	}
	
	/**
	 * ì¸óÕçÄñ⁄ÇÉNÉäÉAÇ∑ÇÈÅB
	 */
	private void clear()
	{
		selIndex	=	-1;
		technicClassName.setText("");
		technicClassContractedName.setText("");
		displaySeq.setText("");
		chkPrepaid.setSelected(false);
                integration.setSelectedIndex(0);
                // IVS_LeTheHieu Start add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
                if (shopId.equals(0)){
                   business.setSelectedIndex(0);
                } else{
                    if (useShopCategory.equals(1)){
                        business.setSelectedIndex(0);
                    }
                }
                // IVS_LeTheHieu End add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
                
		if(0 < technicClasses.getRowCount())
				technicClasses.removeRowSelectionInterval(0, technicClasses.getRowCount() - 1);
		
		this.changeCurrentData();
	}

	/**
	 * ÉfÅ[É^Çï\é¶Ç∑ÇÈÅB
	 */
	private void showData()
	{
		DefaultTableModel model = (DefaultTableModel)technicClasses.getModel();
		//ëSçsçÌèú
		model.setRowCount(0);
		technicClasses.removeAll();
		
		for(MstTechnicClass mtc : mtcs)
		{
			Object[] rowData = {
                            mtc.getTechnicClassName(),
                            mtc.getTechnicClassContractedName(),
                            mtc.getDisplaySeq(),
                            (mtc.isPrepaid() ? "       Åú" : ""),
                            mtc.getIntegration(),
                            // IVS_LeTheHieu Start add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
                            mtc.getBusiness()
                            // IVS_LeTheHieu End add 20140703 GB_MASHU_ãZèpï™óﬁìoò^

                        };
			model.addRow(rowData);
		}

	}
        
	/**
	 * ëIëÉfÅ[É^Ç™ïœçXÇ≥ÇÍÇΩÇ∆Ç´ÇÃèàóùÇçsÇ§ÅB
	 */
	private void changeCurrentData()
	{
		int	index	=	technicClasses.getSelectedRow();
		
		if(0 <= index && index < mtcs.size() && index != selIndex)
		{
			selIndex	=	index;
			//ëIëÇ≥ÇÍÇƒÇ¢ÇÈÉfÅ[É^Çï\é¶
			this.showCurrentData();
		}
		
		renewButton.setEnabled(0 <= selIndex);
		deleteButton.setEnabled(0 <= selIndex);
	}
	
	/**
	 * ëIëÇ≥ÇÍÇΩÉfÅ[É^Çì¸óÕçÄñ⁄Ç…ï\é¶Ç∑ÇÈÅB
	 */
	private void showCurrentData()
	{
		technicClassName.setText(mtcs.get(selIndex).getTechnicClassName());
		technicClassContractedName.setText( mtcs.get( selIndex ).getTechnicClassContractedName() );
		displaySeq.setText(mtcs.get(selIndex).getDisplaySeq().toString());
                chkPrepaid.setSelected(mtcs.get(selIndex).isPrepaid());

                integration.setSelectedIndex(0);
                integration.setSelectedItem(mtcs.get(selIndex).getIntegration());
                // IVS_LeTheHieu Start add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
                if (shopId.equals(0)){
                   business.setSelectedIndex(0);
                   business.setSelectedItem(mtcs.get(selIndex).getBusiness());
                } else{
                    if (useShopCategory.equals(1)){
                        business.setSelectedIndex(0);
                        business.setSelectedItem(mtcs.get(selIndex).getBusiness());
                    }
                }
                // IVS_LeTheHieu End add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
        }
        
	/**
	 * ì¸óÕÉ`ÉFÉbÉNÇçsÇ§ÅB
	 * @return ì¸óÕÉGÉâÅ[Ç™Ç»ÇØÇÍÇŒtrueÇï‘Ç∑ÅB
	 */
	private boolean checkInput()
	{
		//ãZèpãÊï™ñº
		if(technicClassName.getText().equals(""))
		{
			MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "ãZèpãÊï™ñº"),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
			technicClassName.requestFocusInWindow();
			return	false;
		}
		
		//ãZèpãÊï™ó™èÃ
		if(technicClassContractedName.getText().equals(""))
		{
			MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "ãZèpãÊï™ó™èÃ"),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
			technicClassContractedName.requestFocusInWindow();
			return	false;
		}
		if( ( !CheckUtil.checkStringLength( technicClassContractedName.getText(), 5 ) )||!CheckUtil.is1ByteChars( technicClassContractedName.getText() ) )
		{
			MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(1201, "ãZèpãÊï™ó™èÃ", "îºäp5ï∂éö"),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
			technicClassContractedName.requestFocusInWindow();
			return	false;
		}
		
		//ï\é¶èá
		if(displaySeq.getText().equals("0"))
		{
			MessageDialog.showMessageDialog(this,
					"ë}ì¸à íuÇÕ 1 à»è„ÇéwíËÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB",
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
			displaySeq.requestFocusInWindow();
			return	false;
		}
                
		return	true;
	}
	
	
	/**
	 * ì¸óÕÇ≥ÇÍÇΩÉfÅ[É^Çìoò^Ç∑ÇÈÅB
	 * @param isAdd true - í«â¡èàóù
	 * @return true - ê¨å˜
	 */
	private boolean regist(boolean isAdd)
	{
		boolean		result	=	false;
		MstTechnicClass	mtc	=	new MstTechnicClass();
		
		if(!isAdd && 0 <= selIndex)
		{
			mtc.setData(mtcs.get(selIndex));
		}
		
		mtc.setTechnicClassName(technicClassName.getText());
		mtc.setTechnicClassContractedName( technicClassContractedName.getText() );
		mtc.setDisplaySeq((displaySeq.getText().equals("") ? -1 : Integer.parseInt(displaySeq.getText())));
                mtc.setPrepaid(chkPrepaid.isSelected() ? 1 : 0);
                mtc.setIntegration((MstData)integration.getSelectedItem());
                // IVS_LeTheHieu Start add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
                mtc.setBusiness((MstData)business.getSelectedItem());
                mtc.setMstShop(SystemInfo.getCurrentShop());
                // IVS_LeTheHieu End add 20140703 GB_MASHU_ãZèpï™óﬁìoò^
		ConnectionWrapper	con	=	SystemInfo.getConnection();
		
		try
		{
			con.begin();
			
			if(mtc.regist(con, (0 < selIndex ? mtcs.get(selIndex).getDisplaySeq() : -1)))
			{
				con.commit();
				this.refresh();
				result	=	true;
			}
			else
			{
				con.rollback();
			}
		}
		catch(SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
		
		return	result;
	}
	
	
	/**
	 * ëIëÇ≥ÇÍÇΩÉfÅ[É^ÇçÌèúÇ∑ÇÈÅB
	 * @return true - ê¨å˜
	 */
	private boolean delete()
	{
		boolean		result	=	false;
		MstTechnicClass	mtc	=	null;
		
		if(0 <= selIndex && selIndex < mtcs.size())
		{
			mtc	=	mtcs.get(selIndex);
		}
		
		ConnectionWrapper	con	=	SystemInfo.getConnection();
		
		try
		{
			con.begin();
			
			if(mtc.delete(con))
			{
				con.commit();
				this.refresh();
				result	=	true;
			}
			else
			{
				con.rollback();
			}
		}
		catch(SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
		
		return	result;
	}
	
	/**
	 * ëIëÇ≥ÇÍÇΩï™óﬁÇ…è§ïiìoò^Ç™Ç≥ÇÍÇƒÇ¢ÇÈÇ©ÅB
	 * @return true - ê¨å˜
	 */
	private boolean checkDelete()
	{
		boolean		result	=	false;
		MstTechnicClass	mtc	=	null;
		
		if(0 <= selIndex && selIndex < mtcs.size())
		{
			mtc	=	mtcs.get(selIndex);
		}
		
		ConnectionWrapper	con	=	SystemInfo.getConnection();
		
		try
		{
			
			mtc.loadTechnic(con);
			if(mtc.size() == 0){
				result = true;
			}
			
		}
		catch(Exception e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
		
		return	result;
	}
	
	/**
	 * ãZèpï™óﬁÉ}ÉXÉ^ìoò^âÊñ ópFocusTraversalPolicy
	 */
	private class MstTechnicClassFocusTraversalPolicy
					extends FocusTraversalPolicy
	{
		/**
		 * aComponent ÇÃÇ†Ç∆Ç≈ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃÇ†Ç∆Ç…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentAfter(Container aContainer,
										   Component aComponent)
		{
			if (aComponent.equals(technicClassName))
			{
				return displaySeq;
			}
			else if (aComponent.equals(displaySeq))
			{
				return displaySeq;
			}
			
			return technicClassName;
		}

		/**
		 * aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentBefore(Container aContainer,
											Component aComponent)
		{
			if (aComponent.equals(technicClassName))
			{
				return technicClassName;
			}
			else if (aComponent.equals(displaySeq))
			{
				return technicClassName;
			}
			
			return technicClassName;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈èâÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAèáï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer êÊì™ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃêÊì™ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getFirstComponent(Container aContainer)
		{
			return technicClassName;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAãtï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer aContainer - ç≈å„ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getLastComponent(Container aContainer)
		{
			return displaySeq;
		}

		/**
		 * ÉtÉHÅ[ÉJÉXÇê›íËÇ∑ÇÈÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÉãÅ[ÉgÇ∆Ç∑ÇÈÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇ™êVÇµÇ≠äJénÇ≥ÇÍÇΩÇ∆Ç´Ç…ÅAÇ±ÇÃÉRÉìÉ|Å[ÉlÉìÉgÇ…ç≈èâÇ…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇ‹Ç∑ÅB
		 * @param aContainer ÉfÉtÉHÉãÉgÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃÉfÉtÉHÉãÉgÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getDefaultComponent(Container aContainer)
		{
			return technicClassName;
		}
		
		/**
		 * ÉEÉBÉìÉhÉEÇ™ç≈èâÇ…ï\é¶Ç≥ÇÍÇΩÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * show() Ç‹ÇΩÇÕ setVisible(true) ÇÃåƒÇ—èoÇµÇ≈àÍìxÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆ÅA
		 * èâä˙âªÉRÉìÉ|Å[ÉlÉìÉgÇÕÇªÇÍà»ç~égópÇ≥ÇÍÇ‹ÇπÇÒÅB
		 * àÍìxï ÇÃÉEÉBÉìÉhÉEÇ…à⁄Ç¡ÇΩÉtÉHÅ[ÉJÉXÇ™çƒÇ—ê›íËÇ≥ÇÍÇΩèÍçáÅA
		 * Ç‹ÇΩÇÕÅAàÍìxîÒï\é¶èÛë‘Ç…Ç»Ç¡ÇΩÉEÉBÉìÉhÉEÇ™çƒÇ—ï\é¶Ç≥ÇÍÇΩèÍçáÇÕÅA
		 * ÇªÇÃÉEÉBÉìÉhÉEÇÃç≈å„Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇΩÉRÉìÉ|Å[ÉlÉìÉgÇ™ÉtÉHÅ[ÉJÉXèäóLé“Ç…Ç»ÇËÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÃÉfÉtÉHÉãÉgé¿ëïÇ≈ÇÕÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * @param window èâä˙ÉRÉìÉ|Å[ÉlÉìÉgÇ™ï‘Ç≥ÇÍÇÈÉEÉBÉìÉhÉE
		 * @return ç≈èâÇ…ÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÅBìKêÿÇ»ÉRÉìÉ|Å[ÉlÉìÉgÇ™Ç»Ç¢èÍçáÇÕ null
		 */
		public Component getInitialComponent(Window window)
		{
			return technicClassName;
		}
	}
	/**
	 * JTableÇÃóÒïùÇèâä˙âªÇ∑ÇÈÅB
	 */
	private void initTableColumnWidth()
	{
		//óÒÇÃïùÇê›íËÇ∑ÇÈÅB
		technicClasses.getColumnModel().getColumn(0).setPreferredWidth(240);
		technicClasses.getColumnModel().getColumn(5).setPreferredWidth(160);
	}
	
	
	/**
	 * óÒÇÃï\é¶à íuÇê›íËÇ∑ÇÈTableCellRenderer
	 */
	private class TableCellAlignRenderer extends DefaultTableCellRenderer
	{
		/** Creates a new instance of ReservationTableCellRenderer */
		public TableCellAlignRenderer()
		{
			super();
		}

		/**
		 * ÉeÅ[ÉuÉãÉZÉãÉåÉìÉ_ÉäÉìÉOÇï‘ÇµÇ‹Ç∑ÅB
		 * @param table JTable
		 * @param value ÉZÉãÇ…äÑÇËìñÇƒÇÈíl
		 * @param isSelected ÉZÉãÇ™ëIëÇ≥ÇÍÇƒÇ¢ÇÈèÍçáÇÕ true
		 * @param hasFocus ÉtÉHÅ[ÉJÉXÇ™Ç†ÇÈèÍçáÇÕ true
		 * @param row çs
		 * @param column óÒ
		 * @return ÉeÅ[ÉuÉãÉZÉãÉåÉìÉ_ÉäÉìÉO
		 */
		public Component getTableCellRendererComponent(JTable table,
				Object value, boolean isSelected, boolean hasFocus, int row, int column)
		{
			super.getTableCellRendererComponent(table, value,
					isSelected, hasFocus, row, column);
			
			switch(column)
			{
				case 1:
					super.setHorizontalAlignment(SwingConstants.RIGHT);
					break;
				default:
					super.setHorizontalAlignment(SwingConstants.LEFT);
					break;
			}

			return this;
		}
	}
}
