/*
 * PointCardCleaningPanel.java
 *
 * Created on 2008/09/09, 10:12
 */

package com.geobeck.sosia.pos.hair.pointcard;

import com.geobeck.sosia.pos.basicinfo.EnvironmentalSetting;
import com.geobeck.sosia.pos.pointcard.enumPointcardProduct;
import com.geobeck.swing.*;
import com.geobeck.sosia.pos.system.*;
import com.geobeck.sql.*;
import com.geobeck.sosia.pos.pointcard.AbstractCardCommunication;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.ArrayList;
import javax.comm.CommPortIdentifier;
import javax.swing.DefaultComboBoxModel;
import com.geobeck.barcode.SerialParameters;
import com.geobeck.sosia.pos.util.MessageUtil;
/**
 *
 * @author  shiera.delusa
 */
public class PointCardCleaningPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx {
    //constants:
    private final static int COM_PORT_ERROR      = 20000;   // ポートエラー
    private final static int MACHINE_STATE_ERROR = 20001;   // 接続エラー
    private final static int REGIST_OK           = 201;     // 登録OK
    private final static int UNKNOWN_ERROR       = 1099;    // 予期せぬエラー
    
    //variables:
    private ArrayList<String> portsList;
    
    private	EnvironmentalSetting	es	=	null;
    
    /** Creates new form PointCardCleaningPanel */
    public PointCardCleaningPanel() {
        es = new EnvironmentalSetting();
        initComponents();
        addMouseCursorChange();
        this.init();
        this.setSize(800, 480);
        this.setPath("ポイントカード");
        this.setTitle("初期設定画面");
        
        pointcardProduct.setModel(
                new DefaultComboBoxModel(enumPointcardProduct.values()));
        pointcardProduct.setSelectedItem(
                enumPointcardProduct.getCurrent(SystemInfo.getPointcardConnection()));
    }
    
    private void addMouseCursorChange()
    {
        SystemInfo.addMouseCursorChange(registerButton);
        SystemInfo.addMouseCursorChange(cleanButton);
    }
    
    private void init() {
        serialPort.addItem("");
        
        for (String sp : es.getSerialPortList()) {
            serialPort.addItem(sp);
        }
        this.setSelectedSerialPort();
        
        dateType.setSelectedIndex(SystemInfo.getPointDefaultDateType());
    }
    
    private void setSelectedSerialPort() {

        if(0 < serialPort.getItemCount()) {
            serialPort.setSelectedIndex(0);
        }

        String selPortName = SystemInfo.getPointcardParameters().getPortName();
        if (selPortName == null) return;
        
        if (selPortName.length() > 0 && selPortName.startsWith("COM")) {
            for(int i = 0; i < es.getSerialPortList().size(); i ++) {
                if(es.getSerialPortList().get(i).equals(selPortName)) {
                    serialPort.setSelectedIndex(i + 1);
                    return;
                }
            }
        } else {
            serialPort.setSelectedItem(selPortName);
        }
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        registerButton = new javax.swing.JButton();
        registerButton.setContentAreaFilled(false);
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        serialPort = new javax.swing.JComboBox();
        pointcardProduct = new javax.swing.JComboBox();
        pointcardProduct.setVisible(false);
        jLabel2 = new javax.swing.JLabel();
        jLabel2.setVisible(false);
        jLabel3 = new javax.swing.JLabel();
        dateType = new javax.swing.JComboBox();
        cleanButton = new javax.swing.JButton();
        registerButton.setContentAreaFilled(false);

        registerButton.setIcon(SystemInfo.getImageIcon( "/button/common/regist_off.jpg" ));
        registerButton.setBorder(null);
        registerButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        registerButton.setPressedIcon(SystemInfo.getImageIcon( "/button/common/regist_on.jpg" ));
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        jPanel1.setOpaque(false);
        jLabel1.setText("COM\u30dd\u30fc\u30c8\u8a2d\u5b9a");

        serialPort.setEditable(true);

        jLabel2.setText("\u6a5f\u7a2e");

        jLabel3.setText("\u65e5\u4ed8\u5370\u5b57\u521d\u671f\u5024");

        dateType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "\u6765\u5e97\u65e5\u4ed8", "\u6b21\u56de\u4e88\u7d04\u65e5", "\u8cde\u7f8e\u671f\u9650", "\u6b21\u56de\u6765\u5e97\u6848\u5185" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addGap(28, 28, 28))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(28, 28, 28)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateType, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serialPort, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pointcardProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pointcardProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serialPort, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateType, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(118, Short.MAX_VALUE))
        );

        cleanButton.setIcon(SystemInfo.getImageIcon( "/button/common/card_cleaning_off.jpg" ));
        cleanButton.setBorder(null);
        cleanButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cleanButton.setPressedIcon(SystemInfo.getImageIcon( "/button/common/card_cleaning_on.jpg" ));
        cleanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(cleanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cleanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents
    
	private void cleanButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cleanButtonActionPerformed
	{//GEN-HEADEREND:event_cleanButtonActionPerformed
            InsertCardDialog.ShowDialog(parentFrame, InsertCardDialog.MODE_CLEAN);
	}//GEN-LAST:event_cleanButtonActionPerformed
        
    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed

        String readerPortName = serialPort.getSelectedItem().toString().trim();
        SerialParameters pointCardParams = SystemInfo.getPointcardParameters();
        
        if( pointCardParams == null ) {
            this.displayMessage( COM_PORT_ERROR );
            return;
        }
        
        SystemInfo.closePointcardConnection();
        
        pointCardParams.setPortName( readerPortName );
        SystemInfo.setPointcardParameters( pointCardParams );
        Integer productId = ((enumPointcardProduct)pointcardProduct.getSelectedItem()).getId();
        SystemInfo.setPointcardProductId( productId );
        SystemInfo.setUsePointcard( true );
        
        if( SystemInfo.openPointcardConnection() == false ) {
            this.displayMessage( COM_PORT_ERROR );
            return;
        }
        
        if( !SystemInfo.getPointcardConnection().Status() ){
            this.displayMessage( MACHINE_STATE_ERROR );
            return;
        }
        
        if( es.registPoinrcardPort(readerPortName, productId) ){
            this.displayMessage( REGIST_OK );
        }else{
            this.displayMessage( UNKNOWN_ERROR );
        }

        if( es.registPointDefaultDateType(dateType.getSelectedIndex()) ){
            SystemInfo.setPointDefaultDateType(dateType.getSelectedIndex());
        }
    }//GEN-LAST:event_registerButtonActionPerformed
    
    private void displayMessage( int messageType ) {
        switch( messageType ) {
            case COM_PORT_ERROR:
                MessageDialog.showMessageDialog( this.getParentFrame(),
                        MessageUtil.getMessage( COM_PORT_ERROR ),
                        javax.swing.JOptionPane.ERROR_MESSAGE );
                
                break;
            case MACHINE_STATE_ERROR:
                MessageDialog.showMessageDialog( this.getParentFrame(),
                        MessageUtil.getMessage( MACHINE_STATE_ERROR ),
                        javax.swing.JOptionPane.ERROR_MESSAGE );
                break;
            case REGIST_OK:
                MessageDialog.showMessageDialog( this.getParentFrame(),
                        MessageUtil.getMessage( REGIST_OK ),
                        javax.swing.JOptionPane.INFORMATION_MESSAGE );
                break;
            case UNKNOWN_ERROR:
                MessageDialog.showMessageDialog( this.getParentFrame(),
                        MessageUtil.getMessage( UNKNOWN_ERROR ),
                        javax.swing.JOptionPane.ERROR_MESSAGE );
                break;
            default:
                break;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cleanButton;
    private javax.swing.JComboBox dateType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox pointcardProduct;
    private javax.swing.JButton registerButton;
    private javax.swing.JComboBox serialPort;
    // End of variables declaration//GEN-END:variables
    
}
