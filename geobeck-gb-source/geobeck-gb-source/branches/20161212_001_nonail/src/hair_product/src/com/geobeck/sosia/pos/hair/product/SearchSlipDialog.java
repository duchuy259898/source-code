/*
 * SearchSlipDialog.java
 *
 * Created on 2008/09/18, 11:45
 */

package com.geobeck.sosia.pos.hair.product;

import com.geobeck.sosia.pos.master.commodity.MstSupplier;
import com.geobeck.sosia.pos.master.company.MstShop;
import com.geobeck.sosia.pos.swing.JComboBoxLabel;
import com.geobeck.sosia.pos.swing.SelectTableCellRenderer;
import com.geobeck.sosia.pos.system.SystemInfo;
import com.geobeck.sosia.pos.util.MessageUtil;
import com.geobeck.sql.ConnectionWrapper;
import com.geobeck.swing.CustomFilter;
import com.geobeck.swing.MessageDialog;
import com.geobeck.swing.SwingUtil;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.PlainDocument;

/**
 *
 * @author  s_matsumura
 */
public class SearchSlipDialog extends javax.swing.JDialog {
	private PrintInventry	ia	=	new PrintInventry();
    private SearchSlip	sa	=	new SearchSlip();

	private SlipData selectedSlip = null;
    private ArrayList<SlipData>		dataArray		=	new ArrayList<SlipData>();

	/**
	 * Creates new form SearchSlipDialog
	 */
    public SearchSlipDialog(java.awt.Frame parent, boolean modal, SearchSlip.SlipType slipType)
	{
		super(parent, modal);
		switch (slipType)
		{
			case ORDER:
				setTitle("î≠íçèëåüçı");
				break;
			case SHIP:
				setTitle("èoå…ì`ï[åüçı");
				break;
			case STORE:
				setTitle("ì¸å…ì`ï[åüçı");
				break;
			default:
				setTitle("ì`ï[åüçı");
				break;
		}
        initComponents();
		addMouseCursorChange();
        sa.setSlipType(slipType);
        this.initSlipType(slipTypeCombo);
        this.initSupplier();
        this.setSize(570, 400);
        SwingUtil.moveCenter(this);
		SystemInfo.initGroupShopComponents(shop, 2);
        //IVS_LVTu start add 2015/10/07 New request #43148
        initSlipColumn();
        //IVS_LVTu end add 2015/10/07 New request #43148
	}
    
    public SearchSlipDialog(java.awt.Dialog parent, boolean modal, SearchSlip.SlipType slipType) {
        super(parent, modal);
		switch (slipType)
		{
			case ORDER:
				setTitle("î≠íçèëåüçı");
				break;
			case SHIP:
				setTitle("èoå…ì`ï[åüçı");
				break;
			case STORE:
				setTitle("ì¸å…ì`ï[åüçı");
				break;
			default:
				setTitle("ì`ï[åüçı");
				break;
		}
        initComponents();
		addMouseCursorChange();
        sa.setSlipType(slipType);
        this.initSlipType(slipTypeCombo);
        this.initSupplier();
        this.setSize(570, 400);
        SwingUtil.moveCenter(this);
		SystemInfo.initGroupShopComponents(shop, 2);
        //IVS_LVTu start add 2015/10/07 New request #43148
        initSlipColumn();
        //IVS_LVTu end add 2015/10/07 New request #43148
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        slipsScrollPane = new javax.swing.JScrollPane();
        slips = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        shopLabel = new javax.swing.JLabel();
        shop = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        shopLabel1 = new javax.swing.JLabel();
        slipTypeCombo = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        shopLabel2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        shopLabel3 = new javax.swing.JLabel();
        cmbTargetPeriodStart = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        jLabel1 = new javax.swing.JLabel();
        cmbTargetPeriodEnd = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        shopLabel4 = new javax.swing.JLabel();
        supplierNo = new javax.swing.JTextField();
        supplier = new javax.swing.JComboBox();
        slipNo1 = new javax.swing.JFormattedTextField();
        ((PlainDocument)slipNo1.getDocument()).setDocumentFilter(
            new CustomFilter(20, CustomFilter.INTEGER));
        slipNo2 = new javax.swing.JFormattedTextField();
        ((PlainDocument)slipNo2.getDocument()).setDocumentFilter(
            new CustomFilter(20, CustomFilter.INTEGER));
        backButton = new javax.swing.JButton();

        selectButton.setIcon(SystemInfo.getImageIcon("/button/select/select_off.jpg"));
        selectButton.setBorderPainted(false);
        selectButton.setContentAreaFilled(false);
        selectButton.setEnabled(false);
        selectButton.setPressedIcon(SystemInfo.getImageIcon("/button/select/select_on.jpg"));
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        searchButton.setIcon(SystemInfo.getImageIcon("/button/search/search_off.jpg"));
        searchButton.setBorderPainted(false);
        searchButton.setContentAreaFilled(false);
        searchButton.setPressedIcon(SystemInfo.getImageIcon("/button/search/search_on.jpg"));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        slips.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ì˙ït", "ì`ï[No.", "édì¸êÊñº", "íSìñé“", "ìXîÃì¸å…êî", "ã∆ñ±ì¸å…êî", "ì¸å…ã‡äz"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        slips.setSelectionBackground(new java.awt.Color(255, 210, 142));
        slips.setSelectionForeground(new java.awt.Color(0, 0, 0));
        slips.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(slips, SystemInfo.getTableHeaderRenderer());
        slips.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        SelectTableCellRenderer.setSelectTableCellRenderer(slips);
        slips.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        slips.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                slipsMouseReleased(evt);
            }
        });
        slips.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                slipsKeyReleased(evt);
            }
        });
        slipsScrollPane.setViewportView(slips);

        shopLabel.setText("ìXï‹");

        shop.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        shopLabel1.setText("ëŒè€");

        slipTypeCombo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        shopLabel2.setText("ì`ï[No.");

        jLabel2.setText("Å`");

        shopLabel3.setText("ì˙ït");

        cmbTargetPeriodStart.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodStart.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodStartFocusGained(evt);
            }
        });

        jLabel1.setText("Å`");

        cmbTargetPeriodEnd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodEnd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodEndFocusGained(evt);
            }
        });

        shopLabel4.setText("édì¸êÊ");

        supplierNo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        supplierNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                supplierNoFocusLost(evt);
            }
        });

        supplier.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierActionPerformed(evt);
            }
        });

        slipNo1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        slipNo1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        slipNo2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        slipNo2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shopLabel2)
                    .addComponent(shopLabel1)
                    .addComponent(shopLabel)
                    .addComponent(shopLabel3)
                    .addComponent(shopLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(supplierNo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(shop, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(slipTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(slipNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmbTargetPeriodStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbTargetPeriodEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(slipNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shop, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shopLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slipTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shopLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slipNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slipNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shopLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTargetPeriodStart, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbTargetPeriodEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shopLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supplierNo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        backButton.setIcon(SystemInfo.getImageIcon("/button/common/close_off.jpg"));
        backButton.setBorderPainted(false);
        backButton.setContentAreaFilled(false);
        backButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/close_on.jpg"));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(slipsScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slipsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

	private void slipsKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_slipsKeyReleased
	{//GEN-HEADEREND:event_slipsKeyReleased
		if (slips.getSelectedRow() >= 0)
		{
			selectButton.setEnabled(true);
		}
		else
		{
			selectButton.setEnabled(false);
		}
	}//GEN-LAST:event_slipsKeyReleased

	private void slipsMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_slipsMouseReleased
	{//GEN-HEADEREND:event_slipsMouseReleased
		if (slips.getSelectedRow() >= 0)
		{
			selectButton.setEnabled(true);
		}
		else
		{
			selectButton.setEnabled(false);
		}
	}//GEN-LAST:event_slipsMouseReleased

    private void cmbTargetPeriodStartFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodStartFocusGained
        cmbTargetPeriodStart.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodStartFocusGained

    /**
	 * édì¸êÊÇèâä˙âªÇ∑ÇÈÅB
	 */
	private void initSupplier()
	{
		try
		{
			supplier.removeAllItems();

			for(MstSupplier ms : ia.getSuppliers())
			{
				supplier.addItem(ms);
			}
			supplier.setSelectedIndex(0);
		}
		catch (SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);

			MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(1099),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
		}
	}
    
    //ëŒè€ÇÃèâä˙âª
	private void initSlipType(JComboBoxLabel combobox)
	{
		switch (sa.getSlipType())
		{
			case ORDER:
				combobox.addItem(new SlipTypeItem(SearchSlip.SlipType.ORDER, "î≠íçèë"));
				break;
			case STORE:
				combobox.addItem(new SlipTypeItem(SearchSlip.SlipType.STORE, "ì¸å…ì`ï["));
				break;
			case SHIP:
				combobox.addItem(new SlipTypeItem(SearchSlip.SlipType.SHIP, "èoå…ì`ï["));
				break;
			default:
				combobox.addItem(new SlipTypeItem(SearchSlip.SlipType.ORDER, "î≠íçèë"));
				combobox.addItem(new SlipTypeItem(SearchSlip.SlipType.STORE, "ì¸å…ì`ï["));
				combobox.addItem(new SlipTypeItem(SearchSlip.SlipType.SHIP, "èoå…ì`ï["));
				break;
		}
	}

	/**
	 *
	 */
	public void setShop(MstShop mstShop)
	{
		shop.setSelectedItem(mstShop);
	}
    
    //åüçıÉ{É^Éì
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        this.searchAccount();
        this.showAccount();
		selectButton.setEnabled(false);
    }//GEN-LAST:event_searchButtonActionPerformed

    /**
	 * ì`ï[åüçıèàóùÇçsÇ§ÅB
	 */
	public void searchAccount()
	{
		this.setSearchCondition();
		
		try
		{
			ConnectionWrapper	con	=	SystemInfo.getConnection();

            sa.load(con);

		}
		catch(SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
			MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(1099),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
		}
	}
    
    /**
	 * åüçıèåèÇÉZÉbÉgÇ∑ÇÈÅB
	 */
	public void setSearchCondition()
	{
		//ìXï‹
		sa.setShop((MstShop)shop.getSelectedItem());
		
		//ì`ï[No.
        sa.setSlipNO(0, (slipNo1.getText().equals("") ? null : Integer.parseInt(slipNo1.getText())));
		sa.setSlipNO(1, (slipNo2.getText().equals("") ? null : Integer.parseInt(slipNo2.getText())));
		
		//ì˙ït
		sa.setSearchDate(0, cmbTargetPeriodStart.getDate());
		sa.setSearchDate(1, cmbTargetPeriodEnd.getDate());
        
        //édì¸êÊ
		sa.setSupplier((MstSupplier)supplier.getSelectedItem());
	}
    
    /**
	 * åüçıåãâ Çï\é¶Ç∑ÇÈÅB
	 */
        //IVS_LVTu start edit 2015/10/07 New request #43148
	public void showAccount()
	{
		SimpleDateFormat fmt = new SimpleDateFormat("yyyy/MM/dd");

		SwingUtil.clearTable(slips);
        DefaultTableModel	model	=	(DefaultTableModel) slips.getModel();
        for(SlipData sd : sa)
		{
            String strdate = fmt.format(sd.getSlipDate());
			Object[]	rowData	=	{	strdate,
										sd.getSlipNo(),
										sd.getSupplierName(),
										sd.getStaffName(),
                                                                                sd.getItemNum1(),
                                                                                sd.getItemNum2(),
                                                                                sd.getCostPriceTotal()
                        };
			model.addRow(rowData);
		}
	}
        //IVS_LVTu end add 2015/10/07 New request #43148
    
    //ï¬Ç∂ÇÈÉ{É^Éì
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    //ëIëÉ{É^Éì
    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        int		index	=	slips.getSelectedRow();
        if(0 <= index) {
            selectedSlip = sa.get(index);
        }

        this.setVisible(false);
    }//GEN-LAST:event_selectButtonActionPerformed

	/**
	 *
	 */
    private void addMouseCursorChange()
	{
		SystemInfo.addMouseCursorChange(searchButton);
		SystemInfo.addMouseCursorChange(selectButton);
		SystemInfo.addMouseCursorChange(backButton);
	}
    
    private void setKeyListener()
	{
		shop.addKeyListener(SystemInfo.getMoveNextField());
		shop.addFocusListener(SystemInfo.getSelectText());
        slipTypeCombo.addKeyListener(SystemInfo.getMoveNextField());
		slipTypeCombo.addFocusListener(SystemInfo.getSelectText());
		supplier.addKeyListener(SystemInfo.getMoveNextField());
		supplier.addFocusListener(SystemInfo.getSelectText());
		supplierNo.addKeyListener(SystemInfo.getMoveNextField());
		supplierNo.addFocusListener(SystemInfo.getSelectText());
        slipNo1.addKeyListener(SystemInfo.getMoveNextField());
		slipNo1.addFocusListener(SystemInfo.getSelectText());
        slipNo2.addKeyListener(SystemInfo.getMoveNextField());
		slipNo2.addFocusListener(SystemInfo.getSelectText());
        cmbTargetPeriodStart.addKeyListener(SystemInfo.getMoveNextField());
        cmbTargetPeriodStart.addFocusListener(SystemInfo.getSelectText());
        cmbTargetPeriodEnd.addKeyListener(SystemInfo.getMoveNextField());
        cmbTargetPeriodEnd.addFocusListener(SystemInfo.getSelectText());
	}
    
    /**
	 * ñæç◊ÇÃóÒÇèâä˙âªÇ∑ÇÈÅB
	 */
	private void initProductsColumn()
	{
		//óÒÇÃïùÇê›íËÇ∑ÇÈÅB
		slips.getColumnModel().getColumn(0).setPreferredWidth(70);		// ì˙ït
		slips.getColumnModel().getColumn(1).setPreferredWidth(70);		// ì`ï[No.
		slips.getColumnModel().getColumn(2).setPreferredWidth(70);		// édì¸êÊñº
		slips.getColumnModel().getColumn(3).setPreferredWidth(70);		// íSìñé“
		
	}
        //IVS_LVTu start add 2015/10/07 New request #43148
        private void initSlipColumn() {
            switch (sa.getSlipType())
		{
			case ORDER:
                                //ìXîÃì¸å…êî
				slips.getColumn("ìXîÃì¸å…êî").setWidth(0);
                                slips.getColumn("ìXîÃì¸å…êî").setMinWidth(0);
                                slips.getColumn("ìXîÃì¸å…êî").setMaxWidth(0);
                                slips.getColumn("ìXîÃì¸å…êî").setPreferredWidth(0);
                                //ã∆ñ±ì¸å…êî
                                slips.getColumn("ã∆ñ±ì¸å…êî").setWidth(0);
                                slips.getColumn("ã∆ñ±ì¸å…êî").setMinWidth(0);
                                slips.getColumn("ã∆ñ±ì¸å…êî").setMaxWidth(0);
                                slips.getColumn("ã∆ñ±ì¸å…êî").setPreferredWidth(0);
                                //ì¸å…ã‡äz
                                slips.getColumn("ì¸å…ã‡äz").setWidth(0);
                                slips.getColumn("ì¸å…ã‡äz").setMinWidth(0);
                                slips.getColumn("ì¸å…ã‡äz").setMaxWidth(0);
                                slips.getColumn("ì¸å…ã‡äz").setPreferredWidth(0);
				break;
			case STORE:
                                //ìXîÃì¸å…êî
				slips.getColumn("ìXîÃì¸å…êî").setWidth(80);
                                slips.getColumn("ìXîÃì¸å…êî").setMinWidth(80);
                                slips.getColumn("ìXîÃì¸å…êî").setMaxWidth(80);
                                slips.getColumn("ìXîÃì¸å…êî").setPreferredWidth(80);
                                //ã∆ñ±ì¸å…êî
                                slips.getColumn("ã∆ñ±ì¸å…êî").setWidth(80);
                                slips.getColumn("ã∆ñ±ì¸å…êî").setMinWidth(80);
                                slips.getColumn("ã∆ñ±ì¸å…êî").setMaxWidth(80);
                                slips.getColumn("ã∆ñ±ì¸å…êî").setPreferredWidth(80);
                                //ì¸å…ã‡äz
                                slips.getColumn("ì¸å…ã‡äz").setWidth(80);
                                slips.getColumn("ì¸å…ã‡äz").setMinWidth(80);
                                slips.getColumn("ì¸å…ã‡äz").setMaxWidth(80);
                                slips.getColumn("ì¸å…ã‡äz").setPreferredWidth(80);
				break;
			case SHIP:
                                //change header column
                                slips.getColumn("ìXîÃì¸å…êî").setHeaderValue("ìXîÃèoå…êî");
                                slips.getColumn("ã∆ñ±ì¸å…êî").setHeaderValue("ã∆ñ±èoå…êî");
                                //ìXîÃèoå…êî
				slips.getColumn("ìXîÃèoå…êî").setWidth(80);
                                slips.getColumn("ìXîÃèoå…êî").setMinWidth(80);
                                slips.getColumn("ìXîÃèoå…êî").setMaxWidth(80);
                                slips.getColumn("ìXîÃèoå…êî").setPreferredWidth(80);
                                //ã∆ñ±èoå…êî
                                slips.getColumn("ã∆ñ±èoå…êî").setWidth(80);
                                slips.getColumn("ã∆ñ±èoå…êî").setMinWidth(80);
                                slips.getColumn("ã∆ñ±èoå…êî").setMaxWidth(80);
                                slips.getColumn("ã∆ñ±èoå…êî").setPreferredWidth(80);
                                //ì¸å…ã‡äz
                                slips.getColumn("ì¸å…ã‡äz").setWidth(0);
                                slips.getColumn("ì¸å…ã‡äz").setMinWidth(0);
                                slips.getColumn("ì¸å…ã‡äz").setMaxWidth(0);
                                slips.getColumn("ì¸å…ã‡äz").setPreferredWidth(0);
				break;
			default:
				break;
		}
        }
        //IVS_LVTu end add 2015/10/07 New request #43148
  
    //ì˙ït
    private void cmbTargetPeriodEndFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodEndFocusGained
        cmbTargetPeriodEnd.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodEndFocusGained

    //édì¸êÊ
    private void supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierActionPerformed
		UIUtil.outputSupplier(supplier, supplierNo);
    }//GEN-LAST:event_supplierActionPerformed

    private void supplierNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_supplierNoFocusLost
		UIUtil.selectSupplier(supplierNo, supplier);
    }//GEN-LAST:event_supplierNoFocusLost

	public SlipData getSelectedSlip()
	{
		return selectedSlip;
	}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEnd;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton selectButton;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel shop;
    private javax.swing.JLabel shopLabel;
    private javax.swing.JLabel shopLabel1;
    private javax.swing.JLabel shopLabel2;
    private javax.swing.JLabel shopLabel3;
    private javax.swing.JLabel shopLabel4;
    private javax.swing.JFormattedTextField slipNo1;
    private javax.swing.JFormattedTextField slipNo2;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel slipTypeCombo;
    private javax.swing.JTable slips;
    private javax.swing.JScrollPane slipsScrollPane;
    private javax.swing.JComboBox supplier;
    private javax.swing.JTextField supplierNo;
    // End of variables declaration//GEN-END:variables

	/**
	 *
	 */
	private static class SlipTypeItem
	{
		private SearchSlip.SlipType slipType;
		private String slipName;

		public SlipTypeItem()
		{
			
		}

		public SlipTypeItem(SearchSlip.SlipType slipType, String slipName)
		{
			this.slipType = slipType;
			this.slipName = slipName;
		}

		public void setSlipType(SearchSlip.SlipType slipType)
		{
			this.slipType = slipType;
		}

		public SearchSlip.SlipType getSlipType()
		{
			return this.slipType;
		}

		public void setSlipName(String slipName)
		{
			this.slipName = slipName;
		}

		public String getSlipName()
		{
			return this.slipName;
		}

		public String toString()
		{
			return this.slipName;
		}

		public boolean equals(Object obj)
		{
			if (!(obj instanceof SlipTypeItem))
			{
				return false;
			}

			SlipTypeItem o2 = (SlipTypeItem) obj;
			if (this.slipType == o2.getSlipType())
			{
				return true;
			}

			return false;
		}
	}
}
