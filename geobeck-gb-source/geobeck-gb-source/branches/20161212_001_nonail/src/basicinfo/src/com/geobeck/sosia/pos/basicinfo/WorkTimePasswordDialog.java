/*
 * WorkTimePasswordDialog.java
 *
 * Created on 2008/10/03, 19:08
 */

package com.geobeck.sosia.pos.basicinfo;

import com.geobeck.sosia.pos.data.company.StaffWorkTimePass;
import com.geobeck.sosia.pos.master.company.MstShop;
import com.geobeck.sosia.pos.system.SystemInfo;
import com.geobeck.sosia.pos.util.MessageUtil;
import com.geobeck.swing.MessageDialog;
import com.geobeck.swing.SwingUtil;
import java.sql.SQLException;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;

/**
 * スタッフ出退勤パスワードの確認ダイアログ
 * @author  geobeck
 */
public class WorkTimePasswordDialog extends javax.swing.JDialog {
    
    protected MstShop    shop   = new MstShop();
    protected boolean   auth   = false;
    
    /**
     * 店舗
     * @param shop 
     */
    public void setShop(MstShop shop)
    {
            this.shop = shop;
    }     
    
    /**
     * 認証結果
     */
    public boolean isAuth() {
        return auth;
    }
    
    
    /** Creates new form WorkTimePasswordDialog */
    public WorkTimePasswordDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        SwingUtil.moveCenter(this);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("\u30d1\u30b9\u30ef\u30fc\u30c9\u78ba\u8a8d");
        jLabel1.setText("\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002");

        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText("\u30ad\u30e3\u30f3\u30bb\u30eb");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(39, 39, 39)
                            .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnCancel))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(31, 31, 31)
                            .addComponent(txtPassword)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOK))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            this.btnOKActionPerformed(null);
        }
    }//GEN-LAST:event_txtPasswordKeyPressed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        auth = false;
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        if (checkPassword()) {
            auth = true;
            this.setVisible(false);
        }
        else {
            MessageDialog.showMessageDialog(this,
                MessageUtil.getMessage(1302, ""),
                this.getTitle(),
                JOptionPane.ERROR_MESSAGE);   
        }
    }//GEN-LAST:event_btnOKActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
 
    /**
     * 入力パスワード確認
     */
    private boolean checkPassword() {
        
        StaffWorkTimePass pass = new StaffWorkTimePass();

        //DBに設定されているパスワードを取得
        String regPassword = null;
        try
        {
            regPassword = pass.getPassword(SystemInfo.getConnection(), shop.getShopID());
        }
		catch(SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e.getCause());
            return false;
        }
        if (regPassword == null) {
            regPassword = "";
        }

        //入力されたパスワードを取得
        String inputPassStr = "";
        try
        {
            char[] inputArray = txtPassword.getPassword();
            inputPassStr = new String(inputArray);
        }
        catch(NullPointerException e)
        {
            inputPassStr = "";
        }

        //判定
        if (regPassword.equals(inputPassStr)) {
            return true;
        }
        else {
            return false;
        }
        
    }
    
    public static boolean isAuthPassword() {
        return isAuthPassword(SystemInfo.getCurrentShop());
    }
    
    public static boolean isAuthPassword(MstShop shop) {

        boolean result = true;
        
        StaffWorkTimePass pass = new StaffWorkTimePass();
        
        //DBに設定されているパスワードを取得
        String regPassword = null;
        try {
            regPassword = pass.getPassword(SystemInfo.getConnection(), shop.getShopID());
        } catch(SQLException e) {
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e.getCause());
        }

        if (regPassword != null) {
            //パスワード確認
            WorkTimePasswordDialog wpw = new WorkTimePasswordDialog(null, true);
            wpw.setShop(shop);
            wpw.setVisible(true);
            if (!wpw.isAuth()) {
                //パスワードNG
                result = false;
            }
        }
        
        return result;
    }
}
