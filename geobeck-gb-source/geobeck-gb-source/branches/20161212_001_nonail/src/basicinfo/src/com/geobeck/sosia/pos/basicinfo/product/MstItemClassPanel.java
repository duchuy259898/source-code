/*
 * MstItemClassPanel.java
 *
 * Created on 2006/10/20, 10:52
 */

package com.geobeck.sosia.pos.basicinfo.product;

import com.geobeck.sosia.pos.basicinfo.SimpleMaster;
import com.geobeck.sosia.pos.basicinfo.SimpleMasterDialog;
import com.geobeck.sosia.pos.master.MstData;
import com.geobeck.sosia.pos.master.product.MstItemClass;
import com.geobeck.sosia.pos.master.product.MstItemClasses;
import com.geobeck.sosia.pos.system.SystemInfo;
import java.awt.*;
import javax.swing.*;
import javax.swing.table.*;
import javax.swing.text.*;
import java.sql.*;
import java.util.logging.*;
import com.geobeck.sql.*;
import com.geobeck.swing.*;
import com.geobeck.util.*;
import com.geobeck.sosia.pos.swing.*;
import com.geobeck.sosia.pos.util.*;

/**
 *
 * @author  katagiri
 */
public class MstItemClassPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx
{
	private MstItemClasses		mgcs		=	new MstItemClasses();
	private Integer			selIndex	=	-1;
        
        //IVS_vtnhan start add 20140708 MASHU_è§ïiï™óﬁìoò^
        private Integer useShopCategory = null;
        private Integer shopId = null;
	//IVS_vtnhan end add 20140708 MASHU_è§ïiï™óﬁìoò^
    
	/** Creates new form MstItemClassPanel */
	public MstItemClassPanel()
	{
		super();
		initComponents();
		addMouseCursorChange();
		this.setSize(615, 680);
		this.setPath("äÓñ{ê›íË >> è§ïiÉ}ÉXÉ^");
		this.setTitle("è§ïiï™óﬁìoò^");
		this.setListener();
		this.init();
	}

        private void initIntegration() {

            integration.removeAllItems();
            integration.addItem(null);

            SimpleMaster sm = new SimpleMaster(
                    "",
                    "mst_item_integration",
                    "item_integration_id",
                    "item_integration_name", 0);

            sm.loadData();

            for (MstData md : sm) {
                integration.addItem(md);
            }

            integration.setSelectedIndex(0);
        } 
        
        //IVS_vtnhan start add 20140716 MASHU_è§ïiï™óﬁìoò^
        
        /**
         * get data for combo ã∆ë‘
         */
        private void initCmbShopCategory() {

            combCategory.removeAllItems();
            combCategory.addItem(null);

            SimpleMaster sm = new SimpleMaster(
                    "",
                    "mst_shop_category",
                    "shop_category_id",
                    "shop_class_name", 0);

            sm.loadData();

            for (MstData md : sm) {
                combCategory.addItem(md);
            }
 
            combCategory.setSelectedIndex(0);
        }  
        
        //IVS_vtnhan end add 20140716 MASHU_è§ïiï™óﬁìoò^
      
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itemClassNameLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        displaySeq = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)displaySeq.getDocument()).setDocumentFilter(
            new CustomFilter(4, CustomFilter.NUMERIC));
        renewButton = new javax.swing.JButton();
        itemClassesScrollPane = new javax.swing.JScrollPane();
        itemClasses = new javax.swing.JTable();
        displaySeqLabel = new javax.swing.JLabel();
        itemClassName = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)itemClassName.getDocument()).setDocumentFilter(
            new CustomFilter(20));
        deleteButton = new javax.swing.JButton();
        productButton = new javax.swing.JButton();
        itemClassContractedNameLabel = new javax.swing.JLabel();
        itemClassContractedName = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)itemClassName.getDocument()).setDocumentFilter(
            new CustomFilter(20));
        technicClassContractedNameLabel1 = new javax.swing.JLabel();
        integration = new javax.swing.JComboBox();
        integrationButton = new javax.swing.JButton();
        chkPrepaid = new javax.swing.JCheckBox();
        combCategory = new javax.swing.JComboBox();
        lblCategory = new javax.swing.JLabel();

        setFocusCycleRoot(true);

        itemClassNameLabel.setText("ï™óﬁñº");

        addButton.setIcon(SystemInfo.getImageIcon("/button/common/insert_off.jpg"));
        addButton.setBorderPainted(false);
        addButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/insert_on.jpg"));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        displaySeq.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        displaySeq.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        renewButton.setIcon(SystemInfo.getImageIcon("/button/common/update_off.jpg"));
        renewButton.setBorderPainted(false);
        renewButton.setEnabled(false);
        renewButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/update_on.jpg"));
        renewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renewButtonActionPerformed(evt);
            }
        });

        itemClassesScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        itemClasses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "ï™óﬁñº", "ó™èÃ", "ÉvÉäÉyÉCÉh", "ï\é¶èá", "ìùçáï™óﬁ", "ã∆ë‘"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemClasses.setSelectionBackground(new java.awt.Color(220, 220, 220));
        itemClasses.setSelectionForeground(new java.awt.Color(0, 0, 0));
        itemClasses.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        itemClasses.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(itemClasses, SystemInfo.getTableHeaderRenderer());
        itemClasses.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        this.initTableColumnWidth();
        SelectTableCellRenderer.setSelectTableCellRenderer(itemClasses);
        itemClasses.setDefaultRenderer(String.class, new TableCellAlignRenderer());
        SwingUtil.setJTableHeaderRenderer(itemClasses, SystemInfo.getTableHeaderRenderer());
        itemClasses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itemClassesMouseReleased(evt);
            }
        });
        itemClasses.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemClassesKeyReleased(evt);
            }
        });
        itemClassesScrollPane.setViewportView(itemClasses);

        displaySeqLabel.setText("ë}ì¸à íu");

        itemClassName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        itemClassName.setColumns(20);
        itemClassName.setInputKanji(true);

        deleteButton.setIcon(SystemInfo.getImageIcon("/button/common/delete_off.jpg"));
        deleteButton.setBorderPainted(false);
        deleteButton.setEnabled(false);
        deleteButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/delete_on.jpg"));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        productButton.setIcon(SystemInfo.getImageIcon("/button/master/regist_item_off.jpg"));
        productButton.setBorderPainted(false);
        productButton.setPressedIcon(SystemInfo.getImageIcon("/button/master/regist_item_on.jpg"));
        productButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productButtonActionPerformed(evt);
            }
        });

        itemClassContractedNameLabel.setText("ó™èÃ");

        itemClassContractedName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        itemClassContractedName.setColumns(20);
        itemClassContractedName.setInputKanji(true);

        technicClassContractedNameLabel1.setText("ìùçáï™óﬁ");

        integration.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        integrationButton.setIcon(SystemInfo.getImageIcon("/button/master/integration_reg_off.jpg"));
        integrationButton.setBorderPainted(false);
        integrationButton.setPressedIcon(SystemInfo.getImageIcon("/button/master/integration_reg_on.jpg"));
        integrationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                integrationButtonActionPerformed(evt);
            }
        });

        chkPrepaid.setText("ÉvÉäÉyÉCÉh");
        chkPrepaid.setOpaque(false);

        combCategory.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        lblCategory.setText("ã∆ë‘");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(itemClassesScrollPane)
                            .add(layout.createSequentialGroup()
                                .add(addButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(renewButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(deleteButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(84, 84, 84)
                                .add(productButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(integrationButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(itemClassContractedNameLabel)
                                    .add(itemClassNameLabel))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(layout.createSequentialGroup()
                                        .add(itemClassName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(chkPrepaid)
                                        .add(165, 165, 165))
                                    .add(layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(layout.createSequentialGroup()
                                                .add(itemClassContractedName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(displaySeqLabel))
                                            .add(layout.createSequentialGroup()
                                                .add(0, 0, Short.MAX_VALUE)
                                                .add(lblCategory)))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(displaySeq, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(combCategory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(169, 169, 169))))))
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(technicClassContractedNameLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(integration, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(itemClassNameLabel)
                    .add(itemClassName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(itemClassContractedNameLabel)
                    .add(itemClassContractedName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(displaySeq, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(displaySeqLabel)
                    .add(chkPrepaid))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(combCategory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(lblCategory))
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(integration, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(technicClassContractedNameLabel1)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(addButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(renewButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(deleteButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(productButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(integrationButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(itemClassesScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

	private void productButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_productButtonActionPerformed
	{//GEN-HEADEREND:event_productButtonActionPerformed
		SystemInfo.getLogger().log(Level.INFO, "è§ïiìoò^");
		MstItemPanel	mgp	=	new MstItemPanel();
		
		if(0 <= selIndex)
		{
			mgp.setSelectedItemClassID(mgcs.get(selIndex).getItemClassID());
		}
		
		parentFrame.changeContents(mgp);
	}//GEN-LAST:event_productButtonActionPerformed

	private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteButtonActionPerformed
	{//GEN-HEADEREND:event_deleteButtonActionPerformed
		if(this.checkDelete())
		{
			this.delete();
		}else{
			MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(7101, "ï™óﬁ","è§ïi"),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
		}
	}//GEN-LAST:event_deleteButtonActionPerformed

	private void renewButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_renewButtonActionPerformed
	{//GEN-HEADEREND:event_renewButtonActionPerformed
		if(this.checkInput())
		{
			this.regist(false);
		}
	}//GEN-LAST:event_renewButtonActionPerformed

	private void addButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addButtonActionPerformed
	{//GEN-HEADEREND:event_addButtonActionPerformed
		if(this.checkInput())
		{
			this.regist(true);
		}
	}//GEN-LAST:event_addButtonActionPerformed

	private void itemClassesMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_itemClassesMouseReleased
	{//GEN-HEADEREND:event_itemClassesMouseReleased
		this.changeCurrentData();
	}//GEN-LAST:event_itemClassesMouseReleased

	private void itemClassesKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_itemClassesKeyReleased
	{//GEN-HEADEREND:event_itemClassesKeyReleased
             //IVS_vtnhan start edit 20140722 MASHU_è§ïiï™óﬁìoò^
            //this.changeCurrentData();
            this.changeCurrentData();
             //IVS_vtnhan end edit 20140722 MASHU_è§ïiï™óﬁìoò^
	}//GEN-LAST:event_itemClassesKeyReleased

        private void integrationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_integrationButtonActionPerformed

            SimpleMasterDialog dlg = new SimpleMasterDialog(
                    "è§ïiìùçá",
                    "mst_item_integration",
                    "item_integration_id",
                    "item_integration_name",
                    20, SystemInfo.getTableHeaderRenderer());

            dlg.setOpener(this);
            SwingUtil.openAnchorDialog( null, true, dlg, "è§ïiï™óﬁìùçá", SwingUtil.ANCHOR_HCENTER | SwingUtil.ANCHOR_VCENTER );

            this.initIntegration();
            this.refresh();
        }//GEN-LAST:event_integrationButtonActionPerformed
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JCheckBox chkPrepaid;
    private javax.swing.JComboBox combCategory;
    private javax.swing.JButton deleteButton;
    private com.geobeck.swing.JFormattedTextFieldEx displaySeq;
    private javax.swing.JLabel displaySeqLabel;
    private javax.swing.JComboBox integration;
    private javax.swing.JButton integrationButton;
    private com.geobeck.swing.JFormattedTextFieldEx itemClassContractedName;
    private javax.swing.JLabel itemClassContractedNameLabel;
    private com.geobeck.swing.JFormattedTextFieldEx itemClassName;
    private javax.swing.JLabel itemClassNameLabel;
    private javax.swing.JTable itemClasses;
    private javax.swing.JScrollPane itemClassesScrollPane;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JButton productButton;
    private javax.swing.JButton renewButton;
    private javax.swing.JLabel technicClassContractedNameLabel1;
    // End of variables declaration//GEN-END:variables
	
	/**
	 * è§ïiï™óﬁÉ}ÉXÉ^ìoò^âÊñ ópFocusTraversalPolicy
	 */
	private	MstItemClassFocusTraversalPolicy	ftp	=
			new MstItemClassFocusTraversalPolicy();
	
	/**
	 * è§ïiï™óﬁÉ}ÉXÉ^ìoò^âÊñ ópFocusTraversalPolicyÇéÊìæÇ∑ÇÈÅB
	 * @return è§ïiï™óﬁÉ}ÉXÉ^ìoò^âÊñ ópFocusTraversalPolicy
	 */
	public MstItemClassFocusTraversalPolicy getFocusTraversalPolicy()
	{
		return	ftp;
	}
	
	/**
	 * É{É^ÉìÇ…É}ÉEÉXÉJÅ[É\ÉãÇ™èÊÇ¡ÇΩÇ∆Ç´Ç…ÉJÅ[É\ÉãÇïœçXÇ∑ÇÈÉCÉxÉìÉgÇí«â¡Ç∑ÇÈÅB
	 */
	private void addMouseCursorChange()
	{
		SystemInfo.addMouseCursorChange(addButton);
		SystemInfo.addMouseCursorChange(renewButton);
		SystemInfo.addMouseCursorChange(deleteButton);
		SystemInfo.addMouseCursorChange(productButton);
		SystemInfo.addMouseCursorChange(integrationButton);
	}
	
	/**
	 * ÉRÉìÉ|Å[ÉlÉìÉgÇÃäeÉäÉXÉiÅ[ÇÉZÉbÉgÇ∑ÇÈÅB
	 */
	private void setListener()
	{
		itemClassName.addKeyListener(SystemInfo.getMoveNextField());
		itemClassName.addFocusListener(SystemInfo.getSelectText());
		itemClassContractedName.addKeyListener(SystemInfo.getMoveNextField());
		itemClassContractedName.addFocusListener(SystemInfo.getSelectText());
		displaySeq.addKeyListener(SystemInfo.getMoveNextField());
		displaySeq.addFocusListener(SystemInfo.getSelectText());
		integration.addKeyListener(SystemInfo.getMoveNextField());
		integration.addFocusListener(SystemInfo.getSelectText());
                //IVS_vtnhan start add 20140708 MASHU_è§ïiï™óﬁìoò^
                combCategory.addFocusListener(SystemInfo.getSelectText());
                //IVS_vtnhan end add 20140708 MASHU_è§ïiï™óﬁìoò^
	}
	
	/**
	 * èâä˙âªèàóùÇçsÇ§ÅB
	 */
	private void init()
	{
		try
		{
			ConnectionWrapper	con	=	SystemInfo.getConnection();
			mgcs.load(con);
		}
		catch(SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}

                this.initIntegration();

		this.showData();
                
                //2014/06/04 Thien An added start
                if (SystemInfo.getSetteing().isUsePrepaid() && (SystemInfo.getDatabase().equals("pos_hair_missionf") || SystemInfo.getDatabase().equals("pos_hair_missionf_dev"))) {
                   chkPrepaid.setVisible(true);
                }
                else {
                   chkPrepaid.setVisible(false);
                   itemClasses.getColumnModel().getColumn(2).setMinWidth(0);
                   itemClasses.getColumnModel().getColumn(2).setMaxWidth(0);
                   itemClasses.getColumnModel().getColumn(2).setPreferredWidth(0);
                }
                //2014/06/04 Thien An added end
                
                //IVS_vtnhan start add 20140708 MASHU_è§ïiï™óﬁìoò^
                if(SystemInfo.getCurrentShop().getShopID().equals(0)){
                    useShopCategory = 1;

                }else{
                     useShopCategory = SystemInfo.getCurrentShop().getUseShopCategory();
                }

                if(useShopCategory != null){
                    if(!useShopCategory.equals(1)){
                        itemClasses.getColumnModel().getColumn(5).setMinWidth(0);
                        itemClasses.getColumnModel().getColumn(5).setMaxWidth(0);
                        itemClasses.getColumnModel().getColumn(5).setPreferredWidth(0);
                        lblCategory.setVisible(false);
                        combCategory.removeAllItems();
                        combCategory.setVisible(false);
                     }else{
                         combCategory.setVisible(true);
                         combCategory.removeAllItems();
                         combCategory.addItem(null);

                         this.initCmbShopCategory();
                     }
                }else{

                        itemClasses.getColumnModel().getColumn(5).setMinWidth(0);
                        itemClasses.getColumnModel().getColumn(5).setMaxWidth(0);
                        itemClasses.getColumnModel().getColumn(5).setPreferredWidth(0);
                        lblCategory.setVisible(false);
                        combCategory.removeAllItems();
                        combCategory.setVisible(false);

                }
                

                //IVS_vtnhan end add 20140708 MASHU_è§ïiï™óﬁìoò^
                        
	}
	
	/**
	 * çƒï\é¶ÇçsÇ§ÅB
	 */
	private void refresh()
	{
		//ÉfÅ[É^ÉxÅ[ÉXÇ©ÇÁÉfÅ[É^Çì«Ç›çûÇﬁ
		try
		{
			ConnectionWrapper	con	=	SystemInfo.getConnection();
			
			mgcs.load(con);
		}
		catch(SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
		//ÉeÅ[ÉuÉãÇ…è§ïiãÊï™É}ÉXÉ^ÉfÅ[É^Çï\é¶Ç∑ÇÈ
		this.showData();
		//ì¸óÕÇÉNÉäÉAÇ∑ÇÈ
		this.clear();
		
		itemClassName.requestFocusInWindow();
	}
	
	/**
	 * ì¸óÕçÄñ⁄ÇÉNÉäÉAÇ∑ÇÈÅB
	 */
	private void clear()
	{
		selIndex	=	-1;
		itemClassName.setText("");
		itemClassContractedName.setText("");
		displaySeq.setText("");
                integration.setSelectedIndex(0);
                 //IVS_vtnhan start add 20140708 MASHU_è§ïiï™óﬁìoò^
                if(useShopCategory != null){

                   if(useShopCategory ==1){
                        combCategory.setSelectedIndex(0); 
                   } 

                }
                

                 //IVS_vtnhan end add 20140708 MASHU_è§ïiï™óﬁìoò^
                chkPrepaid.setSelected(false); //2014/06/11 Thien An added
		
		if(0 < itemClasses.getRowCount())
				itemClasses.removeRowSelectionInterval(0, itemClasses.getRowCount() - 1);
		
		this.changeCurrentData();
	}
	
	
	/**
	 * ÉfÅ[É^Çï\é¶Ç∑ÇÈÅB
	 */
	private void showData()
	{
		DefaultTableModel	model	=	(DefaultTableModel)itemClasses.getModel();
		
		//ëSçsçÌèú
		model.setRowCount(0);
		itemClasses.removeAll();
		
		for(MstItemClass mgc : mgcs)
		{
			Object[] rowData = {
                            mgc.getItemClassName(),
                            mgc.getItemClassContractedName(),
                            mgc.getPrepaClassId().equals(1) ? "Åú" : "", //2014/06/04 Thien An added
                            mgc.getDisplaySeq(),
                            mgc.getIntegration(),
                             //IVS_vtnhan start add 20140708 MASHU_è§ïiï™óﬁìoò^
                            mgc.getShopCategory()
                             //IVS_vtnhan end add 20140708 MASHU_è§ïiï™óﬁìoò^
                            
                        };
			model.addRow(rowData);
		}
	}
	
	/**
	 * ëIëÉfÅ[É^Ç™ïœçXÇ≥ÇÍÇΩÇ∆Ç´ÇÃèàóùÇçsÇ§ÅB
	 */
	private void changeCurrentData()
	{
		int	index	=	itemClasses.getSelectedRow();
		
		if(0 <= index && index < mgcs.size() && index != selIndex)
		{
			selIndex	=	index;
			//ëIëÇ≥ÇÍÇƒÇ¢ÇÈÉfÅ[É^Çï\é¶
			this.showCurrentData();
		}
		
		renewButton.setEnabled(0 <= selIndex);
		deleteButton.setEnabled(0 <= selIndex);
	}
	
	/**
	 * ëIëÇ≥ÇÍÇΩÉfÅ[É^Çì¸óÕçÄñ⁄Ç…ï\é¶Ç∑ÇÈÅB
	 */
	private void showCurrentData()
	{
		itemClassName.setText(mgcs.get(selIndex).getItemClassName());
		itemClassContractedName.setText( mgcs.get( selIndex ).getItemClassContractedName() );
		displaySeq.setText(mgcs.get(selIndex).getDisplaySeq().toString());

                integration.setSelectedIndex(0);
                integration.setSelectedItem(mgcs.get(selIndex).getIntegration());
                
                //2014/06/04 An added start
                chkPrepaid.setSelected(mgcs.get(selIndex).getPrepaClassId().equals(1) ? true : false);
                //2014/06/04 An added start
                
                //IVS_vtnhan start add 20140708 MASHU_è§ïiï™óﬁìoò^
                if(useShopCategory != null){
                    if(useShopCategory == 1){

                        combCategory.setSelectedIndex(0);
                        combCategory.setSelectedItem(mgcs.get(selIndex).getShopCategory());
                     }
                
                }

                 //IVS_vtnhan end add 20140708 MASHU_è§ïiï™óﬁìoò^
        }
	
	
	/**
	 * ì¸óÕÉ`ÉFÉbÉNÇçsÇ§ÅB
	 * @return ì¸óÕÉGÉâÅ[Ç™Ç»ÇØÇÍÇŒtrueÇï‘Ç∑ÅB
	 */
	private boolean checkInput()
	{
		//è§ïiãÊï™ñº
		if(itemClassName.getText().equals(""))
		{
			MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "è§ïiãÊï™ñº"),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
			itemClassName.requestFocusInWindow();
			return	false;
		}
		
		// è§ïiãÊï™ó™èÃ
		if( itemClassContractedName.getText().equals(""))
		{
			MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "è§ïiãÊï™ó™èÃ"),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
			itemClassContractedName.requestFocusInWindow();
			return	false;
		}
		if( ( !CheckUtil.checkStringLength( itemClassContractedName.getText(), 5 ) )||!CheckUtil.is1ByteChars( itemClassContractedName.getText() ) )
		{
			MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(1201, "è§ïiãÊï™ó™èÃ", "îºäp5ï∂éö"),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
			itemClassContractedName.requestFocusInWindow();
			return	false;
		}
                
		//ï\é¶èá
		if(displaySeq.getText().equals("0"))
		{
			MessageDialog.showMessageDialog(this,
					"ë}ì¸à íuÇÕ 1 à»è„ÇéwíËÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB",
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
			displaySeq.requestFocusInWindow();
			return	false;
		}
                
		return	true;
	}
	
	
	/**
	 * ì¸óÕÇ≥ÇÍÇΩÉfÅ[É^Çìoò^Ç∑ÇÈÅB
	 * @param isAdd true - í«â¡èàóù
	 * @return true - ê¨å˜
	 */
	private boolean regist(boolean isAdd)
	{
		boolean			result	=	false;
		MstItemClass	mgc		=	new MstItemClass();
		
		if(!isAdd && 0 <= selIndex)
		{
			mgc.setData(mgcs.get(selIndex));
		}
		
		mgc.setItemClassName(itemClassName.getText());
		mgc.setItemClassContractedName( itemClassContractedName.getText() );
		mgc.setDisplaySeq((displaySeq.getText().equals("") ? -1 : Integer.parseInt(displaySeq.getText())));
                mgc.setIntegration((MstData)integration.getSelectedItem());
                 //IVS_vtnhan start add 20140708 MASHU_è§ïiï™óﬁìoò^
                mgc.setShopCategory((MstData)combCategory.getSelectedItem());
                mgc.setMtShop(SystemInfo.getCurrentShop());
                 //IVS_vtnhan end add 20140708 MASHU_è§ïiï™óﬁìoò^
		//2014/06/04 An added start
                mgc.setPrepaClassId(chkPrepaid.isSelected() ? 1 : 0);
                //2014/06/04 An added end
		ConnectionWrapper	con	=	SystemInfo.getConnection();
		
		try
		{
			con.begin();
			
			if(mgc.regist(con, (0 < selIndex ? mgcs.get(selIndex).getDisplaySeq() : -1)))
			{
				con.commit();
				this.refresh();
				result	=	true;
			}
			else
			{
				con.rollback();
			}
		}
		catch(SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
		
		return	result;
	}
	
	
	/**
	 * ëIëÇ≥ÇÍÇΩÉfÅ[É^ÇçÌèúÇ∑ÇÈÅB
	 * @return true - ê¨å˜
	 */
	private boolean delete()
	{
		boolean		result	=	false;
		MstItemClass	mgc	=	null;
		
		if(0 <= selIndex && selIndex < mgcs.size())
		{
			mgc	=	mgcs.get(selIndex);
		}
		
		ConnectionWrapper	con	=	SystemInfo.getConnection();
		
		try
		{
			con.begin();
			
			if(mgc.delete(con))
			{
                                
				con.commit();
				this.refresh();
				result	=	true;
			}
			else
			{
				con.rollback();
			}
		}
		catch(SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
		
		return	result;
	}
	
	/**
	 * ëIëÇ≥ÇÍÇΩï™óﬁÇ…è§ïiìoò^Ç™Ç≥ÇÍÇƒÇ¢ÇÈÇ©ÅB
	 * @return true - ê¨å˜
	 */
	private boolean checkDelete()
	{
		boolean		result	=	false;
		MstItemClass	mgc	=	null;
		
		if(0 <= selIndex && selIndex < mgcs.size())
		{
			mgc	=	mgcs.get(selIndex);
		}
		
		ConnectionWrapper	con	=	SystemInfo.getConnection();
		
		try
		{
			
			mgc.loadItem(con);
			if(mgc.size() == 0){
				result = true;
			}
			
		}
		catch(SQLException e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
		
		return	result;
	}
	
	/**
	 * è§ïiï™óﬁÉ}ÉXÉ^ìoò^âÊñ ópFocusTraversalPolicy
	 */
	private class MstItemClassFocusTraversalPolicy
					extends FocusTraversalPolicy
	{
		/**
		 * aComponent ÇÃÇ†Ç∆Ç≈ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃÇ†Ç∆Ç…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentAfter(Container aContainer,
										   Component aComponent)
		{
			if (aComponent.equals(itemClassName))
			{
				return itemClassContractedName;
			}
			else if (aComponent.equals(itemClassContractedName))
			{
				return displaySeq;
			}
			else if (aComponent.equals(displaySeq))
			{
				return integration;
			}
                        
                        //IVS_vtnhan start add 20140708 MASHU_è§ïiï™óﬁìoò^
                        else if (aComponent.equals(integration))
			{
				return combCategory;
			}
                        else if(aComponent.equals(combCategory)){
                            return itemClassName;
                        }
                        //IVS_vtnhan end add 20140708 MASHU_è§ïiï™óﬁìoò^
			
			return itemClassName;
		}

		/**
		 * aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentBefore(Container aContainer,
											Component aComponent)
		{
			if (aComponent.equals(itemClassName))
			{
				return itemClassName;
			}
			else if (aComponent.equals(displaySeq))
			{
				return itemClassContractedName;
			}
			else if (aComponent.equals(itemClassContractedName))
			{
				return itemClassName;
			}
			
			return itemClassName;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈èâÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAèáï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer êÊì™ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃêÊì™ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getFirstComponent(Container aContainer)
		{
			return itemClassName;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAãtï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer aContainer - ç≈å„ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getLastComponent(Container aContainer)
		{
			return displaySeq;
		}

		/**
		 * ÉtÉHÅ[ÉJÉXÇê›íËÇ∑ÇÈÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÉãÅ[ÉgÇ∆Ç∑ÇÈÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇ™êVÇµÇ≠äJénÇ≥ÇÍÇΩÇ∆Ç´Ç…ÅAÇ±ÇÃÉRÉìÉ|Å[ÉlÉìÉgÇ…ç≈èâÇ…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇ‹Ç∑ÅB
		 * @param aContainer ÉfÉtÉHÉãÉgÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃÉfÉtÉHÉãÉgÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getDefaultComponent(Container aContainer)
		{
			return itemClassName;
		}
		
		/**
		 * ÉEÉBÉìÉhÉEÇ™ç≈èâÇ…ï\é¶Ç≥ÇÍÇΩÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * show() Ç‹ÇΩÇÕ setVisible(true) ÇÃåƒÇ—èoÇµÇ≈àÍìxÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆ÅA
		 * èâä˙âªÉRÉìÉ|Å[ÉlÉìÉgÇÕÇªÇÍà»ç~égópÇ≥ÇÍÇ‹ÇπÇÒÅB
		 * àÍìxï ÇÃÉEÉBÉìÉhÉEÇ…à⁄Ç¡ÇΩÉtÉHÅ[ÉJÉXÇ™çƒÇ—ê›íËÇ≥ÇÍÇΩèÍçáÅA
		 * Ç‹ÇΩÇÕÅAàÍìxîÒï\é¶èÛë‘Ç…Ç»Ç¡ÇΩÉEÉBÉìÉhÉEÇ™çƒÇ—ï\é¶Ç≥ÇÍÇΩèÍçáÇÕÅA
		 * ÇªÇÃÉEÉBÉìÉhÉEÇÃç≈å„Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇΩÉRÉìÉ|Å[ÉlÉìÉgÇ™ÉtÉHÅ[ÉJÉXèäóLé“Ç…Ç»ÇËÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÃÉfÉtÉHÉãÉgé¿ëïÇ≈ÇÕÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * @param window èâä˙ÉRÉìÉ|Å[ÉlÉìÉgÇ™ï‘Ç≥ÇÍÇÈÉEÉBÉìÉhÉE
		 * @return ç≈èâÇ…ÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÅBìKêÿÇ»ÉRÉìÉ|Å[ÉlÉìÉgÇ™Ç»Ç¢èÍçáÇÕ null
		 */
		public Component getInitialComponent(Window window)
		{
			return itemClassName;
		}
	}
	/**
	 * JTableÇÃóÒïùÇèâä˙âªÇ∑ÇÈÅB
	 */
	private void initTableColumnWidth()
	{
		//óÒÇÃïùÇê›íËÇ∑ÇÈÅB
		itemClasses.getColumnModel().getColumn(0).setPreferredWidth(240);
		itemClasses.getColumnModel().getColumn(1).setPreferredWidth(100);
		//itemClasses.getColumnModel().getColumn(2).setPreferredWidth(50); //2014/06/16 Thien An deleted
	}
	
	
	/**
	 * óÒÇÃï\é¶à íuÇê›íËÇ∑ÇÈTableCellRenderer
	 */
	private class TableCellAlignRenderer extends SelectTableCellRenderer
	{
		/** Creates a new instance of ReservationTableCellRenderer */
		public TableCellAlignRenderer()
		{
			super();
		}

		/**
		 * ÉeÅ[ÉuÉãÉZÉãÉåÉìÉ_ÉäÉìÉOÇï‘ÇµÇ‹Ç∑ÅB
		 * @param table JTable
		 * @param value ÉZÉãÇ…äÑÇËìñÇƒÇÈíl
		 * @param isSelected ÉZÉãÇ™ëIëÇ≥ÇÍÇƒÇ¢ÇÈèÍçáÇÕ true
		 * @param hasFocus ÉtÉHÅ[ÉJÉXÇ™Ç†ÇÈèÍçáÇÕ true
		 * @param row çs
		 * @param column óÒ
		 * @return ÉeÅ[ÉuÉãÉZÉãÉåÉìÉ_ÉäÉìÉO
		 */
		public Component getTableCellRendererComponent(JTable table,
				Object value, boolean isSelected, boolean hasFocus, int row, int column)
		{
			super.getTableCellRendererComponent(table, value,
					isSelected, hasFocus, row, column);
			
			switch(column)
			{
				case 2:
					super.setHorizontalAlignment(SwingConstants.CENTER);
					break;
				default:
					super.setHorizontalAlignment(SwingConstants.LEFT);
					break;
			}

			return this;
		}
	}
        
}
