/*
 * SelectMailAddressDialog.java
 *
 * Created on 2007/02/26, 16:54
 */
package com.geobeck.sosia.pos.hair.mail;

import com.geobeck.swing.filechooser.WildcardFileFilter;
import java.io.File;
import java.util.GregorianCalendar;
import javax.swing.JFileChooser;

/**
 *
 * @author katagiri
 */
public class OutputExcelDialog extends javax.swing.JDialog {

    public final static int OUTPUT_CUSTOMER = 0;
    public final static int OUTPUT_ACCOUNT = 1;
    public boolean flgCSV = false;
    private int outputType = -1;
    private String outPutFileString = null;

    public String getOutPutFileString() {
        return outPutFileString;
    }

    public void setOutPutFileString(String outPutFileString) {
        this.outPutFileString = outPutFileString;
    }

   

    /**
     * Creates new form SelectMailAddressDialog
     */
    public OutputExcelDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("ExcelèoóÕ");
    }

    public OutputExcelDialog(java.awt.Frame parent, boolean modal, String title) {
        super(parent, modal);
        initComponents();
        setTitle(title);
    }

    public OutputExcelDialog(java.awt.Frame parent, boolean modal, String title, boolean isCSV) {
        super(parent, modal);
        initComponents();
        setTitle(title);
        flgCSV = isCSV;
    }

    public int getOutputType() {
        return this.outputType;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        btnOutputCustomerInfo = new javax.swing.JButton();
        btnOutputAccount = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        btnOutputCustomerInfo.setActionCommand("jButton1");
        btnOutputCustomerInfo.setLabel("\u9867\u5ba2\u60c5\u5831");
        btnOutputCustomerInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutputCustomerInfoActionPerformed(evt);
            }
        });

        btnOutputAccount.setLabel("\u7cbe\u7b97\u60c5\u5831");
        btnOutputAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutputAccountActionPerformed(evt);
            }
        });

        btnCancel.setLabel("\u30ad\u30e3\u30f3\u30bb\u30eb");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel1.setText("\u9867\u5ba2\u60c5\u5831\u3092\u51fa\u529b\u3057\u307e\u3059\u304b\uff1f\u7cbe\u7b97\u60c5\u5831\u3092\u51fa\u529b\u3057\u307e\u3059\u304b\uff1f");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(btnOutputCustomerInfo)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnOutputAccount)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnCancel))
                    .add(jLabel1))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnOutputCustomerInfo)
                    .add(btnOutputAccount)
                    .add(btnCancel))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOutputAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutputAccountActionPerformed
        this.outputType = OUTPUT_ACCOUNT;
         if (!flgCSV) {
            this.setVisible(false);
            
        }else {
            outPutFileString = getSaveCSVFileName("èåèåüçı_ê∏éZèÓïÒ");
            if(outPutFileString!=null) {
               this.setVisible(false); 
            }
        }
    }//GEN-LAST:event_btnOutputAccountActionPerformed
    private String getSaveCSVFileName(String fileName) {
        JFileChooser jfc = new JFileChooser();
        WildcardFileFilter filter = new WildcardFileFilter("*.csv", "CSVÉtÉ@ÉCÉã");

        String desktopPath = System.getProperty("user.home") + "\\Desktop\\";
        File file = new File(new File(desktopPath + fileName + "_" + String.format("%1$tY%1$tm%1$td%2$ts", new GregorianCalendar(), new java.util.Date()) + ".csv").getAbsolutePath());
        jfc.setSelectedFile(file);
        jfc.setFileFilter(filter);

        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            return jfc.getSelectedFile().getAbsolutePath();
        }

        return null;
        //return desktopPath + fileName + "_" + String.format("%1$tY%1$tm%1$td%2$ts", new GregorianCalendar(), new java.util.Date()) + ".csv";

    }
    private void btnOutputCustomerInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutputCustomerInfoActionPerformed
        this.outputType = OUTPUT_CUSTOMER;
        
        if (!flgCSV) {
            this.setVisible(false);
            
        }else {
            outPutFileString = getSaveCSVFileName("èåèåüçı_å⁄ãqèÓïÒ");
            if(outPutFileString!=null) {
               this.setVisible(false); 
            }
        }
        
    }//GEN-LAST:event_btnOutputCustomerInfoActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOutputAccount;
    private javax.swing.JButton btnOutputCustomerInfo;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
