/*
 * CashbackDialog.java
 *
 * Created on 2013/05/11, 14:13
 */

package com.geobeck.sosia.pos.hair.account;

import com.geobeck.sosia.pos.account.PrintReceipt;
import com.geobeck.sosia.pos.account.ReceiptData;
import com.geobeck.sosia.pos.data.account.DataCashManagement;
import com.geobeck.sosia.pos.hair.pointcard.PointCalculateBean;
import com.geobeck.sosia.pos.hair.pointcard.PointCalculateData;
import com.geobeck.sosia.pos.hair.pointcard.PointData;
import com.geobeck.sosia.pos.master.account.MstCashClass;
import com.geobeck.sosia.pos.master.company.MstShop;
import com.geobeck.sosia.pos.master.customer.MstCustomer;
import com.geobeck.sosia.pos.system.SystemInfo;
import com.geobeck.sql.ConnectionWrapper;
import javax.swing.text.*;
import java.util.*;

import com.geobeck.swing.*;
import com.geobeck.util.*;
import java.sql.SQLException;
import java.util.logging.Level;
import javax.swing.JOptionPane;

/**
 * @author geobeck
 */
public class CashbackDialog extends javax.swing.JDialog
{
        private PointCalculateBean point = null;
	private Integer shopID = null;
        private Integer customerID = null;
	private	String customerName = "";
        private Long nowPoint = 0l;
        private Long usableCount = 0l;
        private Long zanPoint = 0l;
        
	/**
	 * コンストラクタ
	 * @param parent 
	 * @param modal 
	 */
	public CashbackDialog(java.awt.Dialog parent, boolean modal)
	{
            super(parent, modal);
            init();
	}
        
        // 共通初期化処理
        private void init() {
            initComponents();
            addMouseCursorChange();
            this.setListener();
            SwingUtil.moveCenter(this);
            useCountText.requestFocusInWindow();
        }
        
	public void setShopID(Integer shopID)
	{
            this.shopID = shopID;
            PointCalculateData data = new PointCalculateData();
            this.point = data.getPointCalculateData(this.shopID);
	}
        public void setCustomerID(Integer customerID) {
            this.customerID = customerID;
        }
        public void setCustomerName(String customerName) {
            this.customerName = customerName;
            this.customerNameLabel.setText(this.customerName);
        }
        public void setNowPoint(Long nowPoint) {

            // 現在ポイント
            this.nowPoint = nowPoint;
            this.nowPointLabel.setText(this.nowPoint.toString());

            // 使用可能数
            // when Cash back point is 0 
            if(this.point.getCashbackPoint() == 0) {
                this.usableCount = 0l;  
            } else {
                this.usableCount = this.nowPoint / this.point.getCashbackPoint();
            }
            this.usableCountLabel.setText(this.usableCount.toString());

            // 残りポイント
            calcZanPoint();
        }

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backPanel = new com.geobeck.swing.ImagePanel();
        JLabel1 = new javax.swing.JLabel();
        registButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        customerNameLabel = new javax.swing.JLabel();
        JLabel2 = new javax.swing.JLabel();
        JLabel3 = new javax.swing.JLabel();
        JLabel4 = new javax.swing.JLabel();
        JLabel5 = new javax.swing.JLabel();
        cusNameLabel6 = new javax.swing.JLabel();
        zanPointLabel = new com.geobeck.swing.JFormattedTextFieldEx();
        cusNameLabel7 = new javax.swing.JLabel();
        usableCountLabel = new com.geobeck.swing.JFormattedTextFieldEx();
        nowPointLabel = new com.geobeck.swing.JFormattedTextFieldEx();
        cusNameLabel9 = new javax.swing.JLabel();
        cusNameLabel8 = new javax.swing.JLabel();
        useCountText = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)useCountText.getDocument()).setDocumentFilter(
            new CustomFilter(6, CustomFilter.NUMBER));

        setTitle("キャッシュバック処理");
        setName("searchCustomerFrame"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        backPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        backPanel.setImage(SystemInfo.getImageIcon("/contents_background.jpg"));
        backPanel.setRepeat(true);

        JLabel1.setText("顧客名");

        registButton.setIcon(SystemInfo.getImageIcon("/button/common/regist_off.jpg"));
        registButton.setBorderPainted(false);
        registButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/regist_on.jpg"));
        registButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registButtonActionPerformed(evt);
            }
        });

        backButton.setIcon(SystemInfo.getImageIcon("/button/common/close_off.jpg"));
        backButton.setBorderPainted(false);
        backButton.setFocusable(false);
        backButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/close_on.jpg"));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backPrevious(evt);
            }
        });

        customerNameLabel.setText("あああああああ");

        JLabel2.setText("現在ポイント");

        JLabel3.setText("使用可能数");

        JLabel4.setText("使用回数");

        JLabel5.setText("残りポイント");

        cusNameLabel6.setText("回");

        zanPointLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        zanPointLabel.setEditable(false);
        zanPointLabel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        cusNameLabel7.setText("ポイント");

        usableCountLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        usableCountLabel.setEditable(false);
        usableCountLabel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        nowPointLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        nowPointLabel.setEditable(false);
        nowPointLabel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        cusNameLabel9.setText("回");

        cusNameLabel8.setText("ポイント");

        useCountText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        useCountText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        useCountText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                useCountTextFocusLost(evt);
            }
        });

        org.jdesktop.layout.GroupLayout backPanelLayout = new org.jdesktop.layout.GroupLayout(backPanel);
        backPanel.setLayout(backPanelLayout);
        backPanelLayout.setHorizontalGroup(
            backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backPanelLayout.createSequentialGroup()
                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(backPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(JLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(JLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(backPanelLayout.createSequentialGroup()
                                .add(nowPointLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(cusNameLabel8))
                            .add(customerNameLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(backPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(backPanelLayout.createSequentialGroup()
                                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, JLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, JLabel3))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(useCountText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(usableCountLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(cusNameLabel9)
                                    .add(cusNameLabel6)))
                            .add(backPanelLayout.createSequentialGroup()
                                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(registButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(backPanelLayout.createSequentialGroup()
                                        .add(JLabel5)
                                        .add(12, 12, 12)
                                        .add(zanPointLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(cusNameLabel7)))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, backPanelLayout.createSequentialGroup()
                .addContainerGap(136, Short.MAX_VALUE)
                .add(backButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        backPanelLayout.setVerticalGroup(
            backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(backButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(JLabel1)
                    .add(customerNameLabel))
                .add(18, 18, 18)
                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(cusNameLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                    .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(JLabel2)
                        .add(nowPointLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(JLabel3)
                    .add(usableCountLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cusNameLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(JLabel4)
                    .add(cusNameLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(useCountText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(backPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(JLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(zanPointLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cusNameLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(registButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(backPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    }//GEN-LAST:event_formWindowOpened

    private void backPrevious(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backPrevious
        this.setVisible(false);
}//GEN-LAST:event_backPrevious

    private void registButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registButtonActionPerformed
        registButton.setCursor(null);
        this.regist();
}//GEN-LAST:event_registButtonActionPerformed

    private void useCountTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_useCountTextFocusLost
        calcZanPoint();
}//GEN-LAST:event_useCountTextFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabel1;
    private javax.swing.JLabel JLabel2;
    private javax.swing.JLabel JLabel3;
    private javax.swing.JLabel JLabel4;
    private javax.swing.JLabel JLabel5;
    private javax.swing.JButton backButton;
    private com.geobeck.swing.ImagePanel backPanel;
    private javax.swing.JLabel cusNameLabel6;
    private javax.swing.JLabel cusNameLabel7;
    private javax.swing.JLabel cusNameLabel8;
    private javax.swing.JLabel cusNameLabel9;
    private javax.swing.JLabel customerNameLabel;
    private com.geobeck.swing.JFormattedTextFieldEx nowPointLabel;
    private javax.swing.JButton registButton;
    private com.geobeck.swing.JFormattedTextFieldEx usableCountLabel;
    private com.geobeck.swing.JFormattedTextFieldEx useCountText;
    private com.geobeck.swing.JFormattedTextFieldEx zanPointLabel;
    // End of variables declaration//GEN-END:variables
	
    private MstCustomer selectedCustomer = null;

    private ArrayList<MstCustomer> customers = new ArrayList<MstCustomer>();

    private	MoveNextField mnf = new MoveNextField();


    /**
     * ボタンにマウスカーソルが乗ったときにカーソルを変更するイベントを追加する。
     */
    private void addMouseCursorChange()
    {
        SystemInfo.addMouseCursorChange(registButton);
        SystemInfo.addMouseCursorChange(backButton);
    }
	
    /**
     * コンポーネントの各リスナーをセットする。
     */
    private void setListener()
    {
        useCountText.addKeyListener(SystemInfo.getMoveNextField());
    }

    private void calcZanPoint() {

        Integer useCount = 0;
        
        try {
            useCount = Integer.valueOf(useCountText.getText());
        } catch (Exception e) {
        }

        this.zanPoint = this.nowPoint - (point.getCashbackPoint() * useCount);
        zanPointLabel.setText(this.zanPoint.toString());
    }

    private void regist() {

        this.calcZanPoint();

        if (this.zanPoint < 0 || this.zanPoint.equals(this.nowPoint)) {
            MessageDialog.showMessageDialog(
                this,
                "使用回数が正しくありません。",
                this.getTitle(),
                JOptionPane.ERROR_MESSAGE);
            useCountText.requestFocusInWindow();
            return;
        }

        // 使用回数の取得
        Long useCount = Long.valueOf(useCountText.getText());
        // 使用ポイントの算出
        Long usePoint = useCount * point.getCashbackPoint();
        // 使用ポイントの登録
        PointData data = new PointData(this.shopID, this.customerID, null, null, usePoint, 0l);
        if( !data.insertPointCalculation() ) {
            MessageDialog.showMessageDialog(
                this,
                "使用ポイントの登録に失敗しました。",
                this.getTitle(),
                JOptionPane.ERROR_MESSAGE);
            return;
        }

        MstShop shop = new MstShop();
        shop.setShopID(this.shopID);
        
        DataCashManagement dcm = new DataCashManagement();
        dcm.setShop(shop);
        dcm.setManagementDate(new GregorianCalendar());
        dcm.setIn(false);
        dcm.setValue(Long.valueOf(useCount * point.getCashbackRate()).intValue());
        dcm.setStaff(null);
        dcm.setEvidenceNum("-");
        dcm.setUseFor("[" + this.customerName + "]様 消化Pt（" + usePoint + "pt）");
        dcm.setCashClass(new MstCashClass(16));
        dcm.setCashMenu(null);

        try {
            ConnectionWrapper con = SystemInfo.getConnection();
            try {
                con.begin();
                if (dcm.regist(con)) {
                    con.commit();
                } else {
                    con.rollback();
                }
            } catch (SQLException e) {
                con.rollback();
                SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            }
        } catch (SQLException e) {
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
        }

        // レシート印刷
        PrintReceipt pr = new PrintReceipt();
        if (!pr.canPrint()) return;
        pr.add(new ReceiptData());
        pr.setSumtotal(useCount * point.getCashbackRate());
        pr.setReceiptType(PrintReceipt.ReceiptType.CASHBACK);
        pr.print();

        this.setVisible(false);
    }

}
