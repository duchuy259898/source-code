/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.geobeck.sosia.pos.hair.report;

import com.geobeck.sosia.pos.hair.report.beans.ItemDeliveryHistoryBean;
import com.geobeck.sosia.pos.hair.report.beans.ItemDeliveryHistoryListBean;
import com.geobeck.sosia.pos.hair.report.util.JExcelApi;
import com.geobeck.sosia.pos.master.company.MstGroup;
import com.geobeck.sosia.pos.master.company.MstShop;
import com.geobeck.sosia.pos.system.SystemInfo;
import com.geobeck.sosia.pos.util.MessageUtil;
import com.geobeck.swing.MessageDialog;
import java.awt.Cursor;
import javax.swing.JOptionPane;

/**
 *
 * @author tmtrong
 */
public class ItemDeliveryHistoryPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx {

    /**
     * Creates new form ItemDeliveryHistoryPanel
     */
    public ItemDeliveryHistoryPanel() {
        initComponents();
        this.setSize(833, 691);
        this.setPath("商品管理");
        this.setTitle("商品受渡一覧");
        this.init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbTargetPeriodStartDate = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        this.cmbTargetPeriodStartDate.setDate(new java.util.Date());
        cmbTargetPeriodEndDate = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        this.cmbTargetPeriodEndDate.setDate(new java.util.Date());
        jLabel3 = new javax.swing.JLabel();
        cmbStore = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        btnOutput = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1115, 803));

        jLabel1.setText("対象");

        jLabel2.setText("対象期間");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("~");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        cmbStore.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStoreActionPerformed(evt);
            }
        });

        btnOutput.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutput.setBorderPainted(false);
        btnOutput.setFocusCycleRoot(true);
        btnOutput.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbTargetPeriodStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6)
                        .addComponent(cmbTargetPeriodEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbStore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(57, 57, 57)
                .addComponent(btnOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(700, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(cmbStore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(cmbTargetPeriodStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbTargetPeriodEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(740, 740, 740))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutputActionPerformed
        if (cmbTargetPeriodEndDate.getDate().before(cmbTargetPeriodStartDate.getDate())) {
            return;
        }
        if (!SystemInfo.checkAuthorityPassword(200)) return;
        btnOutput.setCursor(null);
        try {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            export();
        } finally {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_btnOutputActionPerformed

    private void cmbStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStoreActionPerformed
        Boolean flg = true;
        if (cmbStore.getSelectedItem() instanceof MstGroup) {
            //グループ
            MstGroup mg = (MstGroup) cmbStore.getSelectedItem();
            if(mg.getShops().size()==0) {
                flg = false;
            }
        }
        btnOutput.setEnabled(flg);
        
    }//GEN-LAST:event_cmbStoreActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOutput;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel cmbStore;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEndDate;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStartDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

    private ItemDeliveryHistoryListBean itemDeliveryHistoryList = new ItemDeliveryHistoryListBean();
    
    private void init(){
        this.setKeyListener();
         SystemInfo.initGroupShopComponents(cmbStore, 3);
         SystemInfo.addMouseCursorChange(btnOutput);
    }
    
    private void setKeyListener()
    {
        cmbTargetPeriodEndDate.addKeyListener(SystemInfo.getMoveNextField());
        cmbTargetPeriodEndDate.addFocusListener(SystemInfo.getSelectText());
        cmbTargetPeriodStartDate.addKeyListener(SystemInfo.getMoveNextField());
        cmbTargetPeriodStartDate.addFocusListener(SystemInfo.getSelectText());
    }
    
    private void export(){
        String shopName = "";
        if (cmbStore.getSelectedItem() instanceof MstGroup) {
            //グループ
            MstGroup mg = (MstGroup)cmbStore.getSelectedItem();
            shopName = mg.getGroupName();
        } else if(cmbStore.getSelectedItem() instanceof MstShop) {
            //店舗
            MstShop ms = (MstShop)cmbStore.getSelectedItem();
            shopName = ms.getShopName();
        }
        
        if (cmbStore.getSelectedItem() instanceof MstGroup) {
            //グループ
            MstGroup mg = (MstGroup) cmbStore.getSelectedItem();
            itemDeliveryHistoryList.setShopID(0);
            itemDeliveryHistoryList.setShopIDList(mg.getShopIDListAll());
        } else if (cmbStore.getSelectedItem() instanceof MstShop) {
            //店舗
            MstShop ms = (MstShop) cmbStore.getSelectedItem();
            itemDeliveryHistoryList.setShopID(ms.getShopID());
        }
        
        if (this.cmbTargetPeriodStartDate.getDateStr() != null) {
                itemDeliveryHistoryList.setAddDateFrom(this.cmbTargetPeriodStartDate.getDateStrWithFirstTime());
            }
            if (this.cmbTargetPeriodEndDate.getDateStr() != null) {
                itemDeliveryHistoryList.setAddDateTo(this.cmbTargetPeriodEndDate.getDateStrWithLastTime());
            }
        
        
        if(itemDeliveryHistoryList.ItemDeliveryHistoryExport() && itemDeliveryHistoryList.size()>0){
            
            JExcelApi jx = new JExcelApi("商品受渡一覧");
            jx.setTemplateFile("/reports/商品受渡一覧.xls");

            //対象期間
            jx.setValue(2,3,String.format( "%1$tY/%1$tm/%1$td", cmbTargetPeriodStartDate.getDate()) + " 〜 " + String.format( "%1$tY/%1$tm/%1$td", cmbTargetPeriodEndDate.getDate()));
            //店舗
            jx.setValue(2,4,shopName);

            int row = 7;
            for(ItemDeliveryHistoryBean item : itemDeliveryHistoryList){
                jx.insertRow(row,1);
                jx.setValue(1, row, item.getOperation_date());
                jx.setValue(2, row, item.getCustomer_no());
                jx.setValue(3, row, item.getCustomer_name());
                jx.setValue(4, row, item.getProduct_name());
                jx.setValue(5, row, item.getProduct_num());
                jx.setValue(6, row, item.getStaffname());
                row++;
            }
            jx.removeRow(row);
            jx.openWorkbook();
        }else {
             MessageDialog.showMessageDialog(this,
                                MessageUtil.getMessage(1112),
                                this.getTitle(),
                                JOptionPane.ERROR_MESSAGE);
        }
    }
}

