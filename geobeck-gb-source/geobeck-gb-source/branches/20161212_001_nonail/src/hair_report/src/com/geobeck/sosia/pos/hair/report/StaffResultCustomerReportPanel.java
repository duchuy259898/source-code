/*
 * StaffResultCustomerReportPanel.java
 *
 * Created on 2008/06/17, 23:00
 */

package com.geobeck.sosia.pos.hair.report;

import com.geobeck.sosia.pos.basicinfo.SimpleMaster;
import com.geobeck.sosia.pos.system.SystemInfo;
import java.awt.*;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.*;
import javax.swing.*;
import com.geobeck.swing.*;
import com.geobeck.sosia.pos.master.company.*;
import com.geobeck.sosia.pos.report.bean.ReportParameterBean;
import com.geobeck.sosia.pos.hair.report.logic.ReportLogic;
import com.geobeck.sosia.pos.master.MstData;
import com.geobeck.sosia.pos.swing.SelectTableCellRenderer;
import com.geobeck.sosia.pos.util.*;
import com.geobeck.sql.ConnectionWrapper;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  saito
 */
public class StaffResultCustomerReportPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx
{
    //IVS_LVTu start add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
    private MstShopCategorys		mscg		=	new MstShopCategorys();
    private MstShopCategorys mrsRef = new MstShopCategorys();
    private MstShopCategorys mrsUse = new MstShopCategorys();
    //IVS_LVTu start end 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
	
	/** Creates new form StaffResultCustomerReportPanel */
	public StaffResultCustomerReportPanel()
	{
		initComponents();
		addMouseCursorChange();
                //IVS_LVTu start add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
		//this.setSize(450, 603);
                this.setSize(700, 700);
                //IVS_LVTu start end 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
		this.setPath("í†ï[èoóÕ");
		this.setTitle("íSìñï å⁄ãqê¨ê—");
		this.setKeyListener();
                
                target.addItem(SystemInfo.getGroup());
                SystemInfo.getGroup().addGroupDataToJComboBox(target, 3);
                if (!SystemInfo.isGroup()) {
                    target.setSelectedItem(SystemInfo.getCurrentShop());
                }
                
                //ëŒè€ä˙ä‘ÇÃê›íËÅyóàìXâÒêîï îÑè„Åz
		this.cmbTargetPeriodStartDate.setDate(new Date());
		this.cmbTargetPeriodEndDate.setDate(new Date());
                //ëŒè€ä˙ä‘ÇÃê›íËÅyê´ï ï îÑè„Åz
		this.cmbTargetPeriodStartDate1.setDate(new Date());
		this.cmbTargetPeriodEndDate1.setDate(new Date());
                //ëŒè€ä˙ä‘ÇÃê›íËÅyêEã∆ï ç\ê¨î‰Åz
		this.cmbTargetPeriodStartDate2.setDate(new Date());
		this.cmbTargetPeriodEndDate2.setDate(new Date());
                //ëŒè€ä˙ä‘ÇÃê›íËÅyîNóÓï ç\ê¨î‰Åz
		this.cmbTargetPeriodStartDate3.setDate(new Date());
		this.cmbTargetPeriodEndDate3.setDate(new Date());
                //ëŒè€ä˙ä‘ÇÃê›íËÅyóàìXé¸ä˙ï ç\ê¨î‰Åz
		this.cmbTargetPeriodStartDate4.setDate(new Date());
		this.cmbTargetPeriodEndDate4.setDate(new Date());

		//ê≈î≤ÅAê≈çûÇÃèâä˙ê›íË
		if(SystemInfo.getAccountSetting().getReportPriceType() == 0)
		{
			rdoTaxBlank.setSelected(false);
			rdoTaxUnit.setSelected(true);
		}
		else
		{
			rdoTaxBlank.setSelected(true);
			rdoTaxUnit.setSelected(false);
		}
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        taxGroup = new javax.swing.ButtonGroup();
        pnlMain = new javax.swing.JPanel();
        lblTax = new javax.swing.JLabel();
        rdoTaxBlank = new javax.swing.JRadioButton();
        rdoTaxUnit = new javax.swing.JRadioButton();
        targetLabel = new javax.swing.JLabel();
        target = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        jPanel1 = new javax.swing.JPanel();
        lblTargetPeriod = new javax.swing.JLabel();
        cmbTargetPeriodStartDate = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        jLabel = new javax.swing.JLabel();
        cmbTargetPeriodEndDate = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        btnOutput = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        customerType = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        jPanel2 = new javax.swing.JPanel();
        lblTargetPeriod1 = new javax.swing.JLabel();
        cmbTargetPeriodStartDate1 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        jLabel2 = new javax.swing.JLabel();
        cmbTargetPeriodEndDate1 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        btnOutput1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblTargetPeriod2 = new javax.swing.JLabel();
        cmbTargetPeriodStartDate2 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        jLabel3 = new javax.swing.JLabel();
        cmbTargetPeriodEndDate2 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        btnOutput2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lblTargetPeriod3 = new javax.swing.JLabel();
        cmbTargetPeriodStartDate3 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        jLabel4 = new javax.swing.JLabel();
        cmbTargetPeriodEndDate3 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        btnOutput3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        lblTargetPeriod4 = new javax.swing.JLabel();
        cmbTargetPeriodStartDate4 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        jLabel5 = new javax.swing.JLabel();
        cmbTargetPeriodEndDate4 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        btnOutput4 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        referenceCategoryLeftScrollPane = new javax.swing.JScrollPane();
        tblReferenceCategoryName = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        selectButton = new javax.swing.JButton();
        selectAllButton = new javax.swing.JButton();
        releaseButton = new javax.swing.JButton();
        releaseAllButton = new javax.swing.JButton();
        selectCategoryRightScrollPane = new javax.swing.JScrollPane();
        tblSelectCategoryName = new javax.swing.JTable();
        lblCategory = new javax.swing.JLabel();

        setFocusCycleRoot(true);

        pnlMain.setFocusCycleRoot(true);
        pnlMain.setOpaque(false);

        lblTax.setText("ê≈ãÊï™");
        lblTax.setFocusCycleRoot(true);

        taxGroup.add(rdoTaxBlank);
        rdoTaxBlank.setText("ê≈î≤");
        rdoTaxBlank.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoTaxBlank.setFocusCycleRoot(true);
        rdoTaxBlank.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoTaxBlank.setOpaque(false);

        taxGroup.add(rdoTaxUnit);
        rdoTaxUnit.setSelected(true);
        rdoTaxUnit.setText("ê≈çû");
        rdoTaxUnit.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoTaxUnit.setFocusCycleRoot(true);
        rdoTaxUnit.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoTaxUnit.setOpaque(false);

        targetLabel.setText("ëŒè€");
        targetLabel.setFocusCycleRoot(true);

        target.setFocusCycleRoot(true);
        target.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlMainLayout = new org.jdesktop.layout.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlMainLayout.createSequentialGroup()
                .add(pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblTax)
                    .add(targetLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(21, 21, 21)
                .add(pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(target, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 216, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pnlMainLayout.createSequentialGroup()
                        .add(rdoTaxUnit)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(rdoTaxBlank)))
                .add(0, 0, Short.MAX_VALUE))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(targetLabel)
                    .add(target, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblTax)
                    .add(rdoTaxUnit)
                    .add(rdoTaxBlank))
                .add(37, 37, 37))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "óàìXâÒêîï îÑè„", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MS UI Gothic", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel1.setOpaque(false);

        lblTargetPeriod.setText("ëŒè€ä˙ä‘");
        lblTargetPeriod.setFocusCycleRoot(true);

        cmbTargetPeriodStartDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodStartDate.setFocusCycleRoot(true);
        cmbTargetPeriodStartDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodStartDateFocusGained(evt);
            }
        });

        jLabel.setText("Å`");
        jLabel.setFocusCycleRoot(true);

        cmbTargetPeriodEndDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodEndDate.setFocusCycleRoot(true);
        cmbTargetPeriodEndDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodEndDateFocusGained(evt);
            }
        });

        btnOutput.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutput.setBorderPainted(false);
        btnOutput.setContentAreaFilled(false);
        btnOutput.setFocusCycleRoot(true);
        btnOutput.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutputActionPerformed(evt);
            }
        });

        jLabel1.setText("å⁄ãqï™óﬁ");
        jLabel1.setFocusCycleRoot(true);

        customerType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ç∑Ç◊Çƒ", "éwñº", "ÉtÉäÅ[" }));
        customerType.setFocusCycleRoot(true);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(lblTargetPeriod, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cmbTargetPeriodStartDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(customerType, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmbTargetPeriodEndDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 38, Short.MAX_VALUE)
                .add(btnOutput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnOutput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbTargetPeriodEndDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblTargetPeriod, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cmbTargetPeriodStartDate, 0, 21, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(customerType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ê´ï ï îÑè„", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MS UI Gothic", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel2.setOpaque(false);

        lblTargetPeriod1.setText("ëŒè€ä˙ä‘");
        lblTargetPeriod1.setFocusCycleRoot(true);

        cmbTargetPeriodStartDate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodStartDate1.setFocusCycleRoot(true);
        cmbTargetPeriodStartDate1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodStartDate1FocusGained(evt);
            }
        });

        jLabel2.setText("Å`");
        jLabel2.setFocusCycleRoot(true);

        cmbTargetPeriodEndDate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodEndDate1.setFocusCycleRoot(true);
        cmbTargetPeriodEndDate1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodEndDate1FocusGained(evt);
            }
        });

        btnOutput1.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutput1.setBorderPainted(false);
        btnOutput1.setContentAreaFilled(false);
        btnOutput1.setFocusCycleRoot(true);
        btnOutput1.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutput1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(lblTargetPeriod1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmbTargetPeriodStartDate1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmbTargetPeriodEndDate1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 38, Short.MAX_VALUE)
                .add(btnOutput1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnOutput1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbTargetPeriodEndDate1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblTargetPeriod1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cmbTargetPeriodStartDate1, 0, 21, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "êEã∆ï ç\ê¨î‰", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MS UI Gothic", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel3.setOpaque(false);

        lblTargetPeriod2.setText("ëŒè€ä˙ä‘");
        lblTargetPeriod2.setFocusCycleRoot(true);

        cmbTargetPeriodStartDate2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodStartDate2.setFocusCycleRoot(true);
        cmbTargetPeriodStartDate2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodStartDate2FocusGained(evt);
            }
        });

        jLabel3.setText("Å`");
        jLabel3.setFocusCycleRoot(true);

        cmbTargetPeriodEndDate2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodEndDate2.setFocusCycleRoot(true);
        cmbTargetPeriodEndDate2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodEndDate2FocusGained(evt);
            }
        });

        btnOutput2.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutput2.setBorderPainted(false);
        btnOutput2.setContentAreaFilled(false);
        btnOutput2.setFocusCycleRoot(true);
        btnOutput2.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutput2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutput2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(lblTargetPeriod2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmbTargetPeriodStartDate2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmbTargetPeriodEndDate2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 38, Short.MAX_VALUE)
                .add(btnOutput2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnOutput2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbTargetPeriodEndDate2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblTargetPeriod2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cmbTargetPeriodStartDate2, 0, 21, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "îNóÓï ç\ê¨î‰", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MS UI Gothic", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel4.setOpaque(false);

        lblTargetPeriod3.setText("ëŒè€ä˙ä‘");
        lblTargetPeriod3.setFocusCycleRoot(true);

        cmbTargetPeriodStartDate3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodStartDate3.setFocusCycleRoot(true);
        cmbTargetPeriodStartDate3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodStartDate3FocusGained(evt);
            }
        });

        jLabel4.setText("Å`");
        jLabel4.setFocusCycleRoot(true);

        cmbTargetPeriodEndDate3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodEndDate3.setFocusCycleRoot(true);
        cmbTargetPeriodEndDate3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodEndDate3FocusGained(evt);
            }
        });

        btnOutput3.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutput3.setBorderPainted(false);
        btnOutput3.setContentAreaFilled(false);
        btnOutput3.setFocusCycleRoot(true);
        btnOutput3.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutput3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutput3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(lblTargetPeriod3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmbTargetPeriodStartDate3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmbTargetPeriodEndDate3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 38, Short.MAX_VALUE)
                .add(btnOutput3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnOutput3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbTargetPeriodEndDate3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblTargetPeriod3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cmbTargetPeriodStartDate3, 0, 21, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "óàìXé¸ä˙ï ç\ê¨î‰", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MS UI Gothic", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel5.setOpaque(false);

        lblTargetPeriod4.setText("ëŒè€ä˙ä‘");
        lblTargetPeriod4.setFocusCycleRoot(true);

        cmbTargetPeriodStartDate4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodStartDate4.setFocusCycleRoot(true);
        cmbTargetPeriodStartDate4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodStartDate4FocusGained(evt);
            }
        });

        jLabel5.setText("Å`");
        jLabel5.setFocusCycleRoot(true);

        cmbTargetPeriodEndDate4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodEndDate4.setFocusCycleRoot(true);
        cmbTargetPeriodEndDate4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodEndDate4FocusGained(evt);
            }
        });

        btnOutput4.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutput4.setBorderPainted(false);
        btnOutput4.setContentAreaFilled(false);
        btnOutput4.setFocusCycleRoot(true);
        btnOutput4.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutput4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutput4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(lblTargetPeriod4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmbTargetPeriodStartDate4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmbTargetPeriodEndDate4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 38, Short.MAX_VALUE)
                .add(btnOutput4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnOutput4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbTargetPeriodEndDate4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblTargetPeriod4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cmbTargetPeriodStartDate4, 0, 21, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setOpaque(false);

        tblReferenceCategoryName.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "ã∆ë‘ñº"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReferenceCategoryName.setSelectionForeground(new java.awt.Color(0, 0, 0));
        //nhanvt
        tblReferenceCategoryName.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(tblReferenceCategoryName, SystemInfo.getTableHeaderRenderer());
        tblReferenceCategoryName.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        SelectTableCellRenderer.setSelectTableCellRenderer(tblReferenceCategoryName);
        //nhanvt
        referenceCategoryLeftScrollPane.setViewportView(tblReferenceCategoryName);
        if (tblReferenceCategoryName.getColumnModel().getColumnCount() > 0) {
            tblReferenceCategoryName.getColumnModel().getColumn(0).setMinWidth(250);
            tblReferenceCategoryName.getColumnModel().getColumn(0).setMaxWidth(250);
        }

        jPanel9.setOpaque(false);

        selectButton.setIcon(SystemInfo.getImageIcon("/button/arrow/right_off.jpg"));
        selectButton.setBorderPainted(false);
        selectButton.setContentAreaFilled(false);
        selectButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/right_on.jpg"));
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        selectAllButton.setIcon(SystemInfo.getImageIcon("/button/arrow/right2_off.jpg"));
        selectAllButton.setBorderPainted(false);
        selectAllButton.setContentAreaFilled(false);
        selectAllButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/right2_on.jpg"));
        selectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllButtonActionPerformed(evt);
            }
        });

        releaseButton.setIcon(SystemInfo.getImageIcon("/button/arrow/left_off.jpg"));
        releaseButton.setBorderPainted(false);
        releaseButton.setContentAreaFilled(false);
        releaseButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/left_on.jpg"));
        releaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releaseButtonActionPerformed(evt);
            }
        });

        releaseAllButton.setIcon(SystemInfo.getImageIcon("/button/arrow/left2_off.jpg"));
        releaseAllButton.setBorderPainted(false);
        releaseAllButton.setContentAreaFilled(false);
        releaseAllButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/left2_on.jpg"));
        releaseAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releaseAllButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel9Layout = new org.jdesktop.layout.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel9Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(selectButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(releaseButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(releaseAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel9Layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(selectAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .add(selectAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(selectButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 39, Short.MAX_VALUE)
                .add(releaseButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(releaseAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        tblSelectCategoryName.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "ã∆ë‘ñº"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSelectCategoryName.setSelectionForeground(new java.awt.Color(0, 0, 0));
        //nhanvt
        tblSelectCategoryName.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(tblSelectCategoryName, SystemInfo.getTableHeaderRenderer());
        tblSelectCategoryName.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        SelectTableCellRenderer.setSelectTableCellRenderer(tblSelectCategoryName);
        //TableColumnModel model = tblSelectCategoryName.getColumnModel();
        //model.getColumn(2).setCellEditor(new IntegerCellEditor(new JTextField()));
        //model.getColumn(3).setCellEditor(new IntegerCellEditor(new JTextField()));
        //model.getColumn(4).setCellEditor(new IntegerCellEditor(new JTextField()));
        //model.getColumn(5).setCellEditor(new IntegerCellEditor(new JTextField()));
        //nhanvt
        selectCategoryRightScrollPane.setViewportView(tblSelectCategoryName);
        if (tblSelectCategoryName.getColumnModel().getColumnCount() > 0) {
            tblSelectCategoryName.getColumnModel().getColumn(0).setMinWidth(250);
            tblSelectCategoryName.getColumnModel().getColumn(0).setMaxWidth(250);
        }

        lblCategory.setText("èWåvã∆ë‘");

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(lblCategory)
                .add(18, 18, 18)
                .add(referenceCategoryLeftScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 251, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(selectCategoryRightScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 251, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblCategory)
                    .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jPanel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(selectCategoryRightScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .add(referenceCategoryLeftScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlMain, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(pnlMain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(5, 5, 5)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOutput4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutput4ActionPerformed

        if (!SystemInfo.checkAuthorityPassword(254)) return;

        ReportLogic logic = new ReportLogic();
        ReportParameterBean paramBean = new ReportParameterBean();
        paramBean.setMainReportType(ReportParameterBean.MAIN_REPORT_STAFF);
        
        //ÉOÉãÅ[Év
        if(target.getSelectedItem() instanceof MstGroup) {
            MstGroup	mg	=	(MstGroup)target.getSelectedItem();
            paramBean.setTargetName(mg.getGroupName());
            paramBean.setShopIDList(mg.getShopIDListAll());
        }
        //ìXï‹
        else if(target.getSelectedItem() instanceof MstShop) {
            MstShop		ms	=	(MstShop)target.getSelectedItem();
            paramBean.setTargetName(ms.getShopName());
            paramBean.setShopIDList(ms.getShopID().toString());
        }
        
        //ëŒè€Ç∆Ç»ÇÈìXï‹Ç™ë∂ç›ÇµÇ»Ç¢èÍçá
        if(paramBean.getShopIDList().equals("")) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //ê≈ãÊï™
        if(this.rdoTaxBlank.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_BLANK);	// ê≈ãÊï™(ê≈î≤Ç´)
        } else if(this.rdoTaxUnit.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_UNIT);	// ê≈ãÊï™(ê≈çûÇ›)
        }
        
        //äÑà¯ÇÃãÊï™ÇÃê›íË
        Integer discountType = SystemInfo.getAccountSetting().getDiscountType();
        paramBean.setDiscountType(discountType);
        
        //ëŒè€ä˙ä‘
        paramBean.setTargetStartDate(this.cmbTargetPeriodStartDate4.getDateStr());
        paramBean.setTargetEndDate(this.cmbTargetPeriodEndDate4.getDateStr());
        paramBean.setTargetStartDateObj(this.cmbTargetPeriodStartDate4.getDate());
        paramBean.setTargetEndDateObj(this.cmbTargetPeriodEndDate4.getDate());
        
        Calendar start = Calendar.getInstance();
        Calendar end = Calendar.getInstance();
        start.setTime(this.cmbTargetPeriodStartDate4.getDate());
        end.setTime(this.cmbTargetPeriodEndDate4.getDate());
        
        if(start.compareTo(end) != 0) {
            //ëŒè€ä˙ä‘Ç™äJénì˙ÅÑèIóπì˙Ç»ÇÁÉGÉâÅ[
            if(start.after(end)) {
                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, "ëŒè€ä˙ä‘"),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        //IVS_LVTu start add 2014/12/01 Mashu_íSìñï å⁄ãqê¨ê—
        //ã∆ë‘IDÇÃàÍóó
        String lstShopCategoryId = "";
        String lstNameShopCategory = "";
        if(mrsUse.size() >0){
            int count = 0;
            for(MstShopCategory category : mrsUse){
                if(category.getShopCategoryId() != null){
                    lstShopCategoryId += category.getShopCategoryId();
                    lstNameShopCategory += category.getShopClassName();
                    count++;
                    if(count < mrsUse.size()){
                        lstShopCategoryId += ",";
                        lstNameShopCategory += "ÅA";
                    }
                }
            }
        }
        paramBean.setListCategoryId(lstShopCategoryId);
        paramBean.setListCategoryName(lstNameShopCategory);
        //IVS_LVTu start end 2014/12/01 Mashu_íSìñï å⁄ãqê¨ê—
        //èoóÕèàóù
        boolean logicResult = true;
        try {
            //óàìXé¸ä˙ï ç\ê¨î‰
            logicResult = logic.outStaffReportCustomerTurnoverSales(paramBean);
        } catch (Exception e) {
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(1099),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // ÉGÉâÅ[éû
        if(!logicResult) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnOutput4ActionPerformed

    private void cmbTargetPeriodEndDate4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodEndDate4FocusGained
        cmbTargetPeriodEndDate4.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodEndDate4FocusGained

    private void cmbTargetPeriodStartDate4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodStartDate4FocusGained
        cmbTargetPeriodStartDate4.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodStartDate4FocusGained

    private void btnOutput3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutput3ActionPerformed

        if (!SystemInfo.checkAuthorityPassword(253)) return;
        
        ReportLogic logic = new ReportLogic();
        ReportParameterBean paramBean = new ReportParameterBean();
        paramBean.setMainReportType(ReportParameterBean.MAIN_REPORT_STAFF);
        
        //ÉOÉãÅ[Év
        if(target.getSelectedItem() instanceof MstGroup) {
            MstGroup	mg	=	(MstGroup)target.getSelectedItem();
            paramBean.setTargetName(mg.getGroupName());
            paramBean.setShopIDList(mg.getShopIDListAll());
        }
        //ìXï‹
        else if(target.getSelectedItem() instanceof MstShop) {
            MstShop		ms	=	(MstShop)target.getSelectedItem();
            paramBean.setTargetName(ms.getShopName());
            paramBean.setShopIDList(ms.getShopID().toString());
        }
        
        //ëŒè€Ç∆Ç»ÇÈìXï‹Ç™ë∂ç›ÇµÇ»Ç¢èÍçá
        if(paramBean.getShopIDList().equals("")) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //ê≈ãÊï™
        if(this.rdoTaxBlank.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_BLANK);	// ê≈ãÊï™(ê≈î≤Ç´)
        } else if(this.rdoTaxUnit.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_UNIT);	// ê≈ãÊï™(ê≈çûÇ›)
        }
        
        //äÑà¯ÇÃãÊï™ÇÃê›íË
        Integer discountType = SystemInfo.getAccountSetting().getDiscountType();
        paramBean.setDiscountType(discountType);
        
        //ëŒè€ä˙ä‘
        paramBean.setTargetStartDate(this.cmbTargetPeriodStartDate3.getDateStr());
        paramBean.setTargetEndDate(this.cmbTargetPeriodEndDate3.getDateStr());
        paramBean.setTargetStartDateObj(this.cmbTargetPeriodStartDate3.getDate());
        paramBean.setTargetEndDateObj(this.cmbTargetPeriodEndDate3.getDate());
        
        Calendar start = Calendar.getInstance();
        Calendar end = Calendar.getInstance();
        start.setTime(this.cmbTargetPeriodStartDate3.getDate());
        end.setTime(this.cmbTargetPeriodEndDate3.getDate());
        
        if(start.compareTo(end) != 0) {
            //ëŒè€ä˙ä‘Ç™äJénì˙ÅÑèIóπì˙Ç»ÇÁÉGÉâÅ[
            if(start.after(end)) {
                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, "ëŒè€ä˙ä‘"),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        //IVS_LVTu start add 2014/12/01 Mashu_íSìñï å⁄ãqê¨ê—
        //ã∆ë‘IDÇÃàÍóó
        String lstShopCategoryId = "";
        String lstNameShopCategory = "";
        if(mrsUse.size() >0){
            int count = 0;
            for(MstShopCategory category : mrsUse){
                if(category.getShopCategoryId() != null){
                    lstShopCategoryId += category.getShopCategoryId();
                    lstNameShopCategory += category.getShopClassName();
                    count++;
                    if(count < mrsUse.size()){
                        lstShopCategoryId += ",";
                        lstNameShopCategory += "ÅA";
                    }
                }
            }
        }
        paramBean.setListCategoryId(lstShopCategoryId);
        paramBean.setListCategoryName(lstNameShopCategory);
        //IVS_LVTu start end 2014/12/01 Mashu_íSìñï å⁄ãqê¨ê—
        //èoóÕèàóù
        boolean logicResult = true;
        try {
            //îNóÓï ç\ê¨î‰
            logicResult = logic.outStaffReportCustomerAgeSales(paramBean);
        } catch (Exception e) {
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(1099),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // ÉGÉâÅ[éû
        if(!logicResult) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnOutput3ActionPerformed

    private void cmbTargetPeriodEndDate3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodEndDate3FocusGained
        cmbTargetPeriodEndDate3.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodEndDate3FocusGained

    private void cmbTargetPeriodStartDate3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodStartDate3FocusGained
        cmbTargetPeriodStartDate3.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodStartDate3FocusGained

    private void btnOutput2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutput2ActionPerformed

        if (!SystemInfo.checkAuthorityPassword(252)) return;

        ReportLogic logic = new ReportLogic();
        ReportParameterBean paramBean = new ReportParameterBean();
        paramBean.setMainReportType(ReportParameterBean.MAIN_REPORT_STAFF);
        
        //ÉOÉãÅ[Év
        if(target.getSelectedItem() instanceof MstGroup) {
            MstGroup	mg	=	(MstGroup)target.getSelectedItem();
            paramBean.setTargetName(mg.getGroupName());
            paramBean.setShopIDList(mg.getShopIDListAll());
        }
        //ìXï‹
        else if(target.getSelectedItem() instanceof MstShop) {
            MstShop		ms	=	(MstShop)target.getSelectedItem();
            paramBean.setTargetName(ms.getShopName());
            paramBean.setShopIDList(ms.getShopID().toString());
        }
        
        //ëŒè€Ç∆Ç»ÇÈìXï‹Ç™ë∂ç›ÇµÇ»Ç¢èÍçá
        if(paramBean.getShopIDList().equals("")) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //ê≈ãÊï™
        if(this.rdoTaxBlank.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_BLANK);	// ê≈ãÊï™(ê≈î≤Ç´)
        } else if(this.rdoTaxUnit.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_UNIT);	// ê≈ãÊï™(ê≈çûÇ›)
        }
        
        //äÑà¯ÇÃãÊï™ÇÃê›íË
        Integer discountType = SystemInfo.getAccountSetting().getDiscountType();
        paramBean.setDiscountType(discountType);
        
        //ëŒè€ä˙ä‘
        paramBean.setTargetStartDate(this.cmbTargetPeriodStartDate2.getDateStr());
        paramBean.setTargetEndDate(this.cmbTargetPeriodEndDate2.getDateStr());
        paramBean.setTargetStartDateObj(this.cmbTargetPeriodStartDate2.getDate());
        paramBean.setTargetEndDateObj(this.cmbTargetPeriodEndDate2.getDate());
        
        Calendar start = Calendar.getInstance();
        Calendar end = Calendar.getInstance();
        start.setTime(this.cmbTargetPeriodStartDate2.getDate());
        end.setTime(this.cmbTargetPeriodEndDate2.getDate());
        
        if(start.compareTo(end) != 0) {
            //ëŒè€ä˙ä‘Ç™äJénì˙ÅÑèIóπì˙Ç»ÇÁÉGÉâÅ[
            if(start.after(end)) {
                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, "ëŒè€ä˙ä‘"),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        //IVS_LVTu start add 2014/12/01 Mashu_íSìñï å⁄ãqê¨ê—
        //ã∆ë‘IDÇÃàÍóó
        String lstShopCategoryId = "";
        String lstNameShopCategory = "";
        if(mrsUse.size() >0){
            int count = 0;
            for(MstShopCategory category : mrsUse){
                if(category.getShopCategoryId() != null){
                    lstShopCategoryId += category.getShopCategoryId();
                    lstNameShopCategory += category.getShopClassName();
                    count++;
                    if(count < mrsUse.size()){
                        lstShopCategoryId += ",";
                        lstNameShopCategory += "ÅA";
                    }
                }
            }
        }
        paramBean.setListCategoryId(lstShopCategoryId);
        paramBean.setListCategoryName(lstNameShopCategory);
        //IVS_LVTu start end 2014/12/01 Mashu_íSìñï å⁄ãqê¨ê—
        //èoóÕèàóù
        boolean logicResult = true;
        try {
            //êEã∆ï ç\ê¨î‰
            logicResult = logic.outStaffReportCustomerOccupationSales(paramBean);
        } catch (Exception e) {
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(1099),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // ÉGÉâÅ[éû
        if(!logicResult) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnOutput2ActionPerformed

    private void cmbTargetPeriodEndDate2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodEndDate2FocusGained
        cmbTargetPeriodEndDate2.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodEndDate2FocusGained

    private void cmbTargetPeriodStartDate2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodStartDate2FocusGained
        cmbTargetPeriodStartDate2.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodStartDate2FocusGained

    private void btnOutput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutput1ActionPerformed

        if (!SystemInfo.checkAuthorityPassword(251)) return;

        ReportLogic logic = new ReportLogic();
        ReportParameterBean paramBean = new ReportParameterBean();
        paramBean.setMainReportType(ReportParameterBean.MAIN_REPORT_STAFF);
        
        //ÉOÉãÅ[Év
        if(target.getSelectedItem() instanceof MstGroup) {
            MstGroup	mg	=	(MstGroup)target.getSelectedItem();
            paramBean.setTargetName(mg.getGroupName());
            paramBean.setShopIDList(mg.getShopIDListAll());
        }
        //ìXï‹
        else if(target.getSelectedItem() instanceof MstShop) {
            MstShop		ms	=	(MstShop)target.getSelectedItem();
            paramBean.setTargetName(ms.getShopName());
            paramBean.setShopIDList(ms.getShopID().toString());
        }
        
        //ëŒè€Ç∆Ç»ÇÈìXï‹Ç™ë∂ç›ÇµÇ»Ç¢èÍçá
        if(paramBean.getShopIDList().equals("")) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //ê≈ãÊï™
        if(this.rdoTaxBlank.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_BLANK);	// ê≈ãÊï™(ê≈î≤Ç´)
        } else if(this.rdoTaxUnit.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_UNIT);	// ê≈ãÊï™(ê≈çûÇ›)
        }
        
        //äÑà¯ÇÃãÊï™ÇÃê›íË
        Integer discountType = SystemInfo.getAccountSetting().getDiscountType();
        paramBean.setDiscountType(discountType);
        
        //ëŒè€ä˙ä‘
        paramBean.setTargetStartDate(this.cmbTargetPeriodStartDate1.getDateStr("/"));
        paramBean.setTargetEndDate(this.cmbTargetPeriodEndDate1.getDateStr("/"));
        paramBean.setTargetStartDateObj(this.cmbTargetPeriodStartDate1.getDate());
        paramBean.setTargetEndDateObj(this.cmbTargetPeriodEndDate1.getDate());
        
        Calendar start = Calendar.getInstance();
        Calendar end = Calendar.getInstance();
        start.setTime(this.cmbTargetPeriodStartDate1.getDate());
        end.setTime(this.cmbTargetPeriodEndDate1.getDate());
        
        if(start.compareTo(end) != 0) {
            //ëŒè€ä˙ä‘Ç™äJénì˙ÅÑèIóπì˙Ç»ÇÁÉGÉâÅ[
            if(start.after(end)) {
                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, "ëŒè€ä˙ä‘"),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        //IVS_LVTu start add 2014/12/01 Mashu_íSìñï å⁄ãqê¨ê—
        //ã∆ë‘IDÇÃàÍóó
        String lstShopCategoryId = "";
        String lstNameShopCategory = "";
        if(mrsUse.size() >0){
            int count = 0;
            for(MstShopCategory category : mrsUse){
                if(category.getShopCategoryId() != null){
                    lstShopCategoryId += category.getShopCategoryId();
                    lstNameShopCategory += category.getShopClassName();
                    count++;
                    if(count < mrsUse.size()){
                        lstShopCategoryId += ",";
                        lstNameShopCategory += "ÅA";
                    }
                }
            }
        }
        paramBean.setListCategoryId(lstShopCategoryId);
        paramBean.setListCategoryName(lstNameShopCategory);
        //IVS_LVTu start end 2014/12/01 Mashu_íSìñï å⁄ãqê¨ê—
        //èoóÕèàóù
        boolean logicResult = true;
        try {
            //ê´ï ï îÑè„
            logicResult = logic.outStaffReportCustomerSexSales(paramBean);
        } catch (Exception e) {
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(1099),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // ÉGÉâÅ[éû
        if(!logicResult) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnOutput1ActionPerformed

    private void cmbTargetPeriodEndDate1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodEndDate1FocusGained
        cmbTargetPeriodEndDate1.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodEndDate1FocusGained

    private void cmbTargetPeriodStartDate1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodStartDate1FocusGained
        cmbTargetPeriodStartDate1.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodStartDate1FocusGained

    private void btnOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutputActionPerformed

        if (!SystemInfo.checkAuthorityPassword(250)) return;

        ReportLogic logic = new ReportLogic();
        ReportParameterBean paramBean = new ReportParameterBean();
        paramBean.setMainReportType(ReportParameterBean.MAIN_REPORT_STAFF);
        
        //ÉOÉãÅ[Év
        if(target.getSelectedItem() instanceof MstGroup) {
            MstGroup	mg	=	(MstGroup)target.getSelectedItem();
            paramBean.setTargetName(mg.getGroupName());
            paramBean.setShopIDList(mg.getShopIDListAll());
        }
        //ìXï‹
        else if(target.getSelectedItem() instanceof MstShop) {
            MstShop		ms	=	(MstShop)target.getSelectedItem();
            paramBean.setTargetName(ms.getShopName());
            paramBean.setShopIDList(ms.getShopID().toString());
        }
        
        //ëŒè€Ç∆Ç»ÇÈìXï‹Ç™ë∂ç›ÇµÇ»Ç¢èÍçá
        if(paramBean.getShopIDList().equals("")) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //ê≈ãÊï™
        if(this.rdoTaxBlank.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_BLANK);	// ê≈ãÊï™(ê≈î≤Ç´)
        } else if(this.rdoTaxUnit.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_UNIT);	// ê≈ãÊï™(ê≈çûÇ›)
        }
        
        //äÑà¯ÇÃãÊï™ÇÃê›íË
        Integer discountType = SystemInfo.getAccountSetting().getDiscountType();
        paramBean.setDiscountType(discountType);
        
        //ëŒè€ä˙ä‘
        paramBean.setTargetStartDate(this.cmbTargetPeriodStartDate.getDateStr());
        paramBean.setTargetEndDate(this.cmbTargetPeriodEndDate.getDateStr());
        paramBean.setTargetStartDateObj(this.cmbTargetPeriodStartDate.getDate());
        paramBean.setTargetEndDateObj(this.cmbTargetPeriodEndDate.getDate());
        
        Calendar start = Calendar.getInstance();
        Calendar end = Calendar.getInstance();
        start.setTime(this.cmbTargetPeriodStartDate.getDate());
        end.setTime(this.cmbTargetPeriodEndDate.getDate());
        
        if(start.compareTo(end) != 0) {
            //ëŒè€ä˙ä‘Ç™äJénì˙ÅÑèIóπì˙Ç»ÇÁÉGÉâÅ[
            if(start.after(end)) {
                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, "ëŒè€ä˙ä‘"),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        //IVS_LVTu start add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
        //ã∆ë‘IDÇÃàÍóó
        String lstShopCategoryId = "";
        String lstNameShopCategory = "";
        if(mrsUse.size() >0){
            int count = 0;
            for(MstShopCategory category : mrsUse){
                if(category.getShopCategoryId() != null){
                    lstShopCategoryId += category.getShopCategoryId();
                    lstNameShopCategory += category.getShopClassName();
                    count++;
                    if(count < mrsUse.size()){
                        lstShopCategoryId += ",";
                        lstNameShopCategory += "ÅA";
                    }
                }
            }
        }
        paramBean.setListCategoryId(lstShopCategoryId);
        paramBean.setListCategoryName(lstNameShopCategory);
        //IVS_LVTu start end 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
        //èoóÕèàóù
        boolean logicResult = true;
        try {
            //óàìXâÒêîï îÑè„
            if(customerType.getSelectedIndex() == 0){
                //Ç∑Ç◊Çƒ
               logicResult = logic.outStaffReportCustomerSales(paramBean, null);
            } else if (customerType.getSelectedIndex() == 1){
                //éwñº
               logicResult = logic.outStaffReportCustomerSales(paramBean, true);
            } else if (customerType.getSelectedIndex() == 2){
                //ÉtÉäÅ[
                logicResult = logic.outStaffReportCustomerSales(paramBean, false);
            }
        } catch (Exception e) {
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(1099),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // ÉGÉâÅ[éû
        if(!logicResult) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnOutputActionPerformed

    private void cmbTargetPeriodEndDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodEndDateFocusGained
        cmbTargetPeriodEndDate.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodEndDateFocusGained

    private void cmbTargetPeriodStartDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodStartDateFocusGained
        cmbTargetPeriodStartDate.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodStartDateFocusGained
	
    private void targetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetActionPerformed
        //IVS_LVTu start add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
        this.chargeDataCombo();
        //IVS_LVTu start end 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
    }//GEN-LAST:event_targetActionPerformed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        //IVS_LVTu start add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
        this.moveMutiCategory(true);
        //IVS_LVTu end add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
    }//GEN-LAST:event_selectButtonActionPerformed

    private void selectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllButtonActionPerformed
        //IVS_LVTu start add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
        this.moveCategoryAll(true);
        //IVS_LVTu end add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
    }//GEN-LAST:event_selectAllButtonActionPerformed

    private void releaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releaseButtonActionPerformed
        //IVS_LVTu start add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
        this.moveMutiCategory(false);
        //IVS_LVTu end add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
    }//GEN-LAST:event_releaseButtonActionPerformed

    private void releaseAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releaseAllButtonActionPerformed
        //IVS_LVTu start add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
        this.moveCategoryAll(false);
        //IVS_LVTu end add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
    }//GEN-LAST:event_releaseAllButtonActionPerformed
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOutput;
    private javax.swing.JButton btnOutput1;
    private javax.swing.JButton btnOutput2;
    private javax.swing.JButton btnOutput3;
    private javax.swing.JButton btnOutput4;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEndDate;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEndDate1;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEndDate2;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEndDate3;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEndDate4;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStartDate;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStartDate1;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStartDate2;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStartDate3;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStartDate4;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel customerType;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblTargetPeriod;
    private javax.swing.JLabel lblTargetPeriod1;
    private javax.swing.JLabel lblTargetPeriod2;
    private javax.swing.JLabel lblTargetPeriod3;
    private javax.swing.JLabel lblTargetPeriod4;
    private javax.swing.JLabel lblTax;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JRadioButton rdoTaxBlank;
    private javax.swing.JRadioButton rdoTaxUnit;
    private javax.swing.JScrollPane referenceCategoryLeftScrollPane;
    private javax.swing.JButton releaseAllButton;
    private javax.swing.JButton releaseButton;
    private javax.swing.JButton selectAllButton;
    private javax.swing.JButton selectButton;
    private javax.swing.JScrollPane selectCategoryRightScrollPane;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel target;
    private javax.swing.JLabel targetLabel;
    private javax.swing.ButtonGroup taxGroup;
    private javax.swing.JTable tblReferenceCategoryName;
    private javax.swing.JTable tblSelectCategoryName;
    // End of variables declaration//GEN-END:variables
	
	private	StaffResultCustomerReportFocusTraversalPolicy	ftp	=
			new StaffResultCustomerReportFocusTraversalPolicy();
	
	/**
	 * É{É^ÉìÇ…É}ÉEÉXÉJÅ[É\ÉãÇ™èÊÇ¡ÇΩÇ∆Ç´Ç…ÉJÅ[É\ÉãÇïœçXÇ∑ÇÈÉCÉxÉìÉgÇí«â¡Ç∑ÇÈÅB
	 */
	private void addMouseCursorChange()
	{
		SystemInfo.addMouseCursorChange(btnOutput);
		SystemInfo.addMouseCursorChange(btnOutput1);
		SystemInfo.addMouseCursorChange(btnOutput2);
		SystemInfo.addMouseCursorChange(btnOutput3);
		SystemInfo.addMouseCursorChange(btnOutput4);
	}
	
	private void setKeyListener()
	{
		cmbTargetPeriodEndDate4.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodEndDate4.addFocusListener(SystemInfo.getSelectText());
		cmbTargetPeriodStartDate4.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodStartDate4.addFocusListener(SystemInfo.getSelectText());
		cmbTargetPeriodEndDate3.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodEndDate3.addFocusListener(SystemInfo.getSelectText());
		cmbTargetPeriodStartDate3.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodStartDate3.addFocusListener(SystemInfo.getSelectText());
		cmbTargetPeriodEndDate2.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodEndDate2.addFocusListener(SystemInfo.getSelectText());
		cmbTargetPeriodStartDate2.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodStartDate2.addFocusListener(SystemInfo.getSelectText());
		cmbTargetPeriodEndDate1.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodEndDate1.addFocusListener(SystemInfo.getSelectText());
		cmbTargetPeriodStartDate1.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodStartDate1.addFocusListener(SystemInfo.getSelectText());
		customerType.addKeyListener(SystemInfo.getMoveNextField());
		customerType.addFocusListener(SystemInfo.getSelectText());
		cmbTargetPeriodEndDate.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodEndDate.addFocusListener(SystemInfo.getSelectText());
		cmbTargetPeriodStartDate.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodStartDate.addFocusListener(SystemInfo.getSelectText());
		rdoTaxBlank.addKeyListener(SystemInfo.getMoveNextField());
		rdoTaxUnit.addKeyListener(SystemInfo.getMoveNextField());
		target.addKeyListener(SystemInfo.getMoveNextField());
		target.addFocusListener(SystemInfo.getSelectText());
	}
	
	/**
	 * íSìñï å⁄ãqê¨ê—âÊñ ópFocusTraversalPolicyÇéÊìæÇ∑ÇÈÅB
	 * @return  íSìñï å⁄ãqê¨ê—âÊñ ópFocusTraversalPolicy
	 */
	public StaffResultCustomerReportFocusTraversalPolicy getFocusTraversalPolicy()
	{
		return	ftp;
	}
	
	
	/**
	 * íSìñï å⁄ãqê¨ê—âÊñ ópFocusTraversalPolicy
	 */
	private class StaffResultCustomerReportFocusTraversalPolicy
					extends FocusTraversalPolicy
	{
		/**
		 * aComponentStaffResultCustomerReportFocusTraversalPolicyÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃÇ†Ç∆Ç…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentAfter(Container aContainer,
										   Component aComponent)
		{
			if (aComponent.equals(target))
			{
				return this.getSelectedTaxType();
			}
                        else if (aComponent.equals(rdoTaxBlank) ||
					aComponent.equals(rdoTaxUnit))
			{
				return cmbTargetPeriodStartDate;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate))
			{
				return cmbTargetPeriodEndDate;
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate))
			{
				return customerType;
			}
			else if (aComponent.equals(customerType))
			{
				return cmbTargetPeriodStartDate1;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate1))
			{
				return cmbTargetPeriodEndDate1;
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate1))
			{
				return cmbTargetPeriodStartDate2;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate2))
			{
				return cmbTargetPeriodEndDate2;
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate2))
			{
				return cmbTargetPeriodStartDate3;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate3))
			{
				return cmbTargetPeriodEndDate3;
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate3))
			{
				return cmbTargetPeriodStartDate4;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate4))
			{
				return cmbTargetPeriodEndDate4;
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate4))
			{
        			return target;
			}
			
			return target;
		}

		/**
		 * aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentBefore(Container aContainer,
											Component aComponent)
		{

			if (aComponent.equals(target))
			{
				return cmbTargetPeriodEndDate4;
			}
                        else if (aComponent.equals(rdoTaxBlank) ||
					aComponent.equals(rdoTaxUnit))
			{
				return target;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate))
			{
				return this.getSelectedTaxType();
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate))
			{
				return cmbTargetPeriodStartDate;
			}
			else if (aComponent.equals(customerType))
			{
				return cmbTargetPeriodEndDate;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate1))
			{
				return customerType;
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate1))
			{
				return cmbTargetPeriodStartDate1;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate2))
			{
				return cmbTargetPeriodEndDate1;
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate2))
			{
				return cmbTargetPeriodStartDate2;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate3))
			{
				return cmbTargetPeriodEndDate2;
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate3))
			{
				return cmbTargetPeriodStartDate3;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate4))
			{
				return cmbTargetPeriodEndDate3;
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate4))
			{
        			return cmbTargetPeriodStartDate4;
			}
			
			return target;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈èâÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAèáï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer êÊì™ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃêÊì™ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getFirstComponent(Container aContainer)
		{
			return target;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAãtï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer aContainer - ç≈å„ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getLastComponent(Container aContainer)
		{
                        return cmbTargetPeriodStartDate4;
		}

		/**
		 * ÉtÉHÅ[ÉJÉXÇê›íËÇ∑ÇÈÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÉãÅ[ÉgÇ∆Ç∑ÇÈÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇ™êVÇµÇ≠äJénÇ≥ÇÍÇΩÇ∆Ç´Ç…ÅAÇ±ÇÃÉRÉìÉ|Å[ÉlÉìÉgÇ…ç≈èâÇ…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇ‹Ç∑ÅB
		 * @param aContainer ÉfÉtÉHÉãÉgÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃÉfÉtÉHÉãÉgÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getDefaultComponent(Container aContainer)
		{
			return target;
		}
		
		/**
		 * ÉEÉBÉìÉhÉEÇ™ç≈èâÇ…ï\é¶Ç≥ÇÍÇΩÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * show() Ç‹ÇΩÇÕ setVisible(true) ÇÃåƒÇ—èoÇµÇ≈àÍìxÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆ÅA
		 * èâä˙âªÉRÉìÉ|Å[ÉlÉìÉgÇÕÇªÇÍà»ç~égópÇ≥ÇÍÇ‹ÇπÇÒÅB
		 * àÍìxï ÇÃÉEÉBÉìÉhÉEÇ…à⁄Ç¡ÇΩÉtÉHÅ[ÉJÉXÇ™çƒÇ—ê›íËÇ≥ÇÍÇΩèÍçáÅA
		 * Ç‹ÇΩÇÕÅAàÍìxîÒï\é¶èÛë‘Ç…Ç»Ç¡ÇΩÉEÉBÉìÉhÉEÇ™çƒÇ—ï\é¶Ç≥ÇÍÇΩèÍçáÇÕÅA
		 * ÇªÇÃÉEÉBÉìÉhÉEÇÃç≈å„Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇΩÉRÉìÉ|Å[ÉlÉìÉgÇ™ÉtÉHÅ[ÉJÉXèäóLé“Ç…Ç»ÇËÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÃÉfÉtÉHÉãÉgé¿ëïÇ≈ÇÕÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * @param window èâä˙ÉRÉìÉ|Å[ÉlÉìÉgÇ™ï‘Ç≥ÇÍÇÈÉEÉBÉìÉhÉE
		 * @return ç≈èâÇ…ÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÅBìKêÿÇ»ÉRÉìÉ|Å[ÉlÉìÉgÇ™Ç»Ç¢èÍçáÇÕ null
		 */
		public Component getInitialComponent(Window window)
		{
			return target;
		}
		
                /**
                 * ëIëíÜÇÃê≈ãÊï™Çï‘ÇµÇ‹Ç∑ÅB
                 */
		private Component getSelectedTaxType()
		{
			if(rdoTaxUnit.isSelected())
			{
				return	rdoTaxUnit;
			}
			
			return	rdoTaxBlank;
		}
	}
    //IVS_LVTu start add 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—

    /**
     * init data for table ã∆ë‘ñº left with group shop
     */
    private void initCategoryWithGroupShop() {
        mrsRef = new MstShopCategorys();
        SimpleMaster sm = new SimpleMaster(
                "",
                "mst_shop_category",
                "shop_category_id",
                "shop_class_name", 0);

        sm.loadData();
        for (MstData md : sm) {
            if (md != null) {
                MstShopCategory category = new MstShopCategory();
                category.setShopCategoryId(md.getID());
                category.setShopClassName(md.getName());
                category.setDisplaySeq(md.getDisplaySeq());
                mrsRef.add(category);
            }

        }

    }

    /**
     * init data for table ã∆ë‘ñº left with muti shop
     */
    private void initCategoryWithMutiShop() {
        mrsRef = new MstShopCategorys();
        MstShop ms = (MstShop) target.getSelectedItem();
        if (ms.getShopID() != null) {
            try {
                mscg = new MstShopCategorys();
                ConnectionWrapper con = SystemInfo.getConnection();

                mscg.loadByShop(con, ms.getShopID());

                if (mscg.size() > 0) {
                    mrsRef = mscg;
                }

            } catch (SQLException e) {

                SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            }
        }

    }

    /**
     * change combo and show again two table change combo
     *
     * @param evt
     */
    private void chargeDataCombo() {

        mrsRef = new MstShopCategorys();
        mrsUse = new MstShopCategorys();
        //ÉOÉãÅ[Év
        if (target.getSelectedItem() instanceof MstGroup) {
            displayForDesign(true, 1);
//            useShopCategory = 1;
//            isHideCategory = true;
            initCategoryWithGroupShop();

        } //ìXï‹
        else if (target.getSelectedItem() instanceof MstShop) {
            MstShop ms = (MstShop) target.getSelectedItem();
            if (ms.getUseShopCategory().equals(1)) {
                displayForDesign(false, 1);
//                useShopCategory = 1;
//                isHideCategory = true;
                initCategoryWithMutiShop();

            } else {

                displayForDesign(false, 0);
//                useShopCategory = 0;
//                isHideCategory = false;

            }

        }

        this.showItems();
    }
    /**
     * control design screen follow combo ëŒè€
     * @param isGroup
     * @param useShopCategory 
     */
    public void displayForDesign(boolean isGroup, Integer useShopCategory){
       
        if(isGroup){
            
            SwingUtil.clearTable(tblReferenceCategoryName);
            SwingUtil.clearTable(tblSelectCategoryName);
            lblCategory.setVisible(true);
            referenceCategoryLeftScrollPane.setVisible(true);
            tblReferenceCategoryName.setVisible(true);
            selectCategoryRightScrollPane.setVisible(true);
            tblSelectCategoryName.setVisible(true);

            selectAllButton.setVisible(true);
            selectButton.setVisible(true);
            releaseButton.setVisible(true);
            releaseAllButton.setVisible(true);
            //Luc start edit 20150212 New request #35208
            if(SystemInfo.getSetteing().isUseShopCategory()) {
            jPanel8.setVisible(true);
            }else {
                jPanel8.setVisible(false);
            }
            //Luc end edit 20150212 New request #35208
                     
        }else{
            MstShop ms = (MstShop)target.getSelectedItem();
            if(ms.getUseShopCategory().equals(1)){
                   SwingUtil.clearTable(tblReferenceCategoryName);
                   SwingUtil.clearTable(tblSelectCategoryName);
                   lblCategory.setVisible(true);
                   referenceCategoryLeftScrollPane.setVisible(true);
                   tblReferenceCategoryName.setVisible(true);

                   selectCategoryRightScrollPane.setVisible(true);
                   tblSelectCategoryName.setVisible(true);

                   selectAllButton.setVisible(true);
                   selectButton.setVisible(true);
                   releaseButton.setVisible(true);
                   releaseAllButton.setVisible(true);

                   jPanel8.setVisible(true);
            }else{

                   SwingUtil.clearTable(tblReferenceCategoryName);
                   SwingUtil.clearTable(tblSelectCategoryName);
                   lblCategory.setVisible(false);
                   referenceCategoryLeftScrollPane.setVisible(false);
                   tblReferenceCategoryName.setVisible(false);

                   selectCategoryRightScrollPane.setVisible(false);
                   tblSelectCategoryName.setVisible(false);

                   selectAllButton.setVisible(false);
                   selectButton.setVisible(false);
                   releaseButton.setVisible(false);
                   releaseAllButton.setVisible(false);
                   jPanel8.setVisible(false);
            }
        }

    }
    /**
     * move item
     *
     * @param isSelect
     */
    public void moveMutiCategory(boolean isSelect) {

        JTable fromTable = (isSelect ? tblReferenceCategoryName : tblSelectCategoryName);

        int index = fromTable.getSelectedRow();
        if (index < 0) {
            return;
        }
        ArrayList<MstShopCategory> tmp = new ArrayList<MstShopCategory>();
        if (isSelect) {
            int[] selectedIndex = fromTable.getSelectedRows();
            if (selectedIndex.length > 0) {
                for (int i = 0; i < selectedIndex.length; i++) {
                    mrsUse.add(mrsRef.get(selectedIndex[i]));
                    tmp.add(mrsRef.get(selectedIndex[i]));
                }
                mrsRef.removeAll(tmp);
            }

        } else {

            int[] selectedIndex = fromTable.getSelectedRows();
            if (selectedIndex.length > 0) {
                for (int i = 0; i < selectedIndex.length; i++) {
                    mrsRef.add(mrsUse.get(selectedIndex[i]));
                    tmp.add(mrsUse.get(selectedIndex[i]));
                }
                mrsUse.removeAll(tmp);
            }

        }

        this.showItems();
    }

    /**
     * move all item
     *
     * @param isSelect
     */
    public void moveCategoryAll(boolean isSelect) {

        JTable fromTable = (isSelect ? tblReferenceCategoryName : tblSelectCategoryName);

        if (fromTable.getRowCount() == 0) {
            return;
        }

        if (isSelect) {
            for (MstShopCategory mr : mrsRef) {
                mrsUse.add(mr);
            }
            mrsRef.clear();
        } else {
            for (MstShopCategory mr : mrsUse) {
                mrsRef.add(mr);
            }
            mrsUse.clear();
        }

        this.showItems();
    }

    /**
     * show data on two table
     */
    private void showItems() {
        this.showItems(mrsRef, tblReferenceCategoryName);
        this.showItems(mrsUse, tblSelectCategoryName);
    }

    /**
     * show data detail on two table
     *
     * @param list
     * @param table
     */
    private void showItems(ArrayList<MstShopCategory> list, JTable table) {

        Collections.sort(list, new ItemComparator());

        if (table.getCellEditor() != null) {
            table.getCellEditor().stopCellEditing();
        }
        SwingUtil.clearTable(table);

        DefaultTableModel model = (DefaultTableModel) table.getModel();
        for (MstShopCategory mr : list) {
            model.addRow(new Object[]{
                mr.getShopClassName()
            });

        }
    }

    /**
     * compare data
     */
    private class ItemComparator implements java.util.Comparator {

        public int compare(Object s, Object t) {
            return ((MstShopCategory) s).getDisplaySeq() - ((MstShopCategory) t).getDisplaySeq();
        }
    }
    //IVS_LVTu start end 2014/11/28 Mashu_íSìñï å⁄ãqê¨ê—
}
