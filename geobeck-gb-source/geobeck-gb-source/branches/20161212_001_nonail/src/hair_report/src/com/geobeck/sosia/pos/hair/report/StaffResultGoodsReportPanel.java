/*
 * StaffResultGoodsReportPanel.java
 *
 * Created on 2008/06/14, 13:00
 */

package com.geobeck.sosia.pos.hair.report;

import com.geobeck.sosia.pos.basicinfo.SimpleMaster;
import com.geobeck.sosia.pos.system.SystemInfo;
import java.awt.*;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.*;
import javax.swing.*;
import com.geobeck.swing.*;
import com.geobeck.sosia.pos.master.company.*;
import com.geobeck.sosia.pos.report.bean.ReportParameterBean;
import com.geobeck.sosia.pos.hair.report.logic.ReportLogic;
import com.geobeck.sosia.pos.master.MstData;
import com.geobeck.sosia.pos.swing.SelectTableCellRenderer;
import com.geobeck.sosia.pos.util.*;
import com.geobeck.sql.ConnectionWrapper;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  saito
 */
public class StaffResultGoodsReportPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx
{
        //IVS_LVTu start add 2015/06/05 New request #37165
	private MstShopCategorys mrsRef = new MstShopCategorys();
        private MstShopCategorys mrsUse = new MstShopCategorys();
        private MstShopCategorys		mscg		=	new MstShopCategorys();
        private int useShopCategory = 0;
        private boolean isHideCategory = false;
        //IVS_LVTu end add 2015/06/05 New request #37165
	/** Creates new form StaffResultGoodsReportPanel */
	public StaffResultGoodsReportPanel()
	{
		initComponents();
		addMouseCursorChange();
		this.setSize(700, 603);
		this.setPath("í†ï[èoóÕ");
		this.setTitle("íSìñï è§ïiê¨ê—");
		this.setKeyListener();
                
                target.addItem(SystemInfo.getGroup());
                SystemInfo.getGroup().addGroupDataToJComboBox(target, 3);
                if (!SystemInfo.isGroup()) {
                    target.setSelectedItem(SystemInfo.getCurrentShop());
                }
                
                //ëŒè€ä˙ä‘ÇÃê›íË
		this.cmbTargetPeriodStartDate.setDate(new Date());
		this.cmbTargetPeriodEndDate.setDate(new Date());
                //ëŒè€ä˙ä‘ÇÃê›íËÅyíSìñï ï™óﬁç\ê¨î‰Åz
		this.cmbTargetPeriodStartDate1.setDate(new Date());
		this.cmbTargetPeriodEndDate1.setDate(new Date());
		
		//ê≈î≤ÅAê≈çûÇÃèâä˙ê›íË
		if(SystemInfo.getAccountSetting().getReportPriceType() == 0)
		{
			rdoTaxBlank.setSelected(false);
			rdoTaxUnit.setSelected(true);
		}
		else
		{
			rdoTaxBlank.setSelected(true);
			rdoTaxUnit.setSelected(false);
		}
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportTypeGroup = new javax.swing.ButtonGroup();
        taxGroup = new javax.swing.ButtonGroup();
        countGroup = new javax.swing.ButtonGroup();
        customerGroup = new javax.swing.ButtonGroup();
        pnlMain = new javax.swing.JPanel();
        lblTax = new javax.swing.JLabel();
        rdoTaxBlank = new javax.swing.JRadioButton();
        rdoTaxUnit = new javax.swing.JRadioButton();
        targetLabel = new javax.swing.JLabel();
        target = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        jPanel3 = new javax.swing.JPanel();
        referenceCategoryLeftScrollPane = new javax.swing.JScrollPane();
        tblReferenceCategoryName = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        selectButton = new javax.swing.JButton();
        selectAllButton = new javax.swing.JButton();
        releaseButton = new javax.swing.JButton();
        releaseAllButton = new javax.swing.JButton();
        selectCategoryRightScrollPane = new javax.swing.JScrollPane();
        tblSelectCategoryName = new javax.swing.JTable();
        lblCategory = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblTargetPeriod = new javax.swing.JLabel();
        cmbTargetPeriodStartDate = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        jLabel1 = new javax.swing.JLabel();
        cmbTargetPeriodEndDate = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        btnOutput1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblTargetPeriod1 = new javax.swing.JLabel();
        cmbTargetPeriodStartDate1 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        jLabel2 = new javax.swing.JLabel();
        cmbTargetPeriodEndDate1 = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        btnOutput2 = new javax.swing.JButton();
        lblTargetPeriod3 = new javax.swing.JLabel();
        lblTargetPeriod4 = new javax.swing.JLabel();
        rdoSuryo = new javax.swing.JRadioButton();
        rdoHikaiin = new javax.swing.JRadioButton();
        rdoNinzu = new javax.swing.JRadioButton();
        rdoKaiin = new javax.swing.JRadioButton();

        setFocusCycleRoot(true);

        pnlMain.setFocusCycleRoot(true);
        pnlMain.setOpaque(false);

        lblTax.setText("ê≈ãÊï™");
        lblTax.setFocusCycleRoot(true);

        taxGroup.add(rdoTaxBlank);
        rdoTaxBlank.setText("ê≈î≤");
        rdoTaxBlank.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoTaxBlank.setFocusCycleRoot(true);
        rdoTaxBlank.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoTaxBlank.setOpaque(false);

        taxGroup.add(rdoTaxUnit);
        rdoTaxUnit.setSelected(true);
        rdoTaxUnit.setText("ê≈çû");
        rdoTaxUnit.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoTaxUnit.setFocusCycleRoot(true);
        rdoTaxUnit.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoTaxUnit.setOpaque(false);

        targetLabel.setText("ëŒè€");
        targetLabel.setFocusCycleRoot(true);

        target.setFocusCycleRoot(true);
        target.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetActionPerformed(evt);
            }
        });

        jPanel3.setOpaque(false);

        tblReferenceCategoryName.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "ã∆ë‘ñº"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReferenceCategoryName.setSelectionForeground(new java.awt.Color(0, 0, 0));
        //nhanvt
        tblReferenceCategoryName.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(tblReferenceCategoryName, SystemInfo.getTableHeaderRenderer());
        tblReferenceCategoryName.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        SelectTableCellRenderer.setSelectTableCellRenderer(tblReferenceCategoryName);
        //nhanvt
        tblReferenceCategoryName.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tblReferenceCategoryNameMouseMoved(evt);
            }
        });
        referenceCategoryLeftScrollPane.setViewportView(tblReferenceCategoryName);

        jPanel4.setOpaque(false);

        selectButton.setIcon(SystemInfo.getImageIcon("/button/arrow/right_off.jpg"));
        selectButton.setBorderPainted(false);
        selectButton.setContentAreaFilled(false);
        selectButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/right_on.jpg"));
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        selectAllButton.setIcon(SystemInfo.getImageIcon("/button/arrow/right2_off.jpg"));
        selectAllButton.setBorderPainted(false);
        selectAllButton.setContentAreaFilled(false);
        selectAllButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/right2_on.jpg"));
        selectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllButtonActionPerformed(evt);
            }
        });

        releaseButton.setIcon(SystemInfo.getImageIcon("/button/arrow/left_off.jpg"));
        releaseButton.setBorderPainted(false);
        releaseButton.setContentAreaFilled(false);
        releaseButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/left_on.jpg"));
        releaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releaseButtonActionPerformed(evt);
            }
        });

        releaseAllButton.setIcon(SystemInfo.getImageIcon("/button/arrow/left2_off.jpg"));
        releaseAllButton.setBorderPainted(false);
        releaseAllButton.setContentAreaFilled(false);
        releaseAllButton.setPressedIcon(SystemInfo.getImageIcon("/button/arrow/left2_on.jpg"));
        releaseAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releaseAllButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(selectButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(releaseButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(releaseAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(selectAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(selectAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(selectButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 39, Short.MAX_VALUE)
                .add(releaseButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(releaseAllButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        tblSelectCategoryName.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "ã∆ë‘ñº"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSelectCategoryName.setSelectionForeground(new java.awt.Color(0, 0, 0));
        //nhanvt
        tblSelectCategoryName.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(tblSelectCategoryName, SystemInfo.getTableHeaderRenderer());
        tblSelectCategoryName.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        SelectTableCellRenderer.setSelectTableCellRenderer(tblSelectCategoryName);
        //TableColumnModel model = tblSelectCategoryName.getColumnModel();
        //model.getColumn(2).setCellEditor(new IntegerCellEditor(new JTextField()));
        //model.getColumn(3).setCellEditor(new IntegerCellEditor(new JTextField()));
        //model.getColumn(4).setCellEditor(new IntegerCellEditor(new JTextField()));
        //model.getColumn(5).setCellEditor(new IntegerCellEditor(new JTextField()));
        //nhanvt
        tblSelectCategoryName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSelectCategoryNameMouseClicked(evt);
            }
        });
        tblSelectCategoryName.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblSelectCategoryNamePropertyChange(evt);
            }
        });
        selectCategoryRightScrollPane.setViewportView(tblSelectCategoryName);

        lblCategory.setText("èWåvã∆ë‘");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(lblCategory)
                .add(18, 18, 18)
                .add(referenceCategoryLeftScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 251, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(selectCategoryRightScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 251, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 19, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(lblCategory)
                    .add(selectCategoryRightScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(referenceCategoryLeftScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout pnlMainLayout = new org.jdesktop.layout.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlMainLayout.createSequentialGroup()
                .add(0, 0, 0)
                .add(pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblTax)
                    .add(targetLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(21, 21, 21)
                .add(pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(target, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 216, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pnlMainLayout.createSequentialGroup()
                        .add(rdoTaxUnit)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(rdoTaxBlank)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(pnlMainLayout.createSequentialGroup()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(targetLabel)
                    .add(target, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlMainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblTax)
                    .add(rdoTaxUnit)
                    .add(rdoTaxBlank))
                .add(0, 0, 0)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 166, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "è§ïiê¨ê—", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MS UI Gothic", 0, 12), new java.awt.Color(51, 51, 51)));
        jPanel1.setOpaque(false);

        lblTargetPeriod.setText("ëŒè€ä˙ä‘");
        lblTargetPeriod.setFocusCycleRoot(true);

        cmbTargetPeriodStartDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodStartDate.setFocusCycleRoot(true);
        cmbTargetPeriodStartDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodStartDateFocusGained(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Å`");
        jLabel1.setFocusCycleRoot(true);

        cmbTargetPeriodEndDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodEndDate.setFocusCycleRoot(true);
        cmbTargetPeriodEndDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodEndDateFocusGained(evt);
            }
        });

        btnOutput1.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutput1.setBorderPainted(false);
        btnOutput1.setFocusCycleRoot(true);
        btnOutput1.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutput1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(0, 0, 0)
                .add(lblTargetPeriod, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(cmbTargetPeriodStartDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(cmbTargetPeriodEndDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(btnOutput1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnOutput1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbTargetPeriodEndDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblTargetPeriod, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, cmbTargetPeriodStartDate, 0, 21, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(new java.awt.Component[] {cmbTargetPeriodEndDate, cmbTargetPeriodStartDate, lblTargetPeriod}, org.jdesktop.layout.GroupLayout.VERTICAL);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "íSìñï ï™óﬁç\ê¨î‰", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MS UI Gothic", 0, 12), new java.awt.Color(51, 51, 51)));
        jPanel2.setOpaque(false);

        lblTargetPeriod1.setText("èoóÕëŒè€");
        lblTargetPeriod1.setFocusCycleRoot(true);

        cmbTargetPeriodStartDate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodStartDate1.setFocusCycleRoot(true);
        cmbTargetPeriodStartDate1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodStartDate1FocusGained(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Å`");
        jLabel2.setFocusCycleRoot(true);

        cmbTargetPeriodEndDate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodEndDate1.setFocusCycleRoot(true);
        cmbTargetPeriodEndDate1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodEndDate1FocusGained(evt);
            }
        });

        btnOutput2.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutput2.setBorderPainted(false);
        btnOutput2.setFocusCycleRoot(true);
        btnOutput2.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutput2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutput2ActionPerformed(evt);
            }
        });

        lblTargetPeriod3.setText("ëŒè€ä˙ä‘");
        lblTargetPeriod3.setFocusCycleRoot(true);

        lblTargetPeriod4.setText("èoóÕèåè");
        lblTargetPeriod4.setFocusCycleRoot(true);

        countGroup.add(rdoSuryo);
        rdoSuryo.setText("êîó ");
        rdoSuryo.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoSuryo.setFocusCycleRoot(true);
        rdoSuryo.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoSuryo.setOpaque(false);
        rdoSuryo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoSuryoActionPerformed(evt);
            }
        });

        customerGroup.add(rdoHikaiin);
        rdoHikaiin.setText("îÒâÔàıä‹Çﬁ");
        rdoHikaiin.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoHikaiin.setFocusCycleRoot(true);
        rdoHikaiin.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoHikaiin.setOpaque(false);
        rdoHikaiin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHikaiinActionPerformed(evt);
            }
        });

        countGroup.add(rdoNinzu);
        rdoNinzu.setSelected(true);
        rdoNinzu.setText("êlêî");
        rdoNinzu.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoNinzu.setFocusCycleRoot(true);
        rdoNinzu.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoNinzu.setOpaque(false);
        rdoNinzu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNinzuActionPerformed(evt);
            }
        });

        customerGroup.add(rdoKaiin);
        rdoKaiin.setSelected(true);
        rdoKaiin.setText("âÔàıÇÃÇ›");
        rdoKaiin.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoKaiin.setFocusCycleRoot(true);
        rdoKaiin.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoKaiin.setOpaque(false);
        rdoKaiin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoKaiinActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(0, 0, 0)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(lblTargetPeriod1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblTargetPeriod3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblTargetPeriod4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(0, 0, 0)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(rdoNinzu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(30, 30, 30)
                        .add(rdoSuryo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(cmbTargetPeriodStartDate1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, 0)
                        .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, 0)
                        .add(cmbTargetPeriodEndDate1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(32, 32, 32)
                        .add(btnOutput2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(rdoKaiin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(rdoHikaiin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblTargetPeriod3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbTargetPeriodStartDate1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbTargetPeriodEndDate1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnOutput2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(5, 5, 5)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblTargetPeriod4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(rdoNinzu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(rdoSuryo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(5, 5, 5)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblTargetPeriod1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(rdoKaiin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(rdoHikaiin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlMain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(pnlMain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOutput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutput1ActionPerformed

            if (!SystemInfo.checkAuthorityPassword(244)) return;

            ReportLogic logic = new ReportLogic();
            ReportParameterBean paramBean = new ReportParameterBean();
            paramBean.setMainReportType(ReportParameterBean.MAIN_REPORT_STAFF);

            //ÉOÉãÅ[Év
            if(target.getSelectedItem() instanceof MstGroup)
            {
                    MstGroup	mg	=	(MstGroup)target.getSelectedItem();
                    paramBean.setTargetName(mg.getGroupName());
                    paramBean.setShopIDList(mg.getShopIDListAll());
            }
            //ìXï‹
            else if(target.getSelectedItem() instanceof MstShop)
            {
                    MstShop		ms	=	(MstShop)target.getSelectedItem();
                    paramBean.setTargetName(ms.getShopName());
                    paramBean.setShopIDList(ms.getShopID().toString());
            }

            //ëŒè€Ç∆Ç»ÇÈìXï‹Ç™ë∂ç›ÇµÇ»Ç¢èÍçá
            if(paramBean.getShopIDList().equals(""))
            {
                    MessageDialog.showMessageDialog(this,
                                    MessageUtil.getMessage(4001),
                                    this.getTitle(),
                                    JOptionPane.ERROR_MESSAGE);
                    return;
            }

            //ê≈ãÊï™
            if(this.rdoTaxBlank.isSelected())
            {
                    paramBean.setTaxType(ReportParameterBean.TAX_TYPE_BLANK);	// ê≈ãÊï™(ê≈î≤Ç´)
            }
            else if(this.rdoTaxUnit.isSelected())
            {
                    paramBean.setTaxType(ReportParameterBean.TAX_TYPE_UNIT);	// ê≈ãÊï™(ê≈çûÇ›)
            }

            //äÑà¯ÇÃãÊï™ÇÃê›íË
            Integer discountType = SystemInfo.getAccountSetting().getDiscountType();
            paramBean.setDiscountType(discountType);

            //ëŒè€ä˙ä‘
            paramBean.setTargetStartDate(this.cmbTargetPeriodStartDate.getDateStr());
            paramBean.setTargetEndDate(this.cmbTargetPeriodEndDate.getDateStr());
            paramBean.setTargetStartDateObj(this.cmbTargetPeriodStartDate.getDate());
            paramBean.setTargetEndDateObj(this.cmbTargetPeriodEndDate.getDate());

            Calendar start = Calendar.getInstance();
            Calendar end = Calendar.getInstance();
            start.setTime(this.cmbTargetPeriodStartDate.getDate());
            end.setTime(this.cmbTargetPeriodEndDate.getDate());

            if(start.compareTo(end) != 0)
            {
                    //ëŒè€ä˙ä‘Ç™äJénì˙ÅÑèIóπì˙Ç»ÇÁÉGÉâÅ[
                    if(start.after(end))
                    {
                                    MessageDialog.showMessageDialog(this,
                                                    MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, "ëŒè€ä˙ä‘"),
                                                    this.getTitle(),
                                                    JOptionPane.ERROR_MESSAGE);
                            return;
                    }
            }
            //IVS_LVTu start add 2015/06/05 New request #37165
            String lstShopCategoryId = "";
            String lstNameShopCategory = "";
            if(mrsUse.size() >0){
                int count = 0;
                for(MstShopCategory category : mrsUse){
                    if(category.getShopCategoryId() != null){
                        lstShopCategoryId += category.getShopCategoryId();
                        lstNameShopCategory += category.getShopClassName();
                        count++;
                        if(count < mrsUse.size()){
                            lstShopCategoryId += ",";
                            lstNameShopCategory += "ÅA";
                        }
                    }
                }
            }
            if(!lstShopCategoryId.equals("")){
                paramBean.setCategoryIDList(lstShopCategoryId);
            }else{
                paramBean.setCategoryIDList(null);
            }

            paramBean.setListCategoryName(lstNameShopCategory);
            paramBean.setIsHideCategory(isHideCategory);
            paramBean.setUseShopCategory(useShopCategory);
            //IVS_LVTu end add 2015/06/05 New request #37165
            

            //èoóÕèàóù
            boolean logicResult = true;
            try
            {
                    //íSìñï è§ïiê¨ê—
                    logicResult = logic.outStaffReportCommoditySales(paramBean);

            }
            catch (Exception e)
            {
                    SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
                    MessageDialog.showMessageDialog(this,
                                    MessageUtil.getMessage(1099),
                                    this.getTitle(),
                                    JOptionPane.ERROR_MESSAGE);
                    return;
            }

            // ÉGÉâÅ[éû
            if(!logicResult)
            {
                    MessageDialog.showMessageDialog(this,
                                    MessageUtil.getMessage(4001),
                                    this.getTitle(),
                                    JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btnOutput1ActionPerformed

	private void cmbTargetPeriodEndDateFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_cmbTargetPeriodEndDateFocusGained
	{//GEN-HEADEREND:event_cmbTargetPeriodEndDateFocusGained
		cmbTargetPeriodEndDate.getInputContext().setCharacterSubsets(null);
	}//GEN-LAST:event_cmbTargetPeriodEndDateFocusGained

	private void cmbTargetPeriodStartDateFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_cmbTargetPeriodStartDateFocusGained
	{//GEN-HEADEREND:event_cmbTargetPeriodStartDateFocusGained
		cmbTargetPeriodStartDate.getInputContext().setCharacterSubsets(null);
	}//GEN-LAST:event_cmbTargetPeriodStartDateFocusGained

        private void cmbTargetPeriodStartDate1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodStartDate1FocusGained
            cmbTargetPeriodStartDate1.getInputContext().setCharacterSubsets(null);
}//GEN-LAST:event_cmbTargetPeriodStartDate1FocusGained

        private void cmbTargetPeriodEndDate1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodEndDate1FocusGained
            cmbTargetPeriodEndDate1.getInputContext().setCharacterSubsets(null);
}//GEN-LAST:event_cmbTargetPeriodEndDate1FocusGained

        private void btnOutput2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutput2ActionPerformed

            if (!SystemInfo.checkAuthorityPassword(245)) return;

            btnOutput1.setCursor(null);

            try {

                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                this.print2();

            } finally {
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        }//GEN-LAST:event_btnOutput2ActionPerformed

        private void rdoSuryoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoSuryoActionPerformed
            // TODO add your handling code here:
}//GEN-LAST:event_rdoSuryoActionPerformed

        private void rdoHikaiinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHikaiinActionPerformed
            // TODO add your handling code here:
}//GEN-LAST:event_rdoHikaiinActionPerformed

        private void rdoNinzuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNinzuActionPerformed
            // TODO add your handling code here:
}//GEN-LAST:event_rdoNinzuActionPerformed

        private void rdoKaiinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoKaiinActionPerformed
            // TODO add your handling code here:
}//GEN-LAST:event_rdoKaiinActionPerformed

    private void tblReferenceCategoryNameMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblReferenceCategoryNameMouseMoved

    }//GEN-LAST:event_tblReferenceCategoryNameMouseMoved

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        this.moveMutiCategory(true);
    }//GEN-LAST:event_selectButtonActionPerformed

    private void selectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllButtonActionPerformed
        this.moveCategoryAll(true);
    }//GEN-LAST:event_selectAllButtonActionPerformed

    private void releaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releaseButtonActionPerformed
        this.moveMutiCategory(false);
    }//GEN-LAST:event_releaseButtonActionPerformed

    private void releaseAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releaseAllButtonActionPerformed
        this.moveCategoryAll(false);
    }//GEN-LAST:event_releaseAllButtonActionPerformed

    private void tblSelectCategoryNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSelectCategoryNameMouseClicked

    }//GEN-LAST:event_tblSelectCategoryNameMouseClicked

    private void tblSelectCategoryNamePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblSelectCategoryNamePropertyChange

    }//GEN-LAST:event_tblSelectCategoryNamePropertyChange

    private void targetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetActionPerformed
        this.chargeDataCombo();
    }//GEN-LAST:event_targetActionPerformed
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOutput1;
    private javax.swing.JButton btnOutput2;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEndDate;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEndDate1;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStartDate;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStartDate1;
    private javax.swing.ButtonGroup countGroup;
    private javax.swing.ButtonGroup customerGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblTargetPeriod;
    private javax.swing.JLabel lblTargetPeriod1;
    private javax.swing.JLabel lblTargetPeriod3;
    private javax.swing.JLabel lblTargetPeriod4;
    private javax.swing.JLabel lblTax;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JRadioButton rdoHikaiin;
    private javax.swing.JRadioButton rdoKaiin;
    private javax.swing.JRadioButton rdoNinzu;
    private javax.swing.JRadioButton rdoSuryo;
    private javax.swing.JRadioButton rdoTaxBlank;
    private javax.swing.JRadioButton rdoTaxUnit;
    private javax.swing.JScrollPane referenceCategoryLeftScrollPane;
    private javax.swing.JButton releaseAllButton;
    private javax.swing.JButton releaseButton;
    private javax.swing.ButtonGroup reportTypeGroup;
    private javax.swing.JButton selectAllButton;
    private javax.swing.JButton selectButton;
    private javax.swing.JScrollPane selectCategoryRightScrollPane;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel target;
    private javax.swing.JLabel targetLabel;
    private javax.swing.ButtonGroup taxGroup;
    private javax.swing.JTable tblReferenceCategoryName;
    private javax.swing.JTable tblSelectCategoryName;
    // End of variables declaration//GEN-END:variables
	
	private	StaffResultGoodsReportFocusTraversalPolicy	ftp	=
			new StaffResultGoodsReportFocusTraversalPolicy();
	
	/**
	 * É{É^ÉìÇ…É}ÉEÉXÉJÅ[É\ÉãÇ™èÊÇ¡ÇΩÇ∆Ç´Ç…ÉJÅ[É\ÉãÇïœçXÇ∑ÇÈÉCÉxÉìÉgÇí«â¡Ç∑ÇÈÅB
	 */
	private void addMouseCursorChange()
	{
		SystemInfo.addMouseCursorChange(btnOutput1);
		SystemInfo.addMouseCursorChange(btnOutput2);
	}
	
	private void setKeyListener()
	{
		cmbTargetPeriodEndDate.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodEndDate.addFocusListener(SystemInfo.getSelectText());
		cmbTargetPeriodStartDate.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodStartDate.addFocusListener(SystemInfo.getSelectText());
		rdoTaxBlank.addKeyListener(SystemInfo.getMoveNextField());
		rdoTaxUnit.addKeyListener(SystemInfo.getMoveNextField());
		target.addKeyListener(SystemInfo.getMoveNextField());
		target.addFocusListener(SystemInfo.getSelectText());
	}
	
	/**
	 * íSìñï è§ïiê¨ê—âÊñ ópFocusTraversalPolicyÇéÊìæÇ∑ÇÈÅB
	 * @return  íSìñï è§ïiê¨ê—âÊñ ópFocusTraversalPolicy
	 */
	public StaffResultGoodsReportFocusTraversalPolicy getFocusTraversalPolicy()
	{
		return	ftp;
	}
	
	
	/**
	 * ÉXÉ^ÉbÉtê¨ê—âÊñ ópFocusTraversalPolicy
	 */
	private class StaffResultGoodsReportFocusTraversalPolicy
					extends FocusTraversalPolicy
	{
		/**
		 * aComponentStaffResultGoodsReportFocusTraversalPolicyÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃÇ†Ç∆Ç…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentAfter(Container aContainer,
										   Component aComponent)
		{
			if (aComponent.equals(target))
			{
				return this.getSelectedTaxType();
			}
                        else if (aComponent.equals(rdoTaxBlank) ||
					aComponent.equals(rdoTaxUnit))
			{
				return cmbTargetPeriodStartDate;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate))
			{
				return cmbTargetPeriodEndDate;
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate))
			{
				return cmbTargetPeriodStartDate1;
			}
                        else if (aComponent.equals(cmbTargetPeriodStartDate1))
			{
				return cmbTargetPeriodEndDate1;
			}
                        else if (aComponent.equals(cmbTargetPeriodEndDate1))
			{
				if(rdoNinzu.isSelected()){
                                 return rdoNinzu;   
                                }
                                else{
                                    return rdoSuryo;
                                }           
			}
                         else if (aComponent.equals(rdoNinzu) ||
                                  aComponent.equals(rdoSuryo) )
			{
				if(rdoKaiin.isSelected()){
                                 return rdoKaiin;   
                                }
                                else{
                                    return rdoHikaiin;
                                }           
			}
			return target;
		}

		/**
		 * aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÕ aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_Ç≈Ç»ÇØÇÍÇŒÇ»ÇËÇ‹ÇπÇÒÅB
		 * @param aContainer aComponent ÇÃÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @param aComponent aContainer ÇÃÇ®ÇªÇÁÇ≠ä‘ê⁄ìIÇ»éqÅAÇ‹ÇΩÇÕ aContainer é©ëÃ
		 * @return aComponent ÇÃëOÇ…ÉtÉHÅ[ÉJÉXÇéÛÇØéÊÇÈ ComponentÅBìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getComponentBefore(Container aContainer,
											Component aComponent)
		{

			if (aComponent.equals(target))
			{
				return cmbTargetPeriodEndDate;
			}
                        else if (aComponent.equals(rdoTaxBlank) ||
					aComponent.equals(rdoTaxUnit))
			{
				return target;
			}
			else if (aComponent.equals(cmbTargetPeriodStartDate))
			{
				return this.getSelectedTaxType();
			}
			else if (aComponent.equals(cmbTargetPeriodEndDate))
			{
				return cmbTargetPeriodStartDate;
			}
			
			return target;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈èâÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAèáï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer êÊì™ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃêÊì™ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getFirstComponent(Container aContainer)
		{
			return target;
		}

		/**
		 * ÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ Component Çï‘ÇµÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÕÅAãtï˚å¸ÇÃÉgÉâÉoÅ[ÉTÉãÇ™ÉâÉbÉvÇ∑ÇÈÇ∆Ç´Ç…ÅAéüÇ…ÉtÉHÅ[ÉJÉXÇ∑ÇÈ Component ÇîªíËÇ∑ÇÈÇΩÇﬂÇ…égópÇµÇ‹Ç∑ÅB
		 * @param aContainer aContainer - ç≈å„ÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃç≈å„ÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getLastComponent(Container aContainer)
		{
			return cmbTargetPeriodEndDate;
		}

		/**
		 * ÉtÉHÅ[ÉJÉXÇê›íËÇ∑ÇÈÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * aContainer ÇÉãÅ[ÉgÇ∆Ç∑ÇÈÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇ™êVÇµÇ≠äJénÇ≥ÇÍÇΩÇ∆Ç´Ç…ÅAÇ±ÇÃÉRÉìÉ|Å[ÉlÉìÉgÇ…ç≈èâÇ…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇ‹Ç∑ÅB
		 * @param aContainer ÉfÉtÉHÉãÉgÇÃ Component Çï‘Ç∑ÉtÉHÅ[ÉJÉXÉTÉCÉNÉãÇÃÉãÅ[ÉgÇ‹ÇΩÇÕÉtÉHÅ[ÉJÉXÉgÉâÉoÅ[ÉTÉãÉ|ÉäÉVÅ[ÉvÉçÉoÉCÉ_
		 * @return aContainer ÇÃÉgÉâÉoÅ[ÉTÉãÉTÉCÉNÉãÇÃÉfÉtÉHÉãÉgÇÃ ComponetÅAÇ‹ÇΩÇÕìKêÿÇ» Component Ç™å©Ç¬Ç©ÇÁÇ»Ç¢èÍçáÇÕ null
		 */
		public Component getDefaultComponent(Container aContainer)
		{
			return target;
		}
		
		/**
		 * ÉEÉBÉìÉhÉEÇ™ç≈èâÇ…ï\é¶Ç≥ÇÍÇΩÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * show() Ç‹ÇΩÇÕ setVisible(true) ÇÃåƒÇ—èoÇµÇ≈àÍìxÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆ÅA
		 * èâä˙âªÉRÉìÉ|Å[ÉlÉìÉgÇÕÇªÇÍà»ç~égópÇ≥ÇÍÇ‹ÇπÇÒÅB
		 * àÍìxï ÇÃÉEÉBÉìÉhÉEÇ…à⁄Ç¡ÇΩÉtÉHÅ[ÉJÉXÇ™çƒÇ—ê›íËÇ≥ÇÍÇΩèÍçáÅA
		 * Ç‹ÇΩÇÕÅAàÍìxîÒï\é¶èÛë‘Ç…Ç»Ç¡ÇΩÉEÉBÉìÉhÉEÇ™çƒÇ—ï\é¶Ç≥ÇÍÇΩèÍçáÇÕÅA
		 * ÇªÇÃÉEÉBÉìÉhÉEÇÃç≈å„Ç…ÉtÉHÅ[ÉJÉXÇ™ê›íËÇ≥ÇÍÇΩÉRÉìÉ|Å[ÉlÉìÉgÇ™ÉtÉHÅ[ÉJÉXèäóLé“Ç…Ç»ÇËÇ‹Ç∑ÅB
		 * Ç±ÇÃÉÅÉ\ÉbÉhÇÃÉfÉtÉHÉãÉgé¿ëïÇ≈ÇÕÉfÉtÉHÉãÉgÉRÉìÉ|Å[ÉlÉìÉgÇï‘ÇµÇ‹Ç∑ÅB
		 * @param window èâä˙ÉRÉìÉ|Å[ÉlÉìÉgÇ™ï‘Ç≥ÇÍÇÈÉEÉBÉìÉhÉE
		 * @return ç≈èâÇ…ÉEÉBÉìÉhÉEÇ™ï\é¶Ç≥ÇÍÇÈÇ∆Ç´Ç…ÉtÉHÅ[ÉJÉXê›íËÇ≥ÇÍÇÈÉRÉìÉ|Å[ÉlÉìÉgÅBìKêÿÇ»ÉRÉìÉ|Å[ÉlÉìÉgÇ™Ç»Ç¢èÍçáÇÕ null
		 */
		public Component getInitialComponent(Window window)
		{
			return target;
		}
		
                /**
                 * ëIëíÜÇÃê≈ãÊï™Çï‘ÇµÇ‹Ç∑ÅB
                 */
		private Component getSelectedTaxType()
		{
			if(rdoTaxUnit.isSelected())
			{
				return	rdoTaxUnit;
			}
			
			return	rdoTaxBlank;
		}
	}

    private void print2() {

        ReportLogic logic = new ReportLogic();
        ReportParameterBean paramBean = new ReportParameterBean();
        paramBean.setMainReportType(ReportParameterBean.MAIN_REPORT_STAFF);

        //ÉOÉãÅ[Év
        if(target.getSelectedItem() instanceof MstGroup) {
            MstGroup	mg	=	(MstGroup)target.getSelectedItem();
            paramBean.setTargetName(mg.getGroupName());
            paramBean.setShopIDList(mg.getShopIDListAll());
        }
        //ìXï‹
        else if(target.getSelectedItem() instanceof MstShop) {
            MstShop		ms	=	(MstShop)target.getSelectedItem();
            paramBean.setTargetName(ms.getShopName());
            paramBean.setShopIDList(ms.getShopID().toString());
        }

        //ëŒè€Ç∆Ç»ÇÈìXï‹Ç™ë∂ç›ÇµÇ»Ç¢èÍçá
        if(paramBean.getShopIDList().equals("")) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        //ê≈ãÊï™
        if(this.rdoTaxBlank.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_BLANK);	// ê≈ãÊï™(ê≈î≤Ç´)
        } else if(this.rdoTaxUnit.isSelected()) {
            paramBean.setTaxType(ReportParameterBean.TAX_TYPE_UNIT);	// ê≈ãÊï™(ê≈çûÇ›)
        }

        //äÑà¯ÇÃãÊï™ÇÃê›íË
        Integer discountType = SystemInfo.getAccountSetting().getDiscountType();
        paramBean.setDiscountType(discountType);

        //ëŒè€ä˙ä‘
        paramBean.setTargetStartDate(this.cmbTargetPeriodStartDate1.getDateStr());
        paramBean.setTargetEndDate(this.cmbTargetPeriodEndDate1.getDateStr());
        paramBean.setTargetStartDateObj(this.cmbTargetPeriodStartDate1.getDate());
        paramBean.setTargetEndDateObj(this.cmbTargetPeriodEndDate1.getDate());

        Calendar start = Calendar.getInstance();
        Calendar end = Calendar.getInstance();
        start.setTime(this.cmbTargetPeriodStartDate1.getDate());
        end.setTime(this.cmbTargetPeriodEndDate1.getDate());

        if(start.compareTo(end) != 0) {
            //ëŒè€ä˙ä‘Ç™äJénì˙ÅÑèIóπì˙Ç»ÇÁÉGÉâÅ[
            if(start.after(end)) {
                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(MessageUtil.ERROR_INPUT_WRONG, "ëŒè€ä˙ä‘"),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        int customerDivision = rdoKaiin.isSelected() ? 1 : 2;
        //IVS_LVTu start add 2015/06/05 New request #37165
        String lstShopCategoryId = "";
        String lstNameShopCategory = "";
        if(mrsUse.size() >0){
            int count = 0;
            for(MstShopCategory category : mrsUse){
                if(category.getShopCategoryId() != null){
                    lstShopCategoryId += category.getShopCategoryId();
                    lstNameShopCategory += category.getShopClassName();
                    count++;
                    if(count < mrsUse.size()){
                        lstShopCategoryId += ",";
                        lstNameShopCategory += "ÅA";
                    }
                }
            }
        }
        if(!lstShopCategoryId.equals("")){
            paramBean.setCategoryIDList(lstShopCategoryId);
        }else{
            paramBean.setCategoryIDList(null);
        }

        paramBean.setListCategoryName(lstNameShopCategory);
        paramBean.setIsHideCategory(isHideCategory);
        paramBean.setUseShopCategory(useShopCategory);
        //IVS_LVTu end add 2015/06/05 New request #37165
        //èoóÕèàóù
        boolean logicResult = true;
        try {
            //è§ïiï™óﬁç\ê¨î‰
            if(rdoNinzu.isSelected()){
                //êlêî
                logicResult = logic.outStaffReportClassificationRatio2(paramBean, 1, customerDivision);
            } else if (rdoSuryo.isSelected()){
                //êîó 
                logicResult = logic.outStaffReportClassificationRatio2(paramBean, 2, customerDivision);
            }

        } catch (Exception e) {
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(1099),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // ÉGÉâÅ[éû
        if(!logicResult) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(4001),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    //IVS_LVTu start add 2015/06/05 New request #37165
    private void initCategoryWithGroupShop() {
           mrsRef = new MstShopCategorys();
           SimpleMaster sm = new SimpleMaster(
                   "",
                   "mst_shop_category",
                   "shop_category_id",
                   "shop_class_name", 0);

           sm.loadData();
           for (MstData md : sm) {
               if(md != null){
                   MstShopCategory category = new MstShopCategory();
                   category.setShopCategoryId(md.getID());
                   category.setShopClassName(md.getName());
                   category.setDisplaySeq(md.getDisplaySeq());
                   mrsRef.add(category);
               }

           }

       } 

    /**
     * init data for table ã∆ë‘ñº left with muti shop
     */
    private void initCategoryWithMutiShop() {
         mrsRef = new MstShopCategorys();
         MstShop ms = (MstShop)target.getSelectedItem();
         if(ms.getShopID() != null){
            try
            {
                    mscg = new MstShopCategorys();
                    ConnectionWrapper	con	=	SystemInfo.getConnection();

                    mscg.loadByShop(con,ms.getShopID());

                    if(mscg.size() > 0){
                        mrsRef = mscg;
                    }

            }
            catch(SQLException e)
            {

                    SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            }
         }

    }  

    /**
     * change combo and show again two table
     * change combo
     * @param evt 
     */
     private void chargeDataCombo() {   

         mrsRef = new MstShopCategorys();
         mrsUse = new MstShopCategorys();
         //ÉOÉãÅ[Év
         if(target.getSelectedItem() instanceof MstGroup) {
                  displayForDesign(true, 1);
                   useShopCategory = 1;
                  isHideCategory = true;
                  initCategoryWithGroupShop();

         }
         //ìXï‹
         else if(target.getSelectedItem() instanceof MstShop) {
              MstShop ms = (MstShop)target.getSelectedItem();
              if(ms.getUseShopCategory().equals(1)){
                     displayForDesign(false, 1);
                     useShopCategory = 1;
                     isHideCategory = true;
                     initCategoryWithMutiShop();

              }else{

                     displayForDesign(false, 0);
                     useShopCategory = 0;
                     isHideCategory = false;

              }

         }

         this.showItems();
    } 
    public void moveMutiCategory(boolean isSelect) {

        JTable fromTable = (isSelect ? tblReferenceCategoryName : tblSelectCategoryName);

        int index = fromTable.getSelectedRow();
        if (index < 0) return;
        ArrayList<MstShopCategory> tmp = new ArrayList<MstShopCategory>();
        if (isSelect) {
             int[]  selectedIndex = fromTable.getSelectedRows();
            if (selectedIndex.length > 0) {
                for (int i = 0; i < selectedIndex.length; i++) {
                    mrsUse.add(mrsRef.get(selectedIndex[i]));
                    tmp.add(mrsRef.get(selectedIndex[i]));
                }
                mrsRef.removeAll(tmp);
            }
    
        } else {
           
            int[]  selectedIndex = fromTable.getSelectedRows();
            if (selectedIndex.length > 0) {
                for (int i = 0; i < selectedIndex.length; i++) { 
                    mrsRef.add(mrsUse.get(selectedIndex[i]));
                    tmp.add(mrsUse.get(selectedIndex[i]));
                }
                 mrsUse.removeAll(tmp);
            }
           
        }

        this.showItems();
    }
      
    /**
     * move all item
     * @param isSelect 
     */
    public void moveCategoryAll(boolean isSelect) {

        JTable fromTable = (isSelect ? tblReferenceCategoryName : tblSelectCategoryName);

        if (fromTable.getRowCount() == 0) return;

        if (isSelect) {
            for (MstShopCategory mr : mrsRef) mrsUse.add(mr);
            mrsRef.clear();
        } else {
            for (MstShopCategory mr : mrsUse) mrsRef.add(mr);
            mrsUse.clear();
        }

        this.showItems();
    }
      
    /**
     * show data on two table
     */
    private void showItems() {
        this.showItems(mrsRef, tblReferenceCategoryName);
        this.showItems(mrsUse, tblSelectCategoryName);
    } 
    
    /**
     * show data detail on two table
     * @param list
     * @param table 
     */
    private void showItems(ArrayList<MstShopCategory> list, JTable table) {

        Collections.sort(list, new StaffResultGoodsReportPanel.ItemComparator());

        if (table.getCellEditor() != null) table.getCellEditor().stopCellEditing();
        SwingUtil.clearTable(table);
        
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        for (MstShopCategory mr : list) {
            model.addRow(new Object[]{
                mr.getShopClassName()
            });
           
        }
    }
    
    /**
     * control design screen follow combo ëŒè€
     * @param isGroup
     * @param useShopCategory 
     */
    public void displayForDesign(boolean isGroup, Integer useShopCategory){
       
        if(isGroup){
            SwingUtil.clearTable(tblReferenceCategoryName);
            SwingUtil.clearTable(tblSelectCategoryName);
            lblCategory.setVisible(true);
            referenceCategoryLeftScrollPane.setVisible(true);
            tblReferenceCategoryName.setVisible(true);
            selectCategoryRightScrollPane.setVisible(true);
            tblSelectCategoryName.setVisible(true);
            selectAllButton.setVisible(true);
            selectButton.setVisible(true);
            releaseButton.setVisible(true);
            releaseAllButton.setVisible(true);
            jPanel3.setVisible(true);
            if(SystemInfo.getSetteing().isUseShopCategory()) {
                jPanel3.setVisible(true);
            }else {
                jPanel3.setVisible(false);
            }
                     
        }else{
            MstShop ms = (MstShop)target.getSelectedItem();
            if(ms.getUseShopCategory().equals(1)){
                   SwingUtil.clearTable(tblReferenceCategoryName);
                   SwingUtil.clearTable(tblSelectCategoryName);
                   lblCategory.setVisible(true);
                   referenceCategoryLeftScrollPane.setVisible(true);
                   tblReferenceCategoryName.setVisible(true);
                   selectCategoryRightScrollPane.setVisible(true);
                   tblSelectCategoryName.setVisible(true);
                   selectAllButton.setVisible(true);
                   selectButton.setVisible(true);
                   releaseButton.setVisible(true);
                   releaseAllButton.setVisible(true);
                   jPanel3.setVisible(true);

            }else{

                   SwingUtil.clearTable(tblReferenceCategoryName);
                   SwingUtil.clearTable(tblSelectCategoryName);
                   lblCategory.setVisible(false);
                   referenceCategoryLeftScrollPane.setVisible(false);
                   tblReferenceCategoryName.setVisible(false);
                   selectCategoryRightScrollPane.setVisible(false);
                   tblSelectCategoryName.setVisible(false);
                   selectAllButton.setVisible(false);
                   selectButton.setVisible(false);
                   releaseButton.setVisible(false);
                   releaseAllButton.setVisible(false);
                   jPanel3.setVisible(false);

            }
        }

    }
    
    /**
     * compare data
     */
   private class ItemComparator implements java.util.Comparator {
        public int compare(Object s, Object t) {
            return ((MstShopCategory) s).getDisplaySeq()- ((MstShopCategory) t).getDisplaySeq();
	}
   }
   //IVS_LVTu end add 2015/06/05 New request #37165

}
