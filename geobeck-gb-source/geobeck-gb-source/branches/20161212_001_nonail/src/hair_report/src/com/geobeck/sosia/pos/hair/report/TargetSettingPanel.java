/*
 * SearchDataTargetPanel.java
 *
 * Created on 2012/10/30, 9:00
 */
package com.geobeck.sosia.pos.hair.report;

import com.geobeck.sosia.pos.hair.report.beans.DataTargetResultBean;
import com.geobeck.sosia.pos.hair.report.beans.DataTargetStaffNormalBean;
import com.geobeck.sosia.pos.hair.report.beans.SearchTargetResultBean;
import com.geobeck.sosia.pos.hair.report.logic.SearchTargetLogic;
import com.geobeck.sosia.pos.hair.report.util.JPOIApiSaleTransittion;
import com.geobeck.sosia.pos.master.company.*;
import com.geobeck.sosia.pos.system.SystemInfo;
import com.geobeck.swing.*;
import java.awt.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author ivs
 */
public final class TargetSettingPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx {

    private MstShop currShop = new MstShop();
    private boolean isLoad = true;
    public Object Parent;
    //IVS_LVTu start add 2015/11/05 New request #43501
    private Integer[][] arrList = new Integer[31][12];
    //IVS_LVTu end add 2015/11/05 New request #43501
    
    public TargetSettingPanel() {
        initComponents();
        initTableColumn();
        this.setSize(833, 900);
        this.setPath("目標設定");
        this.setTitle("目標設定");

        Color colors[][] = new Color[13][5];
        for (int i = 0; i < 13; i++) {
            for (int j = 0; j <= 4; j++) {
                if (i != 0 && j != 4) {
                    colors[i][j] = Color.WHITE;
                } else {
                    colors[i][j] = Color.BLACK;
                }
            }

        }

        TargetSettingTableCellRenderer.setSelectTableCellRenderer(TargetResultTable);

        currShop = SystemInfo.getCurrentShop();
        init();
        isLoad = false;
        //IVS_LVTu start add 2015/10/19 New request #43501
        addMouseCursorChange();
        btnOutputExcel.setEnabled(true);
        //IVS_LVTu end add 2015/10/19 New request #43501
    }

     public TargetSettingPanel(Object Parent) {
        initComponents();
        initTableColumn();
        this.setSize(833, 900);
        this.setPath("目標設定");
        this.setTitle("目標設定");
        this.Parent = Parent;
        Color colors[][] = new Color[13][5];
        for (int i = 0; i < 13; i++) {
            for (int j = 0; j <= 4; j++) {
                if (i != 0 && j != 4) {
                    colors[i][j] = Color.WHITE;
                } else {
                    colors[i][j] = Color.BLACK;
                }
            }

        }

        TargetSettingTableCellRenderer.setSelectTableCellRenderer(TargetResultTable);

        currShop = SystemInfo.getCurrentShop();
        init();
        isLoad = false;
        //IVS_LVTu start add 2015/10/19 New request #43501
        addMouseCursorChange();
        btnOutputExcel.setEnabled(true);
        //IVS_LVTu end add 2015/10/19 New request #43501
    }
    /*
     * 初期値
     */
    public void init() {

        int nowYear;
        Calendar cal = Calendar.getInstance();
        // 店舗
         cmbShop.addItem(SystemInfo.getGroup());
        SystemInfo.getGroup().addGroupDataToJComboBox(cmbShop, 3);
        if (!SystemInfo.isGroup()) {
            // cmbShop.setSelectedItem(SystemInfo.getCurrentShop());
            //btnRegister.setEnabled(true);
            //店舗選択用コンボボックスの設定
            cmbShop.setSelectedItem(currShop);
        }
        nowYear = cal.get(Calendar.YEAR);
        initYearCombo(cmbTargetYear, nowYear);
        cmbStaff3.addItem(new MstStaff());
        SystemInfo.initStaffComponent(cmbStaff3);
        cmbStaff3.setSelectedIndex(0);
        SearchData();
    }

    /*
     * 表示年度
     */
    private void initYearCombo(final JComboBox cmb, int nowYear) {
        cmb.removeAllItems();

        int y = Calendar.getInstance().get(Calendar.YEAR);
        for (int i = 0; i < 5; i++) {
            cmb.addItem(String.valueOf(y - i));
        }
        
        cmb.setSelectedItem(nowYear);
        cmb.getEditor().getEditorComponent().addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ((JTextField) cmb.getEditor().getEditorComponent()).selectAll();
            }
        });

    }

    public void clearData() {
        DefaultTableModel model = (DefaultTableModel) TargetResultTable.getModel();
        for(int i=0;i<31;i++) {
            for (int j = 1; j <= 12; j++) {
                model.setValueAt(0, i, j);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportTypeGroup = new javax.swing.ButtonGroup();
        taxGroup = new javax.swing.ButtonGroup();
        countGroup = new javax.swing.ButtonGroup();
        customerGroup = new javax.swing.ButtonGroup();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        rdoGroup1 = new javax.swing.ButtonGroup();
        staffLabel3 = new javax.swing.JLabel();
        cmbShop = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        staffLabel4 = new javax.swing.JLabel();
        cmbTargetYear = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        btnSearch = new javax.swing.JButton();
        btnRegister = new javax.swing.JButton();
        mobileMembersScrollPane = new javax.swing.JScrollPane();
        TargetResultTable = new com.geobeck.swing.JTableEx();
        closeButton = new javax.swing.JButton();
        cmbStaff3 = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        lblStaff3 = new javax.swing.JLabel();
        btnOutputExcel = new javax.swing.JButton();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jMenu1.setText("jMenu1");

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("jRadioButtonMenuItem2");

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setFocusCycleRoot(true);

        staffLabel3.setText("店舗名 ");

        //shop.addItem(this.myShop);
        cmbShop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbShopActionPerformed(evt);
            }
        });
        cmbShop.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbShopPropertyChange(evt);
            }
        });

        staffLabel4.setText("表示年度 ");

        //shop.addItem(this.myShop);
        cmbTargetYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTargetYearActionPerformed(evt);
            }
        });

        btnSearch.setIcon(SystemInfo.getImageIcon("/button/common/show_off.jpg"));
        btnSearch.setBorderPainted(false);
        btnSearch.setPressedIcon(SystemInfo.getImageIcon("/button/common/show_on.jpg"));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnRegister.setIcon(SystemInfo.getImageIcon("/button/common/regist_off.jpg"));
        btnRegister.setBorderPainted(false);
        btnRegister.setPressedIcon(SystemInfo.getImageIcon("/button/common/regist_on.jpg"));
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        mobileMembersScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        TargetResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"技術売上", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"商品売上", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"契約売上", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"消化売上",new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"総売上",new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"指名売上", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"技術客数", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"指名客数", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"新規客数", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"紹介数", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"店販客数", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"総客数", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"スタッフ1人当たり売上", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"スタッフ数", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"店販比率", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"次回予約率", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"予約成立率", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"新規再来率（1カ月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"新規再来率（45日）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"新規再来率（2カ月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"新規再来率（3カ月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"新規再来率（4ヵ月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"新規再来率（5か月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"新規再来率（6ヶ月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"既存再来率（1カ月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"既存再来率（45日）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"既存再来率（2カ月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"既存再来率（3カ月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"既存再来率（4ヵ月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"既存再来率（5か月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)},
                {"既存再来率（6ヶ月）", new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0)}

            },
            new String [] {
                "目標", "１月", "２月", "３月", "４月", "５月", "６月", "７月", "８月", "９月", "１０月", "１１月", "１２月"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class,  java.lang.Integer.class,  java.lang.Integer.class,  java.lang.Integer.class,  java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                if(columnIndex==0 || rowIndex==4 ||rowIndex == 11) {
                    return false;
                }
                return true;
            }

        });
        TargetResultTable.setSelectionBackground(new java.awt.Color(255, 210, 142));
        TargetResultTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        TargetResultTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        TargetResultTable.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(TargetResultTable, SystemInfo.getTableHeaderRenderer());
        TargetResultTable.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        //this.initTableColumnWidth();

        TableColumnModel model1 = TargetResultTable.getColumnModel();
        model1.getColumn(0).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(1).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(2).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(3).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(4).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(5).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(6).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(7).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(8).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(9).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(10).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(11).setCellEditor(new IntegerCellEditor(new JTextField()));
        model1.getColumn(12).setCellEditor(new IntegerCellEditor(new JTextField()));
        TargetResultTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TargetResultTableFocusLost(evt);
            }
        });
        TargetResultTable.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                TargetResultTableInputMethodTextChanged(evt);
            }
        });
        TargetResultTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                TargetResultTablePropertyChange(evt);
            }
        });
        TargetResultTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TargetResultTableKeyReleased(evt);
            }
        });
        mobileMembersScrollPane.setViewportView(TargetResultTable);

        closeButton.setIcon(SystemInfo.getImageIcon("/button/common/close_off.jpg"));
        closeButton.setBorderPainted(false);
        closeButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/close_on.jpg"));
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        //shop.addItem(this.myShop);
        cmbStaff3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStaff3ActionPerformed(evt);
            }
        });

        lblStaff3.setText("主担当者");

        btnOutputExcel.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutputExcel.setBorderPainted(false);
        btnOutputExcel.setFocusCycleRoot(true);
        btnOutputExcel.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutputExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutputExcelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(mobileMembersScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 800, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(staffLabel4)
                            .add(staffLabel3))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(cmbTargetYear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 98, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(112, 112, 112)
                                .add(btnSearch, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btnRegister, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btnOutputExcel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(cmbShop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 195, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(lblStaff3)
                                .add(16, 16, 16)
                                .add(cmbStaff3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 195, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(closeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .add(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(staffLabel3)
                        .add(cmbShop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cmbStaff3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(lblStaff3))
                    .add(closeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(btnSearch, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(btnRegister, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(staffLabel4)
                        .add(cmbTargetYear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(btnOutputExcel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(mobileMembersScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 563, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    /*
     * 表示ボタン押下
     */

    private String formatNumberString(Object value) {
        String temp = "";
        if (this.isNumeric(value)) {
            if (this.isDecimal(value)) {
                temp = String.format("%1$,.2f", value);
            } else {
                temp = String.format("%1$,d", value);
            }
        }
        return temp;
    }
    
    private void SearchData(){
        clearData();
        int year = Integer.parseInt(cmbTargetYear.getSelectedItem().toString());
        int shopID = 0;
        SearchTargetResultBean ResultBean = null;
        SearchTargetLogic lg = new SearchTargetLogic();

        if (cmbShop.getSelectedItem() instanceof MstGroup) {
            MstGroup mg = (MstGroup) cmbShop.getSelectedItem();
            shopID = Integer.parseInt(mg.getGroupID().toString());
        } //店舗
        else if (cmbShop.getSelectedItem() instanceof MstShop) {
            MstShop ms = (MstShop) cmbShop.getSelectedItem();
            shopID = Integer.parseInt(ms.getShopID().toString());
        }
        
         MstStaff ms = (MstStaff) cmbStaff3.getSelectedItem();
                
        if(ms.getStaffID()!= null) {
            ResultBean = lg.getDataTargetStaffNormalByShopIdAndStaffIdAndYear(shopID,ms.getStaffID(), year);
        }else {
            ResultBean = lg.getDataTargetResultByShopIdAndYearRapa(shopID, year);
        }
        DefaultTableModel model = (DefaultTableModel) TargetResultTable.getModel();
        Object[] rowData = null;
        ArrayList months = (ArrayList) ResultBean.getMonth();
        ArrayList technics = (ArrayList) ResultBean.getTargetTechnic();
        ArrayList items = (ArrayList) ResultBean.getTargetItem();
        ArrayList course = (ArrayList) ResultBean.getTargetCourse();
        ArrayList targetDigestion = (ArrayList) ResultBean.getTargetDigestion();

        for (int u = 1; u < 13; u++) {
            for (int v = 0; v < 4; v++) {
                model.setValueAt(0, v, u);
            }
        }

        for (int i = 0; i < months.size(); i++) {
            int month = Integer.parseInt(months.get(i).toString());

            switch (month) {
                case 1:
                    model.setValueAt(technics.get(i), 0, 1);
                    model.setValueAt(items.get(i), 1, 1);
                    model.setValueAt(course.get(i), 2, 1);
                    model.setValueAt(targetDigestion.get(i), 3, 1);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
                case 2:
                    model.setValueAt(technics.get(i), 0, 2);
                    model.setValueAt(items.get(i), 1, 2);
                    model.setValueAt(course.get(i), 2, 2);
                    model.setValueAt(targetDigestion.get(i), 3, 2);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
                case 3:
                    model.setValueAt(technics.get(i), 0, 3);
                    model.setValueAt(items.get(i), 1, 3);
                    model.setValueAt(course.get(i), 2, 3);
                    model.setValueAt(targetDigestion.get(i), 3, 3);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
                case 4:
                    model.setValueAt(technics.get(i), 0, 4);
                    model.setValueAt(items.get(i), 1, 4);
                    model.setValueAt(course.get(i), 2, 4);
                    model.setValueAt(targetDigestion.get(i), 3, 4);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
                case 5:
                    model.setValueAt(technics.get(i), 0, 5);
                    model.setValueAt(items.get(i), 1, 5);
                    model.setValueAt(course.get(i), 2, 5);
                    model.setValueAt(targetDigestion.get(i), 3, 5);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
                case 6:
                    model.setValueAt(technics.get(i), 0, 6);
                    model.setValueAt(items.get(i), 1, 6);
                    model.setValueAt(course.get(i), 2, 6);
                    model.setValueAt(targetDigestion.get(i), 3, 6);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
                case 7:
                    model.setValueAt(technics.get(i), 0, 7);
                    model.setValueAt(items.get(i), 1, 7);
                    model.setValueAt(course.get(i), 2, 7);
                    model.setValueAt(targetDigestion.get(i), 3, 7);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
                case 8:
                    model.setValueAt(technics.get(i), 0, 8);
                    model.setValueAt(items.get(i), 1, 8);
                    model.setValueAt(course.get(i), 2, 8);
                    model.setValueAt(targetDigestion.get(i), 3, 8);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
                case 9:
                    model.setValueAt(technics.get(i), 0, 9);
                    model.setValueAt(items.get(i), 1, 9);
                    model.setValueAt(course.get(i), 2, 9);
                    model.setValueAt(targetDigestion.get(i), 3, 9);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
                case 10:
                    model.setValueAt(technics.get(i), 0, 10);
                    model.setValueAt(items.get(i), 1, 10);
                    model.setValueAt(course.get(i), 2, 10);
                    model.setValueAt(targetDigestion.get(i), 3, 10);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
                case 11:
                    model.setValueAt(technics.get(i), 0, 11);
                    model.setValueAt(items.get(i), 1, 11);
                    model.setValueAt(course.get(i), 2, 11);
                    model.setValueAt(targetDigestion.get(i), 3, 11);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
                case 12:
                    model.setValueAt(technics.get(i), 0, 12);
                    model.setValueAt(items.get(i), 1, 12);
                    model.setValueAt(course.get(i), 2, 12);
                    model.setValueAt(targetDigestion.get(i), 3, 12);
                    model.setValueAt(Integer.parseInt(items.get(i).toString())
                            + Integer.parseInt(technics.get(i).toString())
                            + Integer.parseInt(course.get(i).toString())
                            + Integer.parseInt(targetDigestion.get(i).toString()), 4, month);
                    
                    model.setValueAt(ResultBean.getTarget_nomination_value().get(i), 5, month);
                    model.setValueAt(ResultBean.getTarget_technic_num().get(i), 6, month);
                    model.setValueAt(ResultBean.getTarget_nomination_num().get(i), 7, month);
                    model.setValueAt(ResultBean.getTarget_new_num().get(i), 8, month);
                    model.setValueAt(ResultBean.getTarget_introduction_num().get(i), 9, month);
                    model.setValueAt(ResultBean.getTarget_item_num().get(i), 10, month);
                    model.setValueAt(Integer.parseInt(ResultBean.getTarget_technic_num().get(i).toString())
                            +Integer.parseInt(ResultBean.getTarget_item_num().get(i).toString()), 11, month);
                    model.setValueAt(ResultBean.getTarget_staff_per_sales().get(i), 12, month);
                    model.setValueAt(ResultBean.getTarget_staff_num().get(i), 13, month);
                    model.setValueAt(ResultBean.getTarget_item_rate().get(i), 14, month);
                    model.setValueAt(ResultBean.getTarget_next_reserve_rate().get(i), 15, month);
                    model.setValueAt(ResultBean.getTarget_reserve_close_rate().get(i), 16, month);
                    model.setValueAt(ResultBean.getRepert_30_new().get(i), 17, month);
                    model.setValueAt(ResultBean.getRepert_45_new().get(i), 18, month);
                    model.setValueAt(ResultBean.getRepert_60_new().get(i), 19, month);
                    model.setValueAt(ResultBean.getRepert_90_new().get(i), 20, month);
                    model.setValueAt(ResultBean.getRepert_120_new().get(i), 21, month);
                    model.setValueAt(ResultBean.getRepert_150_new().get(i), 22, month);
                    model.setValueAt(ResultBean.getRepert_180_new().get(i), 23, month);
                    model.setValueAt(ResultBean.getRepert_30_fix().get(i), 24, month);
                    model.setValueAt(ResultBean.getRepert_45_fix().get(i), 25, month);
                    model.setValueAt(ResultBean.getRepert_60_fix().get(i), 26, month);
                    model.setValueAt(ResultBean.getRepert_90_fix().get(i), 27, month);
                    model.setValueAt(ResultBean.getRepert_120_fix().get(i), 28, month);
                    model.setValueAt(ResultBean.getRepert_150_fix().get(i), 29, month);
                    model.setValueAt(ResultBean.getRepert_180_fix().get(i), 30, month);
                    
                    break;
            }
        }
        //IVS_LVTu start edit 2015/11/05 New request #43501
        setArrListData();
        
    }
    // set data when table change
    private void setArrListData(){
        for ( int row = 0;row < TargetResultTable.getRowCount();row ++ ) {
            for ( int col = 1 ;col < TargetResultTable.getColumnCount(); col ++) {
                arrList[row][col-1] = Integer.parseInt( TargetResultTable.getValueAt(row, col).toString());
            }
        }
    }
    // check input data
    private boolean checkInputData() {
        for ( int row = 0;row < TargetResultTable.getRowCount();row ++ ) {
            for ( int col = 1 ;col < TargetResultTable.getColumnCount(); col ++) {
                Integer valueTemp = Integer.parseInt( TargetResultTable.getValueAt(row, col).toString());
                if ( !valueTemp.equals(arrList[row][col-1] )) {
                    return false;
                }
            }
        }
        return true;
    }
    //IVS_LVTu end edit 2015/11/05 New request #43501
    
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        SearchData();
        //IVS_LVTu start add 2015/10/19 New request #43501
        btnOutputExcel.setEnabled(true);
        //IVS_LVTu end add 2015/10/19 New request #43501
    }//GEN-LAST:event_btnSearchActionPerformed
    /*
     * 登録ボタンを押下
     */
    private void registData() {
        if (TargetResultTable.getCellEditor() != null) {
            TargetResultTable.getCellEditor().stopCellEditing();
        }

        SearchTargetLogic lg = new SearchTargetLogic();
        DataTargetResultBean bean = null;
        DataTargetStaffNormalBean staffNormalBean = null;
        DefaultTableModel model = (DefaultTableModel) TargetResultTable.getModel();

        boolean flag = true;
        int targetTechnic = 0;
        int targetItem = 0;
        int targetCourse = 0;
        int targetDigestion = 0;
        int target_nomination_value = 0;
        int target_technic_num = 0;
        int target_nomination_num= 0;
        int target_new_num= 0;
        int target_introduction_num= 0;
        int target_item_num= 0;
        int target_staff_per_sales= 0;
        int target_staff_num= 0;
        int target_item_rate= 0;
        int target_next_reserve_rate= 0;
        int target_reserve_close_rate= 0;
        int repert_30_new= 0;
        int repert_45_new= 0;
        int repert_60_new= 0;
        int repert_90_new= 0;
        int repert_120_new= 0;
        int repert_150_new= 0;
        int repert_180_new= 0;
        int repert_30_fix= 0;
        int repert_45_fix= 0;
        int repert_60_fix= 0;
        int repert_90_fix= 0;
        int repert_120_fix= 0;
        int repert_150_fix= 0;
        int repert_180_fix= 0;


        Vector row1 = (Vector) model.getDataVector().get(0);
        Vector row2 = (Vector) model.getDataVector().get(1);
        Vector row3 = (Vector) model.getDataVector().get(2);
        Vector row4 = (Vector) model.getDataVector().get(3);
        
        Vector row5 = (Vector) model.getDataVector().get(5);
        Vector row6 = (Vector) model.getDataVector().get(6);
        Vector row7 = (Vector) model.getDataVector().get(7);
        Vector row8 = (Vector) model.getDataVector().get(8);
        Vector row9 = (Vector) model.getDataVector().get(9);
        Vector row10 = (Vector) model.getDataVector().get(10);
        
        Vector row12 = (Vector) model.getDataVector().get(12);
        Vector row13 = (Vector) model.getDataVector().get(13);
        Vector row14 = (Vector) model.getDataVector().get(14);
        Vector row15 = (Vector) model.getDataVector().get(15);
        Vector row16 = (Vector) model.getDataVector().get(16);
        Vector row17 = (Vector) model.getDataVector().get(17);
        Vector row18= (Vector) model.getDataVector().get(18);
        Vector row19 = (Vector) model.getDataVector().get(19);
        Vector row20 = (Vector) model.getDataVector().get(20);
        Vector row21 = (Vector) model.getDataVector().get(21);
        Vector row22 = (Vector) model.getDataVector().get(22);
        Vector row23 = (Vector) model.getDataVector().get(23);
        Vector row24 = (Vector) model.getDataVector().get(24);
        Vector row25= (Vector) model.getDataVector().get(25);
        Vector row26= (Vector) model.getDataVector().get(26);
        Vector row27= (Vector) model.getDataVector().get(27);
        Vector row28= (Vector) model.getDataVector().get(28);
        Vector row29 = (Vector) model.getDataVector().get(29);
        Vector row30= (Vector) model.getDataVector().get(30);
       
        try {
            for (int j = 1; j <= 12; j++) {

                bean = new DataTargetResultBean();
                staffNormalBean = new DataTargetStaffNormalBean();
                
                if (cmbShop.getSelectedItem() instanceof MstGroup) {
                    MstGroup mg = (MstGroup) cmbShop.getSelectedItem();
                    bean.setShopId(mg.getGroupID());
                    staffNormalBean.setShopId(mg.getGroupID());
                } //店舗
                else if (cmbShop.getSelectedItem() instanceof MstShop) {
                    MstShop ms = (MstShop) cmbShop.getSelectedItem();
                    bean.setShopId(ms.getShopID());
                    staffNormalBean.setShopId(ms.getShopID());
                }
                bean.setMonth(j);
                staffNormalBean.setMonth(j);
                
                bean.setYear(Integer.parseInt(cmbTargetYear.getSelectedItem().toString()));
                staffNormalBean.setYear(Integer.parseInt(cmbTargetYear.getSelectedItem().toString()));
 
                try {

                    targetTechnic = Integer.parseInt(row1.elementAt(j).toString());

                } catch (Exception e) {
                }
                try {

                    targetItem = Integer.parseInt(row2.elementAt(j).toString());

                } catch (Exception e) {
                }
                try {

                    targetCourse = Integer.parseInt(row3.elementAt(j).toString());

                } catch (Exception e) {
                }
                try {

                    targetDigestion = Integer.parseInt(row4.elementAt(j).toString());

                } catch (Exception e) {
                }
                
                target_nomination_value = Integer.parseInt(row5.elementAt(j).toString());
                target_technic_num = Integer.parseInt(row6.elementAt(j).toString());
                target_nomination_num= Integer.parseInt(row7.elementAt(j).toString());
                target_new_num=Integer.parseInt(row8.elementAt(j).toString());
                target_introduction_num=Integer.parseInt(row9.elementAt(j).toString());
                target_item_num=Integer.parseInt(row10.elementAt(j).toString());
                
                target_staff_per_sales=Integer.parseInt(row12.elementAt(j).toString());
                target_staff_num=Integer.parseInt(row13.elementAt(j).toString());
                target_item_rate=Integer.parseInt(row14.elementAt(j).toString());
                target_next_reserve_rate=Integer.parseInt(row15.elementAt(j).toString());
                target_reserve_close_rate=Integer.parseInt(row16.elementAt(j).toString());
                repert_30_new=Integer.parseInt(row17.elementAt(j).toString());
                repert_45_new=Integer.parseInt(row18.elementAt(j).toString());
                repert_60_new=Integer.parseInt(row19.elementAt(j).toString());
                repert_90_new=Integer.parseInt(row20.elementAt(j).toString());
                repert_120_new=Integer.parseInt(row21.elementAt(j).toString());
                repert_150_new=Integer.parseInt(row22.elementAt(j).toString());
                repert_180_new=Integer.parseInt(row23.elementAt(j).toString());
                repert_30_fix=Integer.parseInt(row24.elementAt(j).toString());
                repert_45_fix=Integer.parseInt(row25.elementAt(j).toString());
                repert_60_fix=Integer.parseInt(row26.elementAt(j).toString());
                repert_90_fix=Integer.parseInt(row27.elementAt(j).toString());
                repert_120_fix=Integer.parseInt(row28.elementAt(j).toString());
                repert_150_fix=Integer.parseInt(row29.elementAt(j).toString());
                repert_180_fix=Integer.parseInt(row30.elementAt(j).toString());
                
                bean.setTarget_nomination_value(target_nomination_value);
                bean.setTargetTechnic(targetTechnic);
                bean.setTargetItem(targetItem);
                bean.setTargetCourse(targetCourse);
                bean.setTarget_technic_num(target_technic_num);
                bean.setTarget_nomination_num(target_nomination_num);
                bean.setTarget_new_num(target_new_num);
                bean.setTarget_introduction_num(target_introduction_num);
                bean.setTarget_item_num(target_item_num);
                bean.setTarget_staff_per_sales(target_staff_per_sales);
                bean.setTarget_staff_num(target_staff_num);
                bean.setTarget_item_rate(target_item_rate);
                bean.setTarget_next_reserve_rate(target_next_reserve_rate);
                bean.setTarget_reserve_close_rate(target_reserve_close_rate);
                bean.setRepert_30_new(repert_30_new);
                bean.setRepert_45_new(repert_45_new);
                bean.setRepert_60_new(repert_60_new);
                bean.setRepert_90_new(repert_90_new);
                bean.setRepert_120_new(repert_120_new);
                bean.setRepert_150_new(repert_150_new);
                bean.setRepert_180_new(repert_180_new);
                bean.setRepert_30_fix(repert_30_fix);
                bean.setRepert_45_fix(repert_45_fix);
                bean.setRepert_60_fix(repert_60_fix);
                bean.setRepert_90_fix(repert_90_fix);
                bean.setRepert_120_fix(repert_120_fix);
                bean.setRepert_150_fix(repert_150_fix);
                bean.setRepert_180_fix(repert_180_fix);
                
                
                staffNormalBean.setTarget_nomination_value(target_nomination_value);
                staffNormalBean.setTargetTechnic(targetTechnic);
                staffNormalBean.setTargetItem(targetItem);
                staffNormalBean.setTargetCourse(targetCourse);
                staffNormalBean.setTarget_technic_num(target_technic_num);
                staffNormalBean.setTarget_nomination_num(target_nomination_num);
                staffNormalBean.setTarget_new_num(target_new_num);
                staffNormalBean.setTarget_introduction_num(target_introduction_num);
                staffNormalBean.setTarget_item_num(target_item_num);
                staffNormalBean.setTarget_staff_per_sales(target_staff_per_sales);
                staffNormalBean.setTarget_staff_num(target_staff_num);
                staffNormalBean.setTarget_item_rate(target_item_rate);
                staffNormalBean.setTarget_next_reserve_rate(target_next_reserve_rate);
                staffNormalBean.setTarget_reserve_close_rate(target_reserve_close_rate);
                staffNormalBean.setRepert_30_new(repert_30_new);
                staffNormalBean.setRepert_45_new(repert_45_new);
                staffNormalBean.setRepert_60_new(repert_60_new);
                staffNormalBean.setRepert_90_new(repert_90_new);
                staffNormalBean.setRepert_120_new(repert_120_new);
                staffNormalBean.setRepert_150_new(repert_150_new);
                staffNormalBean.setRepert_180_new(repert_180_new);
                staffNormalBean.setRepert_30_fix(repert_30_fix);
                staffNormalBean.setRepert_45_fix(repert_45_fix);
                staffNormalBean.setRepert_60_fix(repert_60_fix);
                staffNormalBean.setRepert_90_fix(repert_90_fix);
                staffNormalBean.setRepert_120_fix(repert_120_fix);
                staffNormalBean.setRepert_150_fix(repert_150_fix);
                staffNormalBean.setRepert_180_fix(repert_180_fix);
                
                
                MstStaff ms = (MstStaff) cmbStaff3.getSelectedItem();
                
                if(ms.getStaffID()!= null) {
                    try {

                        staffNormalBean.setStaff_id(ms.getStaffID());

                    }catch (Exception e) {

                    }
                    if (!lg.registDataTargetStaffNormal(staffNormalBean)) {
                        flag = false;
                        break;
                    }
                }else { 
                    if (!lg.registDataTargetResult(bean)) {
                        flag = false;
                        break;
                    }
                }
            }
            if (flag) {
                MessageDialog.showMessageDialog(this,
                        "登録しました。",
                        this.getTitle(),
                        JOptionPane.INFORMATION_MESSAGE);
            } else {
                MessageDialog.showMessageDialog(this,
                        "登録に失敗しました。",
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
        }
        //IVS_LVTu start add 2015/11/05 New request #43501
        setArrListData();
        //IVS_LVTu end add 2015/11/05 New request #43501
    }
    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        registData();
    }//GEN-LAST:event_btnRegisterActionPerformed

    private boolean isNumeric(Object value) {
        if (value instanceof Integer
                || value instanceof Byte
                || value instanceof Short
                || value instanceof Long
                || value instanceof Float
                || value instanceof Double) {
            return true;
        } else {
            return false;
        }
    }

    private boolean isDecimal(Object value) {
        if (value instanceof Float
                || value instanceof Double) {
            return true;
        } else {
            return false;
        }
    }
    private void TargetResultTableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TargetResultTableFocusLost
    }//GEN-LAST:event_TargetResultTableFocusLost

    private void TargetResultTableInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_TargetResultTableInputMethodTextChanged
    }//GEN-LAST:event_TargetResultTableInputMethodTextChanged

    private void TargetResultTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_TargetResultTablePropertyChange
        DefaultTableModel model = (DefaultTableModel) TargetResultTable.getModel();
        Vector row1 = (Vector) model.getDataVector().get(0);
        Vector row2 = (Vector) model.getDataVector().get(1);
        Vector row3 = (Vector) model.getDataVector().get(2);
        Vector row4 = (Vector) model.getDataVector().get(3);
        Vector row7 = (Vector) model.getDataVector().get(6);
        Vector row11 = (Vector) model.getDataVector().get(10);
        for (int j = 1; j <= 12; j++) {
            //総売上
            model.setValueAt(Integer.parseInt(row1.elementAt(j).toString())
                    + Integer.parseInt(row2.elementAt(j).toString())
                    + Integer.parseInt(row3.elementAt(j).toString())
                    + Integer.parseInt(row4.elementAt(j).toString()), 4, j);
            //総客数
             model.setValueAt(Integer.parseInt(row7.elementAt(j).toString())
                    + Integer.parseInt(row11.elementAt(j).toString())
                    , 11, j);
        }
        
        
    }//GEN-LAST:event_TargetResultTablePropertyChange

    private void TargetResultTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TargetResultTableKeyReleased
    }//GEN-LAST:event_TargetResultTableKeyReleased

    private void cmbTargetYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTargetYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTargetYearActionPerformed

    private void cmbShopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbShopActionPerformed
        if(isLoad){
            return;
        }
      //  btnRegister.setEnabled(true);
        boolean flag = false;
        Object obj = new Object();
        obj = cmbShop.getSelectedItem();
        if (SystemInfo.getCurrentShop().getShopID() != 0) {
            
            if (obj instanceof MstGroup) {
                MstGroup mg = (MstGroup) cmbShop.getSelectedItem();
                String[] a = mg.getShopIDListAll().split(",");
                for (int i = 0; i < a.length; i++) {
                    if( a[i]== "" ) continue;
                    if (currShop.getShopID() == Integer.parseInt(a[i].trim())) {
                        flag = true;
                    } 
                }
            }
            if (obj instanceof MstShop) {
                MstShop shop = new MstShop();
                shop = (MstShop) obj;
                if (shop.getShopID() == currShop.getShopID()) {
                  flag = true;
                }
            }
        }
        else {
            flag = true;
        }
        btnRegister.setEnabled(flag);
        //IVS_LVTu start add 2015/10/19 New request #43501
        btnOutputExcel.setEnabled(false);
        //IVS_LVTu end add 2015/10/19 New request #43501
        
       
    }//GEN-LAST:event_cmbShopActionPerformed

    private void cmbShopPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbShopPropertyChange
        // TODO add your handling code here:
//        MstShop shop = SystemInfo.getCurrentShop();
//        MstShop shop1 = (MstShop)cmbShop.getSelectedItem();
//        
//        if(cmbShop.getSelectedItem().equals(shop.getShopName().toString()))     {
//            btnRegister.setEnabled(true);
//        }
//        
//        else if(shop1.getShopID()== 0)
//        {
//            btnRegister.setEnabled(true);
//        }
//        else
//        {
//            btnRegister.setEnabled(false);
//        }
    }//GEN-LAST:event_cmbShopPropertyChange
    
     public void dispose() {
        if (this.isDialog()) {
            ((JDialog) this.getParent().getParent().getParent().getParent()).dispose();
        }
    }
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
                //IVS_LVTu start add 2015/11/05 New request #43501
                if (TargetResultTable.getCellEditor() != null) {
                    TargetResultTable.getCellEditor().stopCellEditing();
                }
                if ( !checkInputData()) {
                    int selectedValue = MessageDialog.showYesNoDialog(this, "内容が変更されていますが、保存してから他の画面へ移動しますか？", this.getTitle(), JOptionPane.QUESTION_MESSAGE);
                    if ( selectedValue  == 0) {
                        registData();
                    }
                }
                //IVS_LVTu end add 2015/11/05 New request #43501
                this.showOpener();
                if(Parent instanceof StoreReportPanel ) {
                    StoreReportPanel pnl = (StoreReportPanel)Parent;
                    parentFrame.changeContents(pnl);
                }else if(Parent instanceof StaffShopRankingPanel){
                    StaffShopRankingPanel pnl =  (StaffShopRankingPanel)Parent;
                     parentFrame.changeContents(pnl);
                // 20161225 add start オリジナル帳票出力画面
                } else if (Parent instanceof OriginalReportPanel) {
                    OriginalReportPanel pnl =  (OriginalReportPanel)Parent;
                     parentFrame.changeContents(pnl);
                }
                // 20161225 add end オリジナル帳票出力画面
                System.gc();		
       
    }//GEN-LAST:event_closeButtonActionPerformed

    private void btnOutputExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutputExcelActionPerformed
        //IVS_LVTu start add 2015/10/19 New request #43501
        if (TargetResultTable.getCellEditor() != null) {
            TargetResultTable.getCellEditor().stopCellEditing();
        }
        if ( !checkInputData()) {
            int selectedValue = MessageDialog.showYesNoDialog(this, "内容が変更されていますが、保存してからEXCEL出力しますか？", this.getTitle(), JOptionPane.QUESTION_MESSAGE);
            if ( selectedValue  == 0) {
                registData();
            }else {
                SearchData();
                btnOutputExcel.setEnabled(true);
                return;
            }
        }
        
        int year = Integer.parseInt(cmbTargetYear.getSelectedItem().toString());
        String shopName = "";
        String staffName = "";

        if (cmbShop.getSelectedItem() instanceof MstGroup) {
            MstGroup mg = (MstGroup) cmbShop.getSelectedItem();
            shopName = mg.getGroupName();
        } //店舗
        else if (cmbShop.getSelectedItem() instanceof MstShop) {
            MstShop ms = (MstShop) cmbShop.getSelectedItem();
            shopName = ms.getShopName();
        }
        
         MstStaff ms = (MstStaff) cmbStaff3.getSelectedItem();
                
        if(ms.getStaffID()!= null) {
            staffName = ms.getFullStaffName();
        }
        
        btnOutputExcel.setCursor(null);
        try{
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            
            JPOIApiSaleTransittion jx = new JPOIApiSaleTransittion("目標設定一覧");
                jx.setTemplateFile("/reports/目標設定一覧.xls");
                jx.setCellValue(2, 3, shopName);
                jx.setCellValue(2, 4, year + "年度");
                jx.setCellValue(2, 5, staffName);
                int rowIndex = 8;
                for ( int row = 0;row < TargetResultTable.getRowCount();row ++ ) {
                    //sum Excel
                    if ( row == 4 || row == 11) {
                        rowIndex ++;
                        continue;                        
                    }
                    for ( int col = 1 ;col < TargetResultTable.getColumnCount(); col ++) {
                        if ( row < 17 ){
                            jx.setCellValue(col + 1, rowIndex, Integer.parseInt(TargetResultTable.getValueAt(row, col).toString()));
                        }else {
                            // percen
                            jx.setCellValue(col + 1, rowIndex, Double.parseDouble(TargetResultTable.getValueAt(row, col).toString())/100);
                        }
                    }
                    rowIndex ++;
                }
                 
                jx.setFormularActive();
               jx.openWorkbook();
           
               return;
                 
            }
            catch(Exception ex){
                ex.printStackTrace();
            }
            finally
            {
                 setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));    
            }
                
    }//GEN-LAST:event_btnOutputExcelActionPerformed

    private void cmbStaff3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStaff3ActionPerformed
        btnOutputExcel.setEnabled(false);
    }//GEN-LAST:event_cmbStaff3ActionPerformed

    private void addMouseCursorChange() {
        SystemInfo.addMouseCursorChange(btnSearch);
        SystemInfo.addMouseCursorChange(btnRegister);
        SystemInfo.addMouseCursorChange(btnOutputExcel);
        SystemInfo.addMouseCursorChange(closeButton);
    }
    //IVS_LVTu end add 2015/10/19 New request #43501
    /**
     * 明細の列を初期化する。
     */
    private void initTableColumn() {
        //列の幅を設定する。
        TargetResultTable.getColumnModel().getColumn(0).setPreferredWidth(150);
        TargetResultTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        TargetResultTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        TargetResultTable.getColumnModel().getColumn(3).setPreferredWidth(100);
        TargetResultTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        TargetResultTable.getColumnModel().getColumn(5).setPreferredWidth(100);
        TargetResultTable.getColumnModel().getColumn(6).setPreferredWidth(100);
        TargetResultTable.getColumnModel().getColumn(7).setPreferredWidth(100);
        TargetResultTable.getColumnModel().getColumn(8).setPreferredWidth(100);
        TargetResultTable.getColumnModel().getColumn(9).setPreferredWidth(100);
        TargetResultTable.getColumnModel().getColumn(10).setPreferredWidth(100);
        TargetResultTable.getColumnModel().getColumn(11).setPreferredWidth(100);
        TargetResultTable.getColumnModel().getColumn(12).setPreferredWidth(100);


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.geobeck.swing.JTableEx TargetResultTable;
    private javax.swing.JButton btnOutputExcel;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton closeButton;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel cmbShop;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel cmbStaff3;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel cmbTargetYear;
    private javax.swing.ButtonGroup countGroup;
    private javax.swing.ButtonGroup customerGroup;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JLabel lblStaff3;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JScrollPane mobileMembersScrollPane;
    private javax.swing.ButtonGroup rdoGroup1;
    private javax.swing.ButtonGroup reportTypeGroup;
    private javax.swing.JLabel staffLabel3;
    private javax.swing.JLabel staffLabel4;
    private javax.swing.ButtonGroup taxGroup;
    // End of variables declaration//GEN-END:variables
}
