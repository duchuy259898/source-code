annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
application.args=
application.title=SOSIA POS csv
application.vendor=geobeck
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/SOSIA_POS_csv.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.csv-src=../../src/csv/src
file.reference.SOSIA_POS_images.jar=../../libs/SOSIA_POS_images.jar
file.reference.SOSIA_POS_master.jar=../../libs/SOSIA_POS_master.jar
file.reference.SOSIA_POS_swing.jar=../../libs/SOSIA_POS_swing.jar
file.reference.SOSIA_POS_system.jar=../../libs/SOSIA_POS_system.jar
file.reference.SOSIA_POS_util.jar=../../libs/SOSIA_POS_util.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=false
jar.index=${jnlp.enabled}
javac.classpath=\
    ${libs.swing-layout.classpath}:\
    ${libs.ICU.classpath}:\
    ${libs.GeobeckSwing.classpath}:\
    ${libs.GeobeckSQL.classpath}:\
    ${libs.GeobeckUtil.classpath}:\
    ${libs.CSV.classpath}:\
    ${file.reference.SOSIA_POS_images.jar}:\
    ${file.reference.SOSIA_POS_system.jar}:\
    ${file.reference.SOSIA_POS_util.jar}:\
    ${file.reference.SOSIA_POS_swing.jar}:\
    ${file.reference.SOSIA_POS_master.jar}
# Space-separated list of extra javac options
javac.compilerargs=-Xlint:unchecked
javac.deprecation=true
javac.processorpath=\
    ${javac.classpath}
javac.source=1.5
javac.target=1.5
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
# Property libs.ICU.classpath is set here just to make sharing of project simpler.
# The library definition has always preference over this property.
libs.ICU.classpath=../../../../../software/java/icu/icu4j-3_6.jar
main.class=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
no.dependencies=true
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
src.dir=${file.reference.csv-src}
