/*
 * SosiaGearDialog.java
 *
 * Created on 2007/10/18, 10:20
 */

package com.geobeck.sosia.pos.basicinfo.customer;

import java.awt.*;
import java.util.logging.*;
import java.sql.*;
import javax.swing.*;
import javax.swing.text.*;
import com.geobeck.sql.*;
import com.geobeck.swing.*;
import com.geobeck.util.*;
import com.geobeck.sosia.pos.master.customer.*;
import com.geobeck.sosia.pos.swing.*;
import com.geobeck.sosia.pos.util.*;
import com.geobeck.sosia.pos.system.*;
import com.geobeck.sosia.pos.util.NetworkUtil;
import com.geobeck.sosia.pos.customer.*;

/**
 *
 * @author  kanemoto
 */
public class SosiaGearDialog extends AbstractImagePanelEx  {

	private String GET_SOSIA_CUSTOMER_URL = "srv/customer/";
	
	/** 顧客データ */
	private MstCustomer customer = null;
	/** 初期SOSIA連動データ */
	private	MstSosiaCustomer initMSC = null;
	
	private MobileMemberList mobileMemberList = null;
        
	/**
	 * 伝票入力画面用FocusTraversalPolicy
	 */
	private	SosiaGearDialogFocusTraversalPolicy	ftp	= new SosiaGearDialogFocusTraversalPolicy();
	
	/** Creates new form SosiaGearDialog */
	public SosiaGearDialog( MstCustomer customer ) {
		this.customer = customer;
		initComponents();
	    this.setSize(400, 230);
	    this.init();
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        sex = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        sosiaNo = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)sosiaNo.getDocument()).setDocumentFilter(
            new CustomFilter(15, CustomFilter.ALPHAMERIC));
        searchCustomerButton = new javax.swing.JButton();
        sosiaName = new com.geobeck.swing.JFormattedTextFieldEx();
        sosiaBirthday = new com.geobeck.swing.JFormattedTextFieldEx();
        sosiaPoint = new com.geobeck.swing.JFormattedTextFieldEx();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        customerName1 = new com.geobeck.swing.JFormattedTextFieldEx();
        customerName2 = new com.geobeck.swing.JFormattedTextFieldEx();
        jLabel3 = new javax.swing.JLabel();
        customerNo = new com.geobeck.swing.JFormattedTextFieldEx();
        jPanel3 = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();
        registButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();

        setFocusTraversalPolicy(getFocusTraversalPolicy());
        setFocusTraversalPolicyProvider(true);
        jPanel1.setOpaque(false);
        jLabel4.setText("SOSIA\u4f1a\u54e1ID");

        sosiaNo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        sosiaNo.setColumns(15);
        sosiaNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sosiaNoKeyReleased(evt);
            }
        });

        searchCustomerButton.setIcon(SystemInfo.getImageIcon("/button/search/search_customer_off.jpg"));
        searchCustomerButton.setBorderPainted(false);
        searchCustomerButton.setContentAreaFilled(false);
        searchCustomerButton.setPressedIcon(SystemInfo.getImageIcon("/button/search/search_customer_on.jpg"));
        searchCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustomerButtonActionPerformed(evt);
            }
        });

        sosiaName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        sosiaName.setEditable(false);
        sosiaName.setFocusable(false);
        sosiaName.setInputKanji(true);

        sosiaBirthday.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        sosiaBirthday.setEditable(false);
        sosiaBirthday.setFocusable(false);
        sosiaBirthday.setInputKanji(true);

        sosiaPoint.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        sosiaPoint.setEditable(false);
        sosiaPoint.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sosiaPoint.setFocusable(false);
        sosiaPoint.setInputKanji(true);

        jLabel5.setText("\u4f1a\u54e1\u540d");

        jLabel6.setText("\u8a95\u751f\u65e5");

        jLabel7.setText("\u30dd\u30a4\u30f3\u30c8");

        jLabel8.setText("\u6027\u5225");

        male.setText("\u7537");
        male.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        male.setEnabled(false);
        male.setMargin(new java.awt.Insets(0, 0, 0, 0));
        male.setOpaque(false);

        female.setText("\u5973");
        female.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        female.setEnabled(false);
        female.setMargin(new java.awt.Insets(0, 0, 0, 0));
        female.setOpaque(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sosiaBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sosiaName, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sosiaNo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(male, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(female)
                                .addGap(12, 12, 12))
                            .addComponent(sosiaPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(59, 59, 59))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sosiaNo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sosiaName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(male, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(female, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sosiaPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sosiaBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setOpaque(false);
        jLabel2.setText("\u9867\u5ba2No.");

        customerName1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        customerName1.setEditable(false);
        customerName1.setFocusable(false);
        customerName1.setInputKanji(true);

        customerName2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        customerName2.setEditable(false);
        customerName2.setFocusable(false);
        customerName2.setInputKanji(true);

        jLabel3.setText("\u9867\u5ba2\u540d");

        customerNo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        customerNo.setEditable(false);
        customerNo.setFocusable(false);
        customerNo.setInputKanji(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(customerName1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customerName2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customerNo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customerName1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerName2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerNo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setOpaque(false);
        closeButton.setIcon(SystemInfo.getImageIcon("/button/common/close_off.jpg"));
        closeButton.setBorderPainted(false);
        closeButton.setContentAreaFilled(false);
        closeButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/close_on.jpg"));
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        registButton.setIcon(SystemInfo.getImageIcon("/button/common/apply_off.jpg"));
        registButton.setBorderPainted(false);
        registButton.setContentAreaFilled(false);
        registButton.setEnabled(false);
        registButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/apply_on.jpg"));
        registButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registButtonActionPerformed(evt);
            }
        });

        clearButton.setIcon(SystemInfo.getImageIcon("/button/common/clear_off.jpg"));
        clearButton.setBorderPainted(false);
        clearButton.setContentAreaFilled(false);
        clearButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/clear_on.jpg"));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(registButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(registButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
	this.clear();
    }//GEN-LAST:event_clearButtonActionPerformed

	private void sosiaNoKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_sosiaNoKeyReleased
	{//GEN-HEADEREND:event_sosiaNoKeyReleased
		if(evt.getKeyCode() == evt.VK_ENTER)
		{
			searchSosiaCustomerData();
		}
	}//GEN-LAST:event_sosiaNoKeyReleased

	/**
	 * 連動をキャンセルしてダイアログを閉じる
	 */
	private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
		customer.setSosiaCustomer( initMSC );
		this.closePanel();
	}//GEN-LAST:event_closeButtonActionPerformed

	/**
	 * 連動データをセットして終了する
	 */
	private void registButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registButtonActionPerformed
		this.regist();
		this.closePanel();
	}//GEN-LAST:event_registButtonActionPerformed

	/**
	 * SOSIAIDを登録し、会員情報を取得する
	 */
	private void searchCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustomerButtonActionPerformed
		searchSosiaCustomerData();
	}//GEN-LAST:event_searchCustomerButtonActionPerformed
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton closeButton;
    private com.geobeck.swing.JFormattedTextFieldEx customerName1;
    private com.geobeck.swing.JFormattedTextFieldEx customerName2;
    private com.geobeck.swing.JFormattedTextFieldEx customerNo;
    private javax.swing.JRadioButton female;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton male;
    private javax.swing.JButton registButton;
    private javax.swing.JButton searchCustomerButton;
    private javax.swing.ButtonGroup sex;
    private com.geobeck.swing.JFormattedTextFieldEx sosiaBirthday;
    private com.geobeck.swing.JFormattedTextFieldEx sosiaName;
    private com.geobeck.swing.JFormattedTextFieldEx sosiaNo;
    private com.geobeck.swing.JFormattedTextFieldEx sosiaPoint;
    // End of variables declaration//GEN-END:variables
	
	/**
	 * ダイアログを初期化する
	 */
	private void init()
	{
		// SOSIA連動データを保持
		initMSC = new MstSosiaCustomer();
		initMSC.setData( customer.getSosiaCustomer() );
		
		// SOSIANOを所持していて未接続なら接続し、データを取得する
		if( customer.getSosiaCustomer().isSosiaCustomer() && !customer.getSosiaCustomer().isConnecting() )
		{
			sosiaNo.setText( customer.getSosiaCustomer().getSosiaID().toString() );
			searchSosiaCustomerData();

		} else {
                    showData();
                }
	}
	
	/**
	 * データを表示する
	 */
	private void showData()
	{
		MstSosiaCustomer msc    = customer.getSosiaCustomer();
		
		customerNo.setText( customer.getCustomerNo() );
		customerName1.setText( customer.getCustomerName( 0 ) );
		customerName2.setText( customer.getCustomerName( 1 ) );
		// 連動データを表示する
		sosiaNo.setText( msc.isConnecting() ? msc.getSosiaID().toString() : "" );
		sosiaName.setText( msc.isConnecting() ? msc.getName() : "" );
		male.setSelected( msc.isConnecting() ? msc.getSex() == 1 : false );
		female.setSelected( msc.isConnecting() ? msc.getSex() == 2 : false );
		sosiaBirthday.setText( msc.isConnecting() ? msc.getBirthday() : "" );
		sosiaPoint.setText( msc.isConnecting() ? msc.getPoint().toString() : "" );
		registButton.setEnabled( msc.isConnecting() );
	}
	
	/**
	 * SOSIA連動顧客データを取得する
	 */
	private void searchSosiaCustomerData()
	{
/*            
                if(!this.checkInput())
                {
                        return;
                }
                SystemInfo.getLogger().log(Level.INFO,"★SOSIA連動情報★");
                MstSosiaCustomer msc = customer.getSosiaCustomer();
                msc.setSosiaID( Integer.parseInt( sosiaNo.getText() ) );
                SystemInfo.getLogger().log(Level.INFO,"★sosiaNo.getText():"+  sosiaNo.getText() );
                SystemInfo.getLogger().log(Level.INFO,"★msc.getSosiaID():"+  msc.getSosiaID() );
                try
                {
                        SystemInfo.getLogger().log(Level.INFO,"★SystemInfo.getSosiaGearBaseURL():"+  SystemInfo.getSosiaGearBaseURL() );
                        SystemInfo.getLogger().log(Level.INFO,"★GET_SOSIA_CUSTOMER_URL:"+  GET_SOSIA_CUSTOMER_URL );
                        SystemInfo.getLogger().log(Level.INFO,"★msc.getSosiaID():"+  msc.getSosiaID() );
                        SystemInfo.getLogger().log(Level.INFO,"★SystemInfo.getSosiaGearID():"+  SystemInfo.getSosiaGearID() );
                        SystemInfo.getLogger().log(Level.INFO,"★SystemInfo.getSosiaGearPassWord():"+  SystemInfo.getSosiaGearPassWord() );

                        msc.load(
                                SystemInfo.getSosiaGearBaseURL() + GET_SOSIA_CUSTOMER_URL + msc.getSosiaID(),
                                NetworkUtil.getWsseHeaderValue( SystemInfo.getSosiaGearID(), SystemInfo.getSosiaGearPassWord() )
                        );
                        SystemInfo.getLogger().log(Level.INFO,"★ロード完了★");
                }
                catch( Exception e )
                {
                    SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
                }

                showData();
*/
            
		if (!this.checkInput()) return;

                MstSosiaCustomer msc = customer.getSosiaCustomer();
                customerNo.setText( customer.getCustomerNo() );
                customerName1.setText( customer.getCustomerName( 0 ) );
                customerName2.setText( customer.getCustomerName( 1 ) );

                sosiaName.setText("");
                male.setSelected(false);
                female.setSelected(false);
                sosiaBirthday.setText("");
                sosiaPoint.setText("");
                
                try {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

                    mobileMemberList = new MobileMemberList();
                    mobileMemberList.setSosiaCode(null);
                    mobileMemberList.setAddDateFrom(null);
                    mobileMemberList.setAddDateTo(null);
                    mobileMemberList.setGearCondition(null);
                    mobileMemberList.setSosiaCode("'" + SystemInfo.getSosiaCode() + "'");
                    mobileMemberList.setGearCondition(2);
                    mobileMemberList.loadCustomer(Integer.parseInt(sosiaNo.getText()));

                    for (MobileMemberData mmd : mobileMemberList) {

                        // 連動データを表示する
                        sosiaNo.setText(mmd.getSosiaID().toString());
                        sosiaName.setText(mmd.getCusName1() + " " + mmd.getCusName2());
                        
                        if (mmd.getSex().equals(1)) {
                            male.setSelected(true);
                        } else {
                            female.setSelected(true);
                        }

                        sosiaBirthday.setText(mmd.getBirthDateStr());
                        sosiaPoint.setText("0");
                    }
                    
                    registButton.setEnabled(mobileMemberList.size() > 0);

                } finally {
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
	}
	
	private boolean checkInput()
	{
		if(sosiaNo.getText().equals(""))
		{
			MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "SOSIA会員ID"),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
			sosiaNo.requestFocusInWindow();
			return	false;
		}
		
		return	true;
	}
	
	/**
	 * 連動IDを保存する
	 */
	private void regist() {
            
/*            
		//コネクションを取得
		ConnectionWrapper	con	=	SystemInfo.getConnection();
		
		try
		{
			//トランザクション開始
			con.begin();
			
			if( con.executeUpdate( getSetSosiaCustomerIDSQL() ) == 1 ) {
				//トランザクションコミット
				con.commit();
			}
			else {
				con.rollback();
			}
		}
		catch(Exception e)
		{
			SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
		}
 */

                if (sosiaNo.getText().length() > 0 && mobileMemberList.size() > 0) {

                    for (MobileMemberData mmd : mobileMemberList) {

                        try {

                            MstCustomer mc = new MstCustomer(customer.getCustomerID());
                            mc.load(SystemInfo.getConnection());

                            // SOSIA ID
                            customer.getSosiaCustomer().setSosiaID(mmd.getSosiaID());
                            mc.getSosiaCustomer().setSosiaID(mmd.getSosiaID());
                            // 携帯メールアドレス
                            customer.setCellularMailAddress(mmd.getEmail());
                            mc.setCellularMailAddress(mmd.getEmail());
                            // 姓
                            if (mc.getCustomerName(0) == null || mc.getCustomerName(0).length() == 0) {
                                customer.setCustomerName(0, mmd.getCusName1());
                                mc.setCustomerName(0, mmd.getCusName1());
                            }
                            // 名
                            if (mc.getCustomerName(1) == null || mc.getCustomerName(1).length() == 0) {
                                customer.setCustomerName(1, mmd.getCusName2());
                                mc.setCustomerName(1, mmd.getCusName2());
                            }
                            // 性別
                            if (mc.getSex() == null || mc.getSex().equals(0)) {
                                customer.setSex(mmd.getSex());
                                mc.setSex(mmd.getSex());
                            }
                            // 生年月日
                            if (mc.getBirthday() == null) {
                                customer.setBirthdayDate(mmd.getBirthDate());
                                mc.setBirthdayDate(mmd.getBirthDate());
                            }
                            
                            //IVS_LVTu start add 2016/03/10 mmd.getSosiaID()
                            if (mmd.getFbID() != null && mmd.getFbID().trim().length() > 0) {
                                if(mmd.getSosiaID() != null) {
                                    customer.setFbID(mmd.getFbID());
                                    mc.setFbID(mmd.getFbID());
                                }
                            }
                            //IVS_LVTu end add 2016/03/10 mmd.getSosiaID()

                            mc.regist(SystemInfo.getConnection());
                            //IVS_LVTu start add 2017/10/12 #27848 [gb]WEB連動：紐付けしているのに、常に「0」でWEB予約が入ってくる顧客がいる
                            mc.updateSosiaID(SystemInfo.getConnection());
                            //IVS_LVTu end add 2017/10/12 #27848 [gb]WEB連動：紐付けしているのに、常に「0」でWEB予約が入ってくる顧客がいる

                        } catch(SQLException e) {
                            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
                        }

                    }
                    
                } else {
                    
                    try {
                        
                        MstCustomer mc = new MstCustomer(customer.getCustomerID());
                        mc.load(SystemInfo.getConnection());

                        // SOSIA ID
                        mc.getSosiaCustomer().setSosiaID(null);
                        mc.regist(SystemInfo.getConnection());

                    } catch(SQLException e) {
                        SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
                    }
                    
                }
            
	}
	
	/**
	 * データをクリア
	 */
	private void clear(){
	    customer.setSosiaCustomer(new MstSosiaCustomer());

	    // 連動データをクリアする
	    sosiaNo.setText( "" );
	    sosiaName.setText( "" );
	    male.setSelected(false);
	    female.setSelected(false);
	    sosiaBirthday.setText( "" );
	    sosiaPoint.setText( "" );
	    registButton.setEnabled( true );
	}
	
	/**
	 * SOSIAID格納SQLを取得する
	 */
	private String getSetSosiaCustomerIDSQL() {
		return
			"update mst_customer\n" +
			"set\n" +
			"sosia_id = " + SQLUtil.convertForSQL( customer.getSosiaCustomer().getSosiaID() ) + ",\n" +
			"update_date = current_timestamp\n" +
			"where\n" +
			"customer_id = " + SQLUtil.convertForSQL( customer.getCustomerID() ) + "\n" +
			";\n";
	}
	
	/**
	 * SOSIA連動画面用FocusTraversalPolicyを取得する。
	 * @return SOSIA連動画面用FocusTraversalPolicy
	 */
	public SosiaGearDialogFocusTraversalPolicy getFocusTraversalPolicy()
	{
		return	ftp;
	}
	
	/**
	 * SOSIA連動画面用FocusTraversalPolicy
	 */
	private class SosiaGearDialogFocusTraversalPolicy
					extends FocusTraversalPolicy
	{
		/**
		 * aComponent のあとでフォーカスを受け取る Component を返します。
		 * aContainer は aComponent のフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダでなければなりません。
		 * @param aContainer aComponent のフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダ
		 * @param aComponent aContainer のおそらく間接的な子、または aContainer 自体
		 * @return aComponent のあとにフォーカスを受け取る Component。適切な Component が見つからない場合は null
		 */
		public Component getComponentAfter(Container aContainer,
										   Component aComponent)
		{
			if (aComponent.equals(sosiaNo))
			{
				return registButton;
			}
			else if (aComponent.equals(registButton))
			{
				return closeButton;
			}
			return aComponent;
		}

		/**
		 * aComponent の前にフォーカスを受け取る Component を返します。
		 * aContainer は aComponent のフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダでなければなりません。
		 * @param aContainer aComponent のフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダ
		 * @param aComponent aContainer のおそらく間接的な子、または aContainer 自体
		 * @return aComponent の前にフォーカスを受け取る Component。適切な Component が見つからない場合は null
		 */
		public Component getComponentBefore(Container aContainer,
											Component aComponent)
		{
			if (aComponent.equals(registButton))
			{
				return sosiaNo;
			}
			else if (aComponent.equals(closeButton))
			{
				return registButton;
			}
			return aComponent;
		}

		/**
		 * トラバーサルサイクルの最初の Component を返します。
		 * このメソッドは、順方向のトラバーサルがラップするときに、次にフォーカスする Component を判定するために使用します。
		 * @param aContainer 先頭の Component を返すフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダ
		 * @return aContainer のトラバーサルサイクルの先頭の Componet、または適切な Component が見つからない場合は null
		 */
		public Component getFirstComponent(Container aContainer)
		{
			return sosiaNo;
		}

		/**
		 * トラバーサルサイクルの最後の Component を返します。
		 * このメソッドは、逆方向のトラバーサルがラップするときに、次にフォーカスする Component を判定するために使用します。
		 * @param aContainer aContainer - 最後の Component を返すフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダ
		 * @return aContainer のトラバーサルサイクルの最後の Componet、または適切な Component が見つからない場合は null
		 */
		public Component getLastComponent(Container aContainer)
		{
			return sosiaNo;
		}
		
		/**
		 * フォーカスを設定するデフォルトコンポーネントを返します。
		 * aContainer をルートとするフォーカストラバーサルサイクルが新しく開始されたときに、このコンポーネントに最初にフォーカスが設定されます。
		 * @param aContainer デフォルトの Component を返すフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダ
		 * @return aContainer のトラバーサルサイクルのデフォルトの Componet、または適切な Component が見つからない場合は null
		 */
		public Component getDefaultComponent(Container aContainer)
		{
			return sosiaNo;
		}
		
		/**
		 * ウィンドウが最初に表示されたときにフォーカスが設定されるコンポーネントを返します。
		 * show() または setVisible(true) の呼び出しで一度ウィンドウが表示されると、
		 * 初期化コンポーネントはそれ以降使用されません。
		 * 一度別のウィンドウに移ったフォーカスが再び設定された場合、
		 * または、一度非表示状態になったウィンドウが再び表示された場合は、
		 * そのウィンドウの最後にフォーカスが設定されたコンポーネントがフォーカス所有者になります。
		 * このメソッドのデフォルト実装ではデフォルトコンポーネントを返します。
		 * @param window 初期コンポーネントが返されるウィンドウ
		 * @return 最初にウィンドウが表示されるときにフォーカス設定されるコンポーネント。適切なコンポーネントがない場合は null
		 */
		public Component getInitialComponent(Window window)
		{
			return sosiaNo;
		}
	}
	
	/**
	 * ダイアログを閉じる
	 */
	private void closePanel()
	{
		if(this.isDialog())
		{
			((JDialog)this.getParent().getParent().getParent().getParent()).setVisible(false);
		}
		else
		{
			this.setVisible(false);
		}
	}
}
