/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConditionSetPanel.java
 *
 * Created on 2011/07/15, 16:31:19
 */

package com.geobeck.sosia.pos.hair.report;

import com.geobeck.sosia.pos.master.company.MstGroup;
import com.geobeck.sosia.pos.master.company.MstShop;
import com.geobeck.sosia.pos.system.SystemInfo;
import com.geobeck.sosia.pos.util.MessageUtil;
import com.geobeck.sql.ResultSetWrapper;
import com.geobeck.swing.CustomFilter;
import com.geobeck.swing.MessageDialog;
import com.geobeck.swing.SwingUtil;
import java.awt.Cursor;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.text.PlainDocument;
import com.geobeck.util.SQLUtil;

/**
 *
 * @author geobeck
 */
public class ConditionSetPanel extends  com.geobeck.sosia.pos.swing.AbstractImagePanelEx {

    /** Creates new form ConditionSetPanel */
    public ConditionSetPanel() {
        initComponents();
        this.setPath("集約条件設定");
	this.setTitle("集約条件設定");
	this.setSize(694, 246);
        // 顧客共有の有無によりグループ表示を切り替える
	if (SystemInfo.getSetteing().isShareCustomer())
	{
	    SystemInfo.initGroupShopComponents(shop1, 3);
	}else{
	    SystemInfo.initGroupShopComponents(shop1, 2);
	}

        
	init();
        
    }
	/**
	 * ボタンにマウスカーソルが乗ったときにカーソルを変更するイベントを追加する。
	 */
	private void addMouseCursorChange()
	{
            SystemInfo.addMouseCursorChange(btnRegist);
	}
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        shopLabel = new javax.swing.JLabel();
        shop1 = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        conLabel1 = new javax.swing.JLabel();
        lblTax18 = new javax.swing.JLabel();
        lblTax28 = new javax.swing.JLabel();
        count2From = new javax.swing.JTextField();
        ((PlainDocument)count2From.getDocument()).setDocumentFilter(new CustomFilter(4, CustomFilter.NUMERIC));
        lblTax19 = new javax.swing.JLabel();
        count5From = new javax.swing.JTextField();
        ((PlainDocument)count5From.getDocument()).setDocumentFilter(new CustomFilter(4, CustomFilter.NUMERIC));
        lblTax20 = new javax.swing.JLabel();
        lblTax27 = new javax.swing.JLabel();
        lblTax29 = new javax.swing.JLabel();
        count4To = new javax.swing.JTextField();
        lblTax30 = new javax.swing.JLabel();
        lblTax22 = new javax.swing.JLabel();
        count1From = new javax.swing.JTextField();
        ((PlainDocument)count1From.getDocument()).setDocumentFilter(new CustomFilter(4, CustomFilter.NUMERIC));
        count4From = new javax.swing.JTextField();
        ((PlainDocument)count4From.getDocument()).setDocumentFilter(new CustomFilter(4, CustomFilter.NUMERIC));
        lblTax25 = new javax.swing.JLabel();
        count1To = new javax.swing.JTextField();
        count3From = new javax.swing.JTextField();
        ((PlainDocument)count3From.getDocument()).setDocumentFilter(new CustomFilter(4, CustomFilter.NUMERIC));
        lblTax17 = new javax.swing.JLabel();
        conLabel2 = new javax.swing.JLabel();
        price2From = new javax.swing.JTextField();
        ((PlainDocument)price2From.getDocument()).setDocumentFilter(new CustomFilter(8, CustomFilter.NUMERIC));
        price4To = new javax.swing.JTextField();
        lblTax10 = new javax.swing.JLabel();
        lblTax12 = new javax.swing.JLabel();
        lblTax15 = new javax.swing.JLabel();
        price1From = new javax.swing.JTextField();
        ((PlainDocument)price1From.getDocument()).setDocumentFilter(new CustomFilter(8, CustomFilter.NUMERIC));
        price1To = new javax.swing.JTextField();
        price3From = new javax.swing.JTextField();
        ((PlainDocument)price3From.getDocument()).setDocumentFilter(new CustomFilter(8, CustomFilter.NUMERIC));
        price5From = new javax.swing.JTextField();
        ((PlainDocument)price5From.getDocument()).setDocumentFilter(new CustomFilter(8, CustomFilter.NUMERIC));
        price4From = new javax.swing.JTextField();
        ((PlainDocument)price4From.getDocument()).setDocumentFilter(new CustomFilter(8, CustomFilter.NUMERIC));
        lblTax13 = new javax.swing.JLabel();
        lblTax14 = new javax.swing.JLabel();
        count2To = new javax.swing.JTextField();
        count3To = new javax.swing.JTextField();
        price2To = new javax.swing.JTextField();
        price3To = new javax.swing.JTextField();
        btnRegist = new javax.swing.JButton();
        lblTax16 = new javax.swing.JLabel();
        aprice4From = new javax.swing.JTextField();
        ((PlainDocument)aprice4From.getDocument()).setDocumentFilter(new CustomFilter(8, CustomFilter.NUMERIC));
        lblTax21 = new javax.swing.JLabel();
        aprice3To = new javax.swing.JTextField();
        aprice2To = new javax.swing.JTextField();
        conLabel3 = new javax.swing.JLabel();
        aprice2From = new javax.swing.JTextField();
        ((PlainDocument)aprice2From.getDocument()).setDocumentFilter(new CustomFilter(8, CustomFilter.NUMERIC));
        aprice4To = new javax.swing.JTextField();
        lblTax11 = new javax.swing.JLabel();
        lblTax23 = new javax.swing.JLabel();
        lblTax24 = new javax.swing.JLabel();
        aprice1From = new javax.swing.JTextField();
        ((PlainDocument)aprice1From.getDocument()).setDocumentFilter(new CustomFilter(8, CustomFilter.NUMERIC));
        aprice1To = new javax.swing.JTextField();
        aprice5From = new javax.swing.JTextField();
        ((PlainDocument)aprice5From.getDocument()).setDocumentFilter(new CustomFilter(8, CustomFilter.NUMERIC));
        aprice3From = new javax.swing.JTextField();
        ((PlainDocument)aprice3From.getDocument()).setDocumentFilter(new CustomFilter(8, CustomFilter.NUMERIC));
        icount2To = new javax.swing.JTextField();
        icount3To = new javax.swing.JTextField();
        lblTax26 = new javax.swing.JLabel();
        conLabel4 = new javax.swing.JLabel();
        icount2From = new javax.swing.JTextField();
        ((PlainDocument)icount2From.getDocument()).setDocumentFilter(new CustomFilter(4, CustomFilter.NUMERIC));
        lblTax31 = new javax.swing.JLabel();
        icount1From = new javax.swing.JTextField();
        ((PlainDocument)icount1From.getDocument()).setDocumentFilter(new CustomFilter(4, CustomFilter.NUMERIC));
        icount4From = new javax.swing.JTextField();
        ((PlainDocument)icount4From.getDocument()).setDocumentFilter(new CustomFilter(4, CustomFilter.NUMERIC));
        lblTax32 = new javax.swing.JLabel();
        icount4To = new javax.swing.JTextField();
        lblTax33 = new javax.swing.JLabel();
        lblTax34 = new javax.swing.JLabel();
        icount3From = new javax.swing.JTextField();
        ((PlainDocument)icount3From.getDocument()).setDocumentFilter(new CustomFilter(4, CustomFilter.NUMERIC));
        icount1To = new javax.swing.JTextField();
        icount5From = new javax.swing.JTextField();
        ((PlainDocument)icount5From.getDocument()).setDocumentFilter(new CustomFilter(4, CustomFilter.NUMERIC));

        setFocusCycleRoot(true);

        shopLabel.setText("店舗");

        shop1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        shop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shop1ActionPerformed(evt);
            }
        });

        conLabel1.setText("【来店回数】");

        lblTax18.setText("以上");
        lblTax18.setFocusCycleRoot(true);

        lblTax28.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax28.setText("ランク５");
        lblTax28.setFocusCycleRoot(true);

        count2From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        count2From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        count2From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        count2From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                count2FromFocusLost(evt);
            }
        });

        lblTax19.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax19.setText("ランク２");
        lblTax19.setFocusCycleRoot(true);

        count5From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14)); // NOI18N
        count5From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        count5From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        count5From.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                count5FromActionPerformed(evt);
            }
        });
        count5From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                count5FromFocusLost(evt);
            }
        });

        lblTax20.setText(" 〜");
        lblTax20.setFocusCycleRoot(true);

        lblTax27.setText(" 〜");
        lblTax27.setFocusCycleRoot(true);

        lblTax29.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax29.setText("ランク４");
        lblTax29.setFocusCycleRoot(true);

        count4To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        count4To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        count4To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        count4To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        count4To.setEnabled(false);

        lblTax30.setText(" 〜");
        lblTax30.setFocusCycleRoot(true);

        lblTax22.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax22.setText("ランク１");
        lblTax22.setFocusCycleRoot(true);

        count1From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        count1From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        count1From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        count1From.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        count1From.setEnabled(false);

        count4From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        count4From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        count4From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        count4From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                count4FromFocusLost(evt);
            }
        });

        lblTax25.setText(" 〜");
        lblTax25.setFocusCycleRoot(true);

        count1To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        count1To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        count1To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        count1To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        count1To.setEnabled(false);

        count3From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        count3From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        count3From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        count3From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                count3FromFocusLost(evt);
            }
        });

        lblTax17.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax17.setText("ランク３");
        lblTax17.setFocusCycleRoot(true);

        conLabel2.setText("【売上金額】");

        price2From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        price2From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        price2From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        price2From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                price2FromFocusLost(evt);
            }
        });

        price4To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        price4To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        price4To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        price4To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        price4To.setEnabled(false);

        lblTax10.setText("以上");
        lblTax10.setFocusCycleRoot(true);

        lblTax12.setText(" 〜");
        lblTax12.setFocusCycleRoot(true);

        lblTax15.setText(" 〜");
        lblTax15.setFocusCycleRoot(true);

        price1From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        price1From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        price1From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        price1From.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        price1From.setEnabled(false);

        price1To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        price1To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        price1To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        price1To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        price1To.setEnabled(false);

        price3From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        price3From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        price3From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        price3From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                price3FromFocusLost(evt);
            }
        });

        price5From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14)); // NOI18N
        price5From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        price5From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        price5From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                price5FromFocusLost(evt);
            }
        });

        price4From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        price4From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        price4From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        price4From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                price4FromFocusLost(evt);
            }
        });

        lblTax13.setText(" 〜");
        lblTax13.setFocusCycleRoot(true);

        lblTax14.setText(" 〜");
        lblTax14.setFocusCycleRoot(true);

        count2To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        count2To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        count2To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        count2To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        count2To.setEnabled(false);

        count3To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        count3To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        count3To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        count3To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        count3To.setEnabled(false);

        price2To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        price2To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        price2To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        price2To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        price2To.setEnabled(false);

        price3To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        price3To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        price3To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        price3To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        price3To.setEnabled(false);

        btnRegist.setIcon(SystemInfo.getImageIcon("/button/common/regist_off.jpg"));
        btnRegist.setBorderPainted(false);
        btnRegist.setPressedIcon(SystemInfo.getImageIcon("/button/common/regist_on.jpg"));
        btnRegist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistActionPerformed(evt);
            }
        });

        lblTax16.setText(" 〜");
        lblTax16.setFocusCycleRoot(true);

        aprice4From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        aprice4From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aprice4From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        aprice4From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                aprice4FromFocusLost(evt);
            }
        });

        lblTax21.setText(" 〜");
        lblTax21.setFocusCycleRoot(true);

        aprice3To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        aprice3To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aprice3To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        aprice3To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        aprice3To.setEnabled(false);

        aprice2To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        aprice2To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aprice2To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        aprice2To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        aprice2To.setEnabled(false);

        conLabel3.setText("【客単価】");

        aprice2From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        aprice2From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aprice2From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        aprice2From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                aprice2FromFocusLost(evt);
            }
        });

        aprice4To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        aprice4To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aprice4To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        aprice4To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        aprice4To.setEnabled(false);

        lblTax11.setText("以上");
        lblTax11.setFocusCycleRoot(true);

        lblTax23.setText(" 〜");
        lblTax23.setFocusCycleRoot(true);

        lblTax24.setText(" 〜");
        lblTax24.setFocusCycleRoot(true);

        aprice1From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        aprice1From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aprice1From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        aprice1From.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        aprice1From.setEnabled(false);

        aprice1To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        aprice1To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aprice1To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        aprice1To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        aprice1To.setEnabled(false);

        aprice5From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        aprice5From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aprice5From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        aprice5From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                aprice5FromFocusLost(evt);
            }
        });

        aprice3From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        aprice3From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aprice3From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        aprice3From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                aprice3FromFocusLost(evt);
            }
        });

        icount2To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        icount2To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        icount2To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        icount2To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        icount2To.setEnabled(false);

        icount3To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        icount3To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        icount3To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        icount3To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        icount3To.setEnabled(false);

        lblTax26.setText("以上");
        lblTax26.setFocusCycleRoot(true);

        conLabel4.setText("【紹介客数】");

        icount2From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        icount2From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        icount2From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        icount2From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                icount2FromFocusLost(evt);
            }
        });

        lblTax31.setText(" 〜");
        lblTax31.setFocusCycleRoot(true);

        icount1From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        icount1From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        icount1From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        icount1From.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        icount1From.setEnabled(false);

        icount4From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        icount4From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        icount4From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        icount4From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                icount4FromFocusLost(evt);
            }
        });

        lblTax32.setText(" 〜");
        lblTax32.setFocusCycleRoot(true);

        icount4To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        icount4To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        icount4To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        icount4To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        icount4To.setEnabled(false);

        lblTax33.setText(" 〜");
        lblTax33.setFocusCycleRoot(true);

        lblTax34.setText(" 〜");
        lblTax34.setFocusCycleRoot(true);

        icount3From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        icount3From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        icount3From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        icount3From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                icount3FromFocusLost(evt);
            }
        });

        icount1To.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14));
        icount1To.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        icount1To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        icount1To.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        icount1To.setEnabled(false);

        icount5From.setFont(new java.awt.Font("ＭＳ ゴシック", 0, 14)); // NOI18N
        icount5From.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        icount5From.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        icount5From.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                icount5FromActionPerformed(evt);
            }
        });
        icount5From.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                icount5FromFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(shopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(shop1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 298, Short.MAX_VALUE)
                        .addComponent(btnRegist, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTax28, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(count5From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(65, 65, 65)
                                        .addComponent(lblTax18, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(conLabel1)))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(conLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(65, 65, 65)
                                        .addComponent(lblTax10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(price5From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTax29, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(count4From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax30)
                                .addGap(4, 4, 4)
                                .addComponent(count4To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(price4From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax12)
                                .addGap(4, 4, 4)
                                .addComponent(price4To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTax22, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(count1From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax25)
                                .addGap(4, 4, 4)
                                .addComponent(count1To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(price1From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax15)
                                .addGap(4, 4, 4)
                                .addComponent(price1To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTax17, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(count3From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax27)
                                .addGap(4, 4, 4)
                                .addComponent(count3To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(price3From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax14)
                                .addGap(4, 4, 4)
                                .addComponent(price3To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTax19, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(count2From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax20)
                                .addGap(4, 4, 4)
                                .addComponent(count2To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(price2From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax13)
                                .addGap(4, 4, 4)
                                .addComponent(price2To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(icount5From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(lblTax26, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(conLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(icount4From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax32)
                                .addGap(4, 4, 4)
                                .addComponent(icount4To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(icount1From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax31)
                                .addGap(4, 4, 4)
                                .addComponent(icount1To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(icount3From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax34)
                                .addGap(4, 4, 4)
                                .addComponent(icount3To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(icount2From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax33)
                                .addGap(4, 4, 4)
                                .addComponent(icount2To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(conLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(lblTax11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(aprice5From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(aprice4From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax23)
                                .addGap(4, 4, 4)
                                .addComponent(aprice4To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(aprice1From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax24)
                                .addGap(4, 4, 4)
                                .addComponent(aprice1To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(aprice3From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax16)
                                .addGap(4, 4, 4)
                                .addComponent(aprice3To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(aprice2From, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTax21)
                                .addGap(4, 4, 4)
                                .addComponent(aprice2To, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(icount5From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblTax26, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(conLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(icount4From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTax32, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(icount4To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(icount3From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTax34, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(icount3To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(icount2From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTax33, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(icount2To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(icount1From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTax31, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(icount1To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shop1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRegist, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(lblTax28, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(count5From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(lblTax18, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(conLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(conLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(lblTax10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(price5From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTax29, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(count4From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax30, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(count4To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price4From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price4To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTax17, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(count3From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax27, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(count3To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price3From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax14, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price3To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTax19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(count2From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax20, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(count2To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price2From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price2To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTax22, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(count1From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax25, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(count1To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price1From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price1To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(conLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(lblTax11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(aprice5From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(aprice4From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax23, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(aprice4To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(aprice3From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(aprice3To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(aprice2From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax21, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(aprice2To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(aprice1From, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTax24, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(aprice1To, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void shop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shop1ActionPerformed

}//GEN-LAST:event_shop1ActionPerformed

    private void price2FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_price2FromFocusLost
        dispPriceCondition();
}//GEN-LAST:event_price2FromFocusLost

    private void count5FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_count5FromFocusLost
        dispCountCondition();
}//GEN-LAST:event_count5FromFocusLost

    private void count4FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_count4FromFocusLost
        dispCountCondition();
}//GEN-LAST:event_count4FromFocusLost

    private void count2FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_count2FromFocusLost
        dispCountCondition();
}//GEN-LAST:event_count2FromFocusLost

    private void count3FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_count3FromFocusLost
        dispCountCondition();
}//GEN-LAST:event_count3FromFocusLost

    private void count5FromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_count5FromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_count5FromActionPerformed

    private void price3FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_price3FromFocusLost
        dispPriceCondition();
    }//GEN-LAST:event_price3FromFocusLost

    private void price5FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_price5FromFocusLost
        dispPriceCondition();
    }//GEN-LAST:event_price5FromFocusLost

    private void price4FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_price4FromFocusLost
        dispPriceCondition();
    }//GEN-LAST:event_price4FromFocusLost

    private void btnRegistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistActionPerformed
        if (inputCheck()) {
            btnRegist.setCursor(null);
            this.updateValue();
            this.close();
        }
    }//GEN-LAST:event_btnRegistActionPerformed

    private void aprice4FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_aprice4FromFocusLost
        dispAvgUnitPriceCondition();
    }//GEN-LAST:event_aprice4FromFocusLost

    private void aprice2FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_aprice2FromFocusLost
        dispAvgUnitPriceCondition();
    }//GEN-LAST:event_aprice2FromFocusLost

    private void aprice5FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_aprice5FromFocusLost
        dispAvgUnitPriceCondition();
    }//GEN-LAST:event_aprice5FromFocusLost

    private void aprice3FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_aprice3FromFocusLost
        dispAvgUnitPriceCondition();
    }//GEN-LAST:event_aprice3FromFocusLost

    private void icount2FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_icount2FromFocusLost
        dispIntroducerPriceCondition();
    }//GEN-LAST:event_icount2FromFocusLost

    private void icount4FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_icount4FromFocusLost
        dispIntroducerPriceCondition();
    }//GEN-LAST:event_icount4FromFocusLost

    private void icount3FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_icount3FromFocusLost
        dispIntroducerPriceCondition();
    }//GEN-LAST:event_icount3FromFocusLost

    private void icount5FromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_icount5FromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_icount5FromActionPerformed

    private void icount5FromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_icount5FromFocusLost
        dispIntroducerPriceCondition();
    }//GEN-LAST:event_icount5FromFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aprice1From;
    private javax.swing.JTextField aprice1To;
    private javax.swing.JTextField aprice2From;
    private javax.swing.JTextField aprice2To;
    private javax.swing.JTextField aprice3From;
    private javax.swing.JTextField aprice3To;
    private javax.swing.JTextField aprice4From;
    private javax.swing.JTextField aprice4To;
    private javax.swing.JTextField aprice5From;
    private javax.swing.JButton btnRegist;
    private javax.swing.JLabel conLabel1;
    private javax.swing.JLabel conLabel2;
    private javax.swing.JLabel conLabel3;
    private javax.swing.JLabel conLabel4;
    private javax.swing.JTextField count1From;
    private javax.swing.JTextField count1To;
    private javax.swing.JTextField count2From;
    private javax.swing.JTextField count2To;
    private javax.swing.JTextField count3From;
    private javax.swing.JTextField count3To;
    private javax.swing.JTextField count4From;
    private javax.swing.JTextField count4To;
    private javax.swing.JTextField count5From;
    private javax.swing.JTextField icount1From;
    private javax.swing.JTextField icount1To;
    private javax.swing.JTextField icount2From;
    private javax.swing.JTextField icount2To;
    private javax.swing.JTextField icount3From;
    private javax.swing.JTextField icount3To;
    private javax.swing.JTextField icount4From;
    private javax.swing.JTextField icount4To;
    private javax.swing.JTextField icount5From;
    private javax.swing.JLabel lblTax10;
    private javax.swing.JLabel lblTax11;
    private javax.swing.JLabel lblTax12;
    private javax.swing.JLabel lblTax13;
    private javax.swing.JLabel lblTax14;
    private javax.swing.JLabel lblTax15;
    private javax.swing.JLabel lblTax16;
    private javax.swing.JLabel lblTax17;
    private javax.swing.JLabel lblTax18;
    private javax.swing.JLabel lblTax19;
    private javax.swing.JLabel lblTax20;
    private javax.swing.JLabel lblTax21;
    private javax.swing.JLabel lblTax22;
    private javax.swing.JLabel lblTax23;
    private javax.swing.JLabel lblTax24;
    private javax.swing.JLabel lblTax25;
    private javax.swing.JLabel lblTax26;
    private javax.swing.JLabel lblTax27;
    private javax.swing.JLabel lblTax28;
    private javax.swing.JLabel lblTax29;
    private javax.swing.JLabel lblTax30;
    private javax.swing.JLabel lblTax31;
    private javax.swing.JLabel lblTax32;
    private javax.swing.JLabel lblTax33;
    private javax.swing.JLabel lblTax34;
    private javax.swing.JTextField price1From;
    private javax.swing.JTextField price1To;
    private javax.swing.JTextField price2From;
    private javax.swing.JTextField price2To;
    private javax.swing.JTextField price3From;
    private javax.swing.JTextField price3To;
    private javax.swing.JTextField price4From;
    private javax.swing.JTextField price4To;
    private javax.swing.JTextField price5From;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel shop1;
    private javax.swing.JLabel shopLabel;
    // End of variables declaration//GEN-END:variables


    /**
    * 初期化処理を行う。
    */
    private void init()
    {
        // 設定値の読み込み
        try {

                String sql = "";
                sql = "select * from mst_cross_analysis5_setting where shop_id = " + SystemInfo.getCurrentShop().getShopID();

                ResultSetWrapper rs = SystemInfo.getConnection().executeQuery(sql);
                if (rs.next()) {
                    count5From.setText(rs.getString("f5value"));
                    count4From.setText(rs.getString("f4value"));
                    count3From.setText(rs.getString("f3value"));
                    count2From.setText(rs.getString("f2value"));
                    count1From.setText(rs.getString("f1value"));
                    dispCountCondition();

                    price5From.setText(rs.getString("m5value"));
                    price4From.setText(rs.getString("m4value"));
                    price3From.setText(rs.getString("m3value"));
                    price2From.setText(rs.getString("m2value"));
                    price1From.setText(rs.getString("m1value"));
                    dispPriceCondition();
                    
                    icount5From.setText(rs.getString("i5value"));
                    icount4From.setText(rs.getString("i4value"));
                    icount3From.setText(rs.getString("i3value"));
                    icount2From.setText(rs.getString("i2value"));
                    icount1From.setText(rs.getString("i1value"));
                    dispIntroducerPriceCondition();

                    aprice5From.setText(rs.getString("a5value"));
                    aprice4From.setText(rs.getString("a4value"));
                    aprice3From.setText(rs.getString("a3value"));
                    aprice2From.setText(rs.getString("a2value"));
                    aprice1From.setText(rs.getString("a1value"));
                    dispAvgUnitPriceCondition();



                } else {
                    sql = "insert into mst_cross_analysis5_setting (shop_id) values(" + SystemInfo.getCurrentShop().getShopID() + ")";
                    SystemInfo.getConnection().executeUpdate(sql);
                }

                if (count1From.getText().length() == 0) count1From.setText("1");
                if (price1From.getText().length() == 0) price1From.setText("0");
                if (icount1From.getText().length() == 0) icount1From.setText("0");
                if (aprice1From.getText().length() == 0) aprice1From.setText("0");


                rs.close();

            } catch (Exception e) {
            }

    }
    private void dispCountCondition() {

            try {
                if (count5From.getText().length() > 0) {
                    count4To.setText(String.valueOf(Long.parseLong(count5From.getText()) - 1));
                }

                if (count4From.getText().length() > 0) {
                    count3To.setText(String.valueOf(Long.parseLong(count4From.getText()) - 1));
                }


                if (count3From.getText().length() > 0) {
                    count2To.setText(String.valueOf(Long.parseLong(count3From.getText()) - 1));
                }

                if (count2From.getText().length() > 0) {
                    count1To.setText(String.valueOf(Long.parseLong(count2From.getText()) - 1));
                }

            } catch (Exception e) {
            }
     }

     private void dispPriceCondition() {

            try {

                if (price5From.getText().length() > 0) {
                    price4To.setText(String.valueOf(Long.parseLong(price5From.getText()) - 1));
                }

                if (price4From.getText().length() > 0) {
                    price3To.setText(String.valueOf(Long.parseLong(price4From.getText()) - 1));
                }

                if (price3From.getText().length() > 0) {
                    price2To.setText(String.valueOf(Long.parseLong(price3From.getText()) - 1));
                }

                if (price2From.getText().length() > 0) {
                    price1To.setText(String.valueOf(Long.parseLong(price2From.getText()) - 1));
                }

            } catch (Exception e) {
            }

     }

     private void dispIntroducerPriceCondition() {

            try {

                if (icount5From.getText().length() > 0) {
                    icount4To.setText(String.valueOf(Long.parseLong(icount5From.getText()) - 1));
                }

                if (icount4From.getText().length() > 0) {
                    icount3To.setText(String.valueOf(Long.parseLong(icount4From.getText()) - 1));
                }

                if (icount3From.getText().length() > 0) {
                    icount2To.setText(String.valueOf(Long.parseLong(icount3From.getText()) - 1));
                }

                if (icount2From.getText().length() > 0) {
                    icount1To.setText(String.valueOf(Long.parseLong(icount2From.getText()) - 1));
                }

            } catch (Exception e) {
            }

     }

     private void dispAvgUnitPriceCondition() {

            try {

                if (aprice5From.getText().length() > 0) {
                    aprice4To.setText(String.valueOf(Long.parseLong(aprice5From.getText()) - 1));
                }

                if (aprice4From.getText().length() > 0) {
                    aprice3To.setText(String.valueOf(Long.parseLong(aprice4From.getText()) - 1));
                }

                if (aprice3From.getText().length() > 0) {
                    aprice2To.setText(String.valueOf(Long.parseLong(aprice3From.getText()) - 1));
                }

                if (aprice2From.getText().length() > 0) {
                    aprice1To.setText(String.valueOf(Long.parseLong(aprice2From.getText()) - 1));
                }

            } catch (Exception e) {
            }

     }

     private boolean inputCheck()
     {
                try {
                    Long.parseLong(count5From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "来店回数設定のランク５"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    count5From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(count4From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "来店回数設定のランク４"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    count4From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(count3From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "来店回数設定のランク３"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    count3From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(count2From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "来店回数設定のランク２"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    count2From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(count1From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "来店回数設定のランク１"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    count1From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(price5From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "売上金額設定のランク５"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    price5From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(price4From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "売上金額設定のランク４"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    price4From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(price3From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "売上金額設定のランク３"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    price3From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(price2From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "売上金額設定のランク２"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    price2From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(price1From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "売上金額設定のランク１"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    price1From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(icount5From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "紹介人数設定のランク５"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    icount5From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(icount4From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "紹介人数設定のランク４"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    icount4From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(icount3From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "紹介人数設定のランク３"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    icount3From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(icount2From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "紹介人数設定のランク２"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    icount2From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(icount1From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "紹介人数設定のランク１"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    icount1From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(aprice5From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "客単価設定のランク５"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    aprice5From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(aprice4From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "客単価設定のランク４"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    aprice4From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(aprice3From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "客単価設定のランク３"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    aprice3From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(aprice2From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "客単価設定のランク２"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    aprice2From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(aprice1From.getText());
                } catch (Exception e) {

                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "客単価設定のランク１"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    aprice1From.requestFocusInWindow();
                    return false;
                }

                return true;
     }

     private void updateValue(){

            try {

                // 設定値の登録
                StringBuilder sql = new StringBuilder(1000);
                sql.append(" update mst_cross_analysis5_setting");
                sql.append(" set");
                sql.append("      f5value = " + SQLUtil.convertForSQL(count5From.getText()));
                sql.append("     ,f4value = " + SQLUtil.convertForSQL(count4From.getText()));
                sql.append("     ,f3value = " + SQLUtil.convertForSQL(count3From.getText()));
                sql.append("     ,f2value = " + SQLUtil.convertForSQL(count2From.getText()));
                sql.append("     ,f1value = " + SQLUtil.convertForSQL(count1From.getText()));
                sql.append("     ,m5value = " + SQLUtil.convertForSQL(price5From.getText()));
                sql.append("     ,m4value = " + SQLUtil.convertForSQL(price4From.getText()));
                sql.append("     ,m3value = " + SQLUtil.convertForSQL(price3From.getText()));
                sql.append("     ,m2value = " + SQLUtil.convertForSQL(price2From.getText()));
                sql.append("     ,m1value = " + SQLUtil.convertForSQL(price1From.getText()));
                sql.append("     ,i5value = " + SQLUtil.convertForSQL(icount5From.getText()));
                sql.append("     ,i4value = " + SQLUtil.convertForSQL(icount4From.getText()));
                sql.append("     ,i3value = " + SQLUtil.convertForSQL(icount3From.getText()));
                sql.append("     ,i2value = " + SQLUtil.convertForSQL(icount2From.getText()));
                sql.append("     ,i1value = " + SQLUtil.convertForSQL(icount1From.getText()));
                sql.append("     ,a5value = " + SQLUtil.convertForSQL(aprice5From.getText()));
                sql.append("     ,a4value = " + SQLUtil.convertForSQL(aprice4From.getText()));
                sql.append("     ,a3value = " + SQLUtil.convertForSQL(aprice3From.getText()));
                sql.append("     ,a2value = " + SQLUtil.convertForSQL(aprice2From.getText()));
                sql.append("     ,a1value = " + SQLUtil.convertForSQL(aprice1From.getText()));
                sql.append(" where");
                sql.append("     shop_id = " + SystemInfo.getCurrentShop().getShopID());

                SystemInfo.getConnection().executeUpdate(sql.toString());

            } catch (Exception e) {
            }

    }
    /**
     * ダイアログを閉じる
     */
    private void close()
    {
        if (this.isDialog()) {
            ((JDialog)this.getParent().getParent().getParent().getParent()).setVisible(false);
        } else {
            this.setVisible(false);
        }
    }
}
