/*
 * StoreReportPanel.java
 *
 * Created on 2012/11/23, 13:00
 */
package com.geobeck.sosia.pos.hair.report;

import com.geobeck.sosia.pos.system.SystemInfo;
import java.awt.*;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.*;
import javax.swing.*;
import com.geobeck.swing.*;
import javax.swing.text.PlainDocument;
import com.geobeck.sosia.pos.master.company.*;
import com.geobeck.sosia.pos.report.bean.ReportParameterBean;
import com.geobeck.sosia.pos.hair.report.logic.*;
//import com.geobeck.sosia.pos.hair.report.logic.AnalyticChartReportLogic;

import com.geobeck.sosia.pos.util.*;
import java.text.SimpleDateFormat;
import com.geobeck.sql.*;
import com.geobeck.util.CheckUtil;

import java.util.GregorianCalendar;
import org.apache.commons.lang.math.NumberUtils;
import java.util.HashMap;

/**
 *
 * @author Duong Hoang Thanh
 */
public class SalesTransitionReportPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx {

    /**
     * Creates new form SalesTransitionReportPanel
     */
    public SalesTransitionReportPanel() {

        initComponents();
        this.setSize(958, 750);
        this.setPath("売上推移表");
        this.setTitle("売上推移表");
        init();

    }

    /**
     * init form
     */
    private void init() {        
        
        Calendar cal = Calendar.getInstance();
         SystemInfo.initGroupShopComponents(cmbTarget1, 3);
         
        //期間を初期設定する    
        Calendar cdr = Calendar.getInstance();
        cdr.setTime(new Date());
        int nowYear = cdr.get(Calendar.YEAR);
        this.initYearCombo(cmbTargetYear, nowYear);
        //売上構成やその推移コントロールを初期設定する

        cal.add(Calendar.MONTH, 1);
        cal.set(Calendar.DAY_OF_MONTH, 1);
        cal.add(Calendar.YEAR, -1);
        cal.add(Calendar.YEAR, 1);
        cal.add(Calendar.DAY_OF_MONTH, -1);   
    }

    /**
     * int data for year combobx
     *
     * @param cmb
     * @param nowYear
     */
    private void initYearCombo(final JComboBox cmb, int nowYear) {
        cmb.removeAllItems();

        int y = Calendar.getInstance().get(Calendar.YEAR);
        for (int i = 0; i < 5; i++) {
            cmb.addItem(String.valueOf(y - i));
        }
        cmb.setSelectedItem(nowYear);
        cmb.getEditor().getEditorComponent().addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ((JTextField) cmb.getEditor().getEditorComponent()).selectAll();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportTypeGroup = new javax.swing.ButtonGroup();
        taxGroup = new javax.swing.ButtonGroup();
        countGroup = new javax.swing.ButtonGroup();
        customerGroup = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        typeGroup = new javax.swing.ButtonGroup();
        aggregationGroup = new javax.swing.ButtonGroup();
        timeGroup = new javax.swing.ButtonGroup();
        outputGroup = new javax.swing.ButtonGroup();
        taxGroup2 = new javax.swing.ButtonGroup();
        aggregateGroup = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        btnPerformance = new javax.swing.ButtonGroup();
        lblTarget1 = new javax.swing.JLabel();
        cmbTarget1 = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        lblPeriod1 = new javax.swing.JLabel();
        rdoTechnic = new javax.swing.JRadioButton();
        lblNewVisit = new javax.swing.JLabel();
        rdoItems = new javax.swing.JRadioButton();
        rdoTaxBlank = new javax.swing.JRadioButton();
        rdoTaxUnit = new javax.swing.JRadioButton();
        lblTax1 = new javax.swing.JLabel();
        btnExcelReport1 = new javax.swing.JButton();
        cmbTargetYear = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        setFocusCycleRoot(true);

        lblTarget1.setText("対象");

        //shop.addItem(this.myShop);

        lblPeriod1.setText("対象期間");
        lblPeriod1.setFocusCycleRoot(true);

        buttonGroup4.add(rdoTechnic);
        rdoTechnic.setSelected(true);
        rdoTechnic.setText("技術");
        rdoTechnic.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoTechnic.setContentAreaFilled(false);
        rdoTechnic.setMargin(new java.awt.Insets(0, 0, 0, 0));

        lblNewVisit.setText("区分");

        buttonGroup4.add(rdoItems);
        rdoItems.setText("商品");
        rdoItems.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoItems.setContentAreaFilled(false);
        rdoItems.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup3.add(rdoTaxBlank);
        rdoTaxBlank.setSelected(true);
        rdoTaxBlank.setText("税抜");
        rdoTaxBlank.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoTaxBlank.setContentAreaFilled(false);
        rdoTaxBlank.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup3.add(rdoTaxUnit);
        rdoTaxUnit.setText("税込");
        rdoTaxUnit.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoTaxUnit.setContentAreaFilled(false);
        rdoTaxUnit.setMargin(new java.awt.Insets(0, 0, 0, 0));

        lblTax1.setText("税区分");

        btnExcelReport1.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnExcelReport1.setBorderPainted(false);
        btnExcelReport1.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnExcelReport1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelReport1ActionPerformed(evt);
            }
        });

        cmbTargetYear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cmbTargetYear.setPreferredSize(new java.awt.Dimension(48, 20));
        cmbTargetYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTargetYearItemStateChanged(evt);
            }
        });

        jLabel1.setText("年");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(lblTax1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(lblPeriod1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                .add(lblTarget1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(lblNewVisit, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(cmbTarget1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 195, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btnExcelReport1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(rdoTechnic, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                    .add(rdoTaxUnit, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(rdoItems, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(rdoTaxBlank, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(layout.createSequentialGroup()
                        .add(85, 85, 85)
                        .add(cmbTargetYear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel1)))
                .addContainerGap(452, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(lblTarget1)
                        .add(cmbTarget1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(btnExcelReport1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(cmbTargetYear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jLabel1))
                    .add(lblPeriod1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rdoTechnic)
                    .add(rdoItems)
                    .add(lblNewVisit))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rdoTaxUnit)
                    .add(rdoTaxBlank)
                    .add(lblTax1))
                .addContainerGap(330, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 期間で絞って詳細な売上のEXCELボタンを押下。
     *
     * @param evt
     */
    private void btnExcelReport1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelReport1ActionPerformed

        btnExcelReport1.setCursor(null);

        try {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            SaleTransittionReportLogic logic = new SaleTransittionReportLogic();
            ReportParameterBean paramBean = new ReportParameterBean();
            paramBean.setMainReportType(ReportParameterBean.MAIN_REPORT_BUSINESS);
            //割引の区分の設定
            //Integer discountType = SystemInfo.getAccountSetting().getDiscountType();
            //paramBean.setDiscountType(discountType);
            // 税区分(税抜き)
            if (this.rdoTaxBlank.isSelected()) {
                paramBean.setTaxType(ReportParameterBean.TAX_TYPE_BLANK);
            } // 税区分(税込み)
            else if (this.rdoTaxUnit.isSelected()) {
                paramBean.setTaxType(ReportParameterBean.TAX_TYPE_UNIT);
            }

            boolean logicResult = true;

            try {
                //グループ
                if (cmbTarget1.getSelectedItem() instanceof MstGroup) {
                    MstGroup mg = (MstGroup) cmbTarget1.getSelectedItem();
                    paramBean.setTargetName(mg.getGroupName());
                    paramBean.setShopIDList(mg.getShopIDListAll());
                } //店舗
                else if (cmbTarget1.getSelectedItem() instanceof MstShop) {
                    MstShop ms = (MstShop) cmbTarget1.getSelectedItem();
                    paramBean.setTargetName(ms.getShopName());
                    paramBean.setShopIDList(ms.getShopID().toString());
                }

                //対象となる店舗が存在しない場合
                if (paramBean.getShopIDList().equals("")) {
                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(4001),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                boolean isTechnic = true;
                if (rdoTechnic.isSelected()) {
                    isTechnic = true;
                }
                else if(rdoItems.isSelected())
                {
                    isTechnic = false;
                }
                
                Integer year = Integer.parseInt(cmbTargetYear.getSelectedItem().toString());
       
                ConnectionWrapper cw = SystemInfo.getConnection();             
                paramBean.setSubReportType(ReportParameterBean.SUB_REPORT_BUSINESS_ALL);
                logicResult = logic.viewSaleTrendReport(paramBean,isTechnic,year);

                    
   
              
            } catch (Exception e) {
                SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(1099),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            // エラー時
            if (!logicResult) {
                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(4001),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
            }
        } finally {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_btnExcelReport1ActionPerformed




    /**
     * inputCheckyear
     *
     * @param cmb
     * @param itemName
     * @return
     */
    private boolean inputCheckYear(JComboBox cmb, String itemName) {
        NumberUtils numUtil = new NumberUtils();
        if (!numUtil.isNumber(cmb.getSelectedItem().toString())) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, itemName),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            cmb.requestFocusInWindow();
            return false;
        }

        return true;
    }
   

    /**
     * checkReappearance
     *
     * @return
     */
    private boolean checkReappearance() {
        NumberUtils numUtil = new NumberUtils();
        if (!numUtil.isNumber(this.cmbTargetYear.getSelectedItem().toString())) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "対象年"),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            Calendar cdr = Calendar.getInstance();
            this.cmbTargetYear.requestFocusInWindow();
            return false;
        }

        return true;
    }


    private void cmbTargetYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTargetYearItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTargetYearItemStateChanged


    private GregorianCalendar dateToGregorianCalendar(java.util.Date date) {
        GregorianCalendar gCal = new GregorianCalendar();
        gCal.setTime(date);
        return gCal;
    }


   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup aggregateGroup;
    private javax.swing.ButtonGroup aggregationGroup;
    private javax.swing.JButton btnExcelReport1;
    private javax.swing.ButtonGroup btnPerformance;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel cmbTarget1;
    private javax.swing.JComboBox cmbTargetYear;
    private javax.swing.ButtonGroup countGroup;
    private javax.swing.ButtonGroup customerGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblNewVisit;
    private javax.swing.JLabel lblPeriod1;
    private javax.swing.JLabel lblTarget1;
    private javax.swing.JLabel lblTax1;
    private javax.swing.ButtonGroup outputGroup;
    private javax.swing.JRadioButton rdoItems;
    private javax.swing.JRadioButton rdoTaxBlank;
    private javax.swing.JRadioButton rdoTaxUnit;
    private javax.swing.JRadioButton rdoTechnic;
    private javax.swing.ButtonGroup reportTypeGroup;
    private javax.swing.ButtonGroup taxGroup;
    private javax.swing.ButtonGroup taxGroup2;
    private javax.swing.ButtonGroup timeGroup;
    private javax.swing.ButtonGroup typeGroup;
    // End of variables declaration//GEN-END:variables
}
