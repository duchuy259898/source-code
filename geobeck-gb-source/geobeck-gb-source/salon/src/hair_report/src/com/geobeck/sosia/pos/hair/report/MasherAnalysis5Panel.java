/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.geobeck.sosia.pos.hair.report;

import com.geobeck.sosia.pos.basicinfo.SimpleMaster;
import com.geobeck.sosia.pos.master.MstData;
import com.geobeck.sosia.pos.master.company.MstGroup;
import com.geobeck.sosia.pos.master.company.MstShop;
import com.geobeck.sosia.pos.master.company.MstShopCategory;
import com.geobeck.sosia.pos.master.company.MstShopCategorys;
import com.geobeck.sosia.pos.master.company.MstStaff;
import com.geobeck.sosia.pos.master.company.MstStaffs;
import com.geobeck.sosia.pos.system.SystemInfo;
import com.geobeck.sosia.pos.util.MessageUtil;
import com.geobeck.sql.ResultSetWrapper;
import com.geobeck.swing.MessageDialog;
import com.geobeck.swing.SwingUtil;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ToolTipManager;

/**
 *
 * @author nahoang
 */
public class MasherAnalysis5Panel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx {

    private MasherRanking5List masher5List = new MasherRanking5List();
    private MstShopCategorys mscs           = new MstShopCategorys();
    //IVS_LVTu start add 2015/04/16 New request #36344
    private final int defaultDismissTimeout = ToolTipManager.sharedInstance().getDismissDelay();
    //IVS_LVTu end add 2015/04/16 New request #36344
    public MasherAnalysis5Panel() {
        initComponents();
        intShopCategory();
        this.setTitle("ì∆é©ÉâÉìÉNï™êÕ");
        addMouseCursorChange();
        //ëŒè€ä˙ä‘ÇÃê›íË
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.MONTH, 1);
        cal.set(Calendar.DAY_OF_MONTH, 1);
        cal.add(Calendar.YEAR, -1);
        this.cmbTargetPeriodStartDate.setDate(cal.getTime());
        cal.add(Calendar.YEAR, 1);
        cal.add(Calendar.DAY_OF_MONTH, -1);
        this.cmbTargetPeriodEndDate.setDate(cal.getTime());
        if (SystemInfo.getAccountSetting().getReportPriceType() == 0) {
            rdoTaxBlank.setSelected(false);
            rdoTaxUnit.setSelected(true);
        } else {
            rdoTaxBlank.setSelected(true);
            rdoTaxUnit.setSelected(false);
        }
        
        int categoryId = 0;
        if (cmbCategory.getSelectedItem().equals("")) {
            categoryId = 0;
        } else {
            MstShopCategory shopCategory = null;
            shopCategory = (MstShopCategory) cmbCategory.getSelectedItem();
            categoryId = shopCategory.getShopCategoryId();
        }
        
        masher5List.loadDataHeader(categoryId);
        showHeaderRanking();       
        
        ArrayList<String> listSale = new ArrayList<String>();
        listSale = masher5List.loadDataGroupName(categoryId);
        showGroupName(categoryId, listSale, masher5List);
        addMouseCursorChangeAll();
        addMouseListenerAll();
        initRankName(masher5List);
        btnSave.setEnabled(false);
        this.setKeyListener();
        this.setSize(820, 800);
        
        //IVS_LVTu start add 2015/05/21 New request #36880
        //éÂíSìñÇéÊìæÇ∑ÇÈ
        // get all shop
        if ( SystemInfo.getCurrentShop().getShopID() == 0 ) {
            MstShop ms = new MstShop();
            ms.setShopName("");
            cmbshop.addItem(ms);
        }
        SystemInfo.initGroupShopComponents(cmbshop, 2);
        this.initChargeStaff();
        //IVS_LVTu end add 2015/05/21 New request #36880
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Panelr3c1 = new javax.swing.JPanel();
        txtr3c1 = new javax.swing.JTextField();
        Panelr4c1 = new javax.swing.JPanel();
        txtr4c1 = new javax.swing.JTextField();
        Panelr5c1 = new javax.swing.JPanel();
        txtr5c1 = new javax.swing.JTextField();
        Panelr6c1 = new javax.swing.JPanel();
        txtr6c1 = new javax.swing.JTextField();
        Panelr7c1 = new javax.swing.JPanel();
        txtr7c1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Panelr2c6 = new javax.swing.JPanel();
        txtr2c6 = new javax.swing.JTextField();
        Panelr2c2 = new javax.swing.JPanel();
        txtr2c2 = new javax.swing.JTextField();
        Panelr2c3 = new javax.swing.JPanel();
        txtr2c3 = new javax.swing.JTextField();
        Panelr2c5 = new javax.swing.JPanel();
        txtr2c5 = new javax.swing.JTextField();
        Panelr1c2 = new javax.swing.JPanel();
        txtr1c2 = new javax.swing.JTextField();
        Panelr1c3 = new javax.swing.JPanel();
        txtr1c3 = new javax.swing.JTextField();
        Panelr1c5 = new javax.swing.JPanel();
        txtr1c5 = new javax.swing.JTextField();
        Panelr1c6 = new javax.swing.JPanel();
        txtr1c6 = new javax.swing.JTextField();
        Panelr3c2 = new javax.swing.JPanel();
        txtr3c2 = new javax.swing.JTextField();
        lblr3c2 = new javax.swing.JTextField();
        Panelr2c4 = new javax.swing.JPanel();
        txtr2c4 = new javax.swing.JTextField();
        Panelr1c4 = new javax.swing.JPanel();
        txtr1c4 = new javax.swing.JTextField();
        Panelr1c7 = new javax.swing.JPanel();
        txtr1c7 = new javax.swing.JTextField();
        Panelr2c8 = new javax.swing.JPanel();
        txtr2c8 = new javax.swing.JTextField();
        Panelr3c3 = new javax.swing.JPanel();
        txtr3c3 = new javax.swing.JTextField();
        lblr3c3 = new javax.swing.JTextField();
        Panelr3c4 = new javax.swing.JPanel();
        txtr3c4 = new javax.swing.JTextField();
        lblr3c4 = new javax.swing.JTextField();
        Panelr3c5 = new javax.swing.JPanel();
        txtr3c5 = new javax.swing.JTextField();
        lblr3c5 = new javax.swing.JTextField();
        Panelr3c6 = new javax.swing.JPanel();
        txtr3c6 = new javax.swing.JTextField();
        lblr3c6 = new javax.swing.JTextField();
        Panelr4c2 = new javax.swing.JPanel();
        txtr4c2 = new javax.swing.JTextField();
        lblr4c2 = new javax.swing.JTextField();
        Panelr4c3 = new javax.swing.JPanel();
        txtr4c3 = new javax.swing.JTextField();
        lblr4c3 = new javax.swing.JTextField();
        Panelr4c4 = new javax.swing.JPanel();
        txtr4c4 = new javax.swing.JTextField();
        lblr4c4 = new javax.swing.JTextField();
        Panelr4c5 = new javax.swing.JPanel();
        txtr4c5 = new javax.swing.JTextField();
        lblr4c5 = new javax.swing.JTextField();
        Panelr4c6 = new javax.swing.JPanel();
        txtr4c6 = new javax.swing.JTextField();
        lblr4c6 = new javax.swing.JTextField();
        Panelr5c2 = new javax.swing.JPanel();
        txtr5c2 = new javax.swing.JTextField();
        lblr5c2 = new javax.swing.JTextField();
        Panelr5c3 = new javax.swing.JPanel();
        txtr5c3 = new javax.swing.JTextField();
        lblr5c3 = new javax.swing.JTextField();
        Panelr5c4 = new javax.swing.JPanel();
        txtr5c4 = new javax.swing.JTextField();
        lblr5c4 = new javax.swing.JTextField();
        Panelr5c5 = new javax.swing.JPanel();
        txtr5c5 = new javax.swing.JTextField();
        lblr5c5 = new javax.swing.JTextField();
        Panelr5c6 = new javax.swing.JPanel();
        txtr5c6 = new javax.swing.JTextField();
        lblr5c6 = new javax.swing.JTextField();
        Panelr6c4 = new javax.swing.JPanel();
        txtr6c4 = new javax.swing.JTextField();
        lblr6c4 = new javax.swing.JTextField();
        Panelr6c5 = new javax.swing.JPanel();
        txtr6c5 = new javax.swing.JTextField();
        lblr6c5 = new javax.swing.JTextField();
        Panelr6c2 = new javax.swing.JPanel();
        txtr6c2 = new javax.swing.JTextField();
        lblr6c2 = new javax.swing.JTextField();
        Panelr6c6 = new javax.swing.JPanel();
        txtr6c6 = new javax.swing.JTextField();
        lblr6c6 = new javax.swing.JTextField();
        Panelr6c3 = new javax.swing.JPanel();
        txtr6c3 = new javax.swing.JTextField();
        lblr6c3 = new javax.swing.JTextField();
        Panelr7c4 = new javax.swing.JPanel();
        txtr7c4 = new javax.swing.JTextField();
        lblr7c4 = new javax.swing.JTextField();
        Panelr7c6 = new javax.swing.JPanel();
        txtr7c6 = new javax.swing.JTextField();
        lblr7c6 = new javax.swing.JTextField();
        Panelr7c5 = new javax.swing.JPanel();
        txtr7c5 = new javax.swing.JTextField();
        lblr7c5 = new javax.swing.JTextField();
        Panelr7c3 = new javax.swing.JPanel();
        txtr7c3 = new javax.swing.JTextField();
        lblr7c3 = new javax.swing.JTextField();
        Panelr7c2 = new javax.swing.JPanel();
        txtr7c2 = new javax.swing.JTextField();
        lblr7c2 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox();
        btSetRank = new javax.swing.JButton();
        btItemGroup = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        rdoTaxUnit = new javax.swing.JRadioButton();
        rdoTaxBlank = new javax.swing.JRadioButton();
        cmbTargetPeriodStartDate = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        jLabel5 = new javax.swing.JLabel();
        cmbTargetPeriodEndDate = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        btnSearch = new javax.swing.JButton();
        setConditionButton = new javax.swing.JButton();
        setNameButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        shopLabel = new javax.swing.JLabel();
        cmbshop = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        cmbchargeStaff = new javax.swing.JComboBox();
        chargeStaffLabel = new javax.swing.JLabel();
        Panelr8c1 = new javax.swing.JPanel();
        txtr8c1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Panelr8c3 = new javax.swing.JPanel();
        txtr8c3 = new javax.swing.JTextField();
        Panelr8c5 = new javax.swing.JPanel();
        txtr8c5 = new javax.swing.JTextField();
        Panelr8c6 = new javax.swing.JPanel();
        txtr8c6 = new javax.swing.JTextField();
        jPanel58 = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jPanel64 = new javax.swing.JPanel();
        jTextField6 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblGroupName = new javax.swing.JLabel();
        Panelr8c2 = new javax.swing.JPanel();
        txtr8c2 = new javax.swing.JTextField();
        Panelr8c4 = new javax.swing.JPanel();
        txtr8c4 = new javax.swing.JTextField();
        Panelr10c6 = new javax.swing.JPanel();
        txtr10c6 = new javax.swing.JTextField();
        lblr10c6 = new javax.swing.JTextField();
        Panelr9c3 = new javax.swing.JPanel();
        txtr9c3 = new javax.swing.JTextField();
        lblr9c3 = new javax.swing.JTextField();
        Panelr9c4 = new javax.swing.JPanel();
        txtr9c4 = new javax.swing.JTextField();
        lblr9c4 = new javax.swing.JTextField();
        Panelr9c6 = new javax.swing.JPanel();
        txtr9c6 = new javax.swing.JTextField();
        lblr9c6 = new javax.swing.JTextField();
        Panelr9c5 = new javax.swing.JPanel();
        txtr9c5 = new javax.swing.JTextField();
        lblr9c5 = new javax.swing.JTextField();
        Panelr9c2 = new javax.swing.JPanel();
        txtr9c2 = new javax.swing.JTextField();
        lblr9c2 = new javax.swing.JTextField();
        Panelr10c2 = new javax.swing.JPanel();
        txtr10c2 = new javax.swing.JTextField();
        lblr10c2 = new javax.swing.JTextField();
        Panelr10c3 = new javax.swing.JPanel();
        txtr10c3 = new javax.swing.JTextField();
        lblr10c3 = new javax.swing.JTextField();
        Panelr10c4 = new javax.swing.JPanel();
        txtr10c4 = new javax.swing.JTextField();
        lblr10c4 = new javax.swing.JTextField();
        Panelr10c5 = new javax.swing.JPanel();
        txtr10c5 = new javax.swing.JTextField();
        lblr10c5 = new javax.swing.JTextField();

        setLayout(null);

        jPanel1.setLayout(null);

        Panelr3c1.setBackground(new java.awt.Color(140, 140, 140));
        Panelr3c1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr3c1.setForeground(new java.awt.Color(255, 255, 255));
        Panelr3c1.setLayout(null);

        txtr3c1.setEditable(false);
        txtr3c1.setBackground(new java.awt.Color(204, 204, 204));
        txtr3c1.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr3c1.setForeground(new java.awt.Color(255, 255, 255));
        txtr3c1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr3c1.setBorder(null);
        txtr3c1.setOpaque(false);
        Panelr3c1.add(txtr3c1);
        txtr3c1.setBounds(5, 20, 110, 13);

        jPanel1.add(Panelr3c1);
        Panelr3c1.setBounds(40, 80, 120, 60);

        Panelr4c1.setBackground(new java.awt.Color(140, 140, 140));
        Panelr4c1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr4c1.setForeground(new java.awt.Color(255, 255, 255));
        Panelr4c1.setLayout(null);

        txtr4c1.setEditable(false);
        txtr4c1.setBackground(new java.awt.Color(204, 204, 204));
        txtr4c1.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr4c1.setForeground(new java.awt.Color(255, 255, 255));
        txtr4c1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr4c1.setBorder(null);
        txtr4c1.setOpaque(false);
        Panelr4c1.add(txtr4c1);
        txtr4c1.setBounds(5, 20, 110, 13);

        jPanel1.add(Panelr4c1);
        Panelr4c1.setBounds(40, 140, 120, 60);

        Panelr5c1.setBackground(new java.awt.Color(140, 140, 140));
        Panelr5c1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr5c1.setForeground(new java.awt.Color(255, 255, 255));
        Panelr5c1.setLayout(null);

        txtr5c1.setEditable(false);
        txtr5c1.setBackground(new java.awt.Color(204, 204, 204));
        txtr5c1.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr5c1.setForeground(new java.awt.Color(255, 255, 255));
        txtr5c1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr5c1.setBorder(null);
        txtr5c1.setOpaque(false);
        Panelr5c1.add(txtr5c1);
        txtr5c1.setBounds(0, 20, 120, 13);

        jPanel1.add(Panelr5c1);
        Panelr5c1.setBounds(40, 200, 120, 60);

        Panelr6c1.setBackground(new java.awt.Color(140, 140, 140));
        Panelr6c1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr6c1.setLayout(null);

        txtr6c1.setEditable(false);
        txtr6c1.setBackground(new java.awt.Color(204, 204, 204));
        txtr6c1.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr6c1.setForeground(new java.awt.Color(255, 255, 255));
        txtr6c1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr6c1.setBorder(null);
        txtr6c1.setOpaque(false);
        Panelr6c1.add(txtr6c1);
        txtr6c1.setBounds(6, 20, 110, 13);

        jPanel1.add(Panelr6c1);
        Panelr6c1.setBounds(40, 260, 120, 60);

        Panelr7c1.setBackground(new java.awt.Color(140, 140, 140));
        Panelr7c1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr7c1.setLayout(null);

        txtr7c1.setEditable(false);
        txtr7c1.setBackground(new java.awt.Color(204, 204, 204));
        txtr7c1.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr7c1.setForeground(new java.awt.Color(255, 255, 255));
        txtr7c1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr7c1.setBorder(null);
        txtr7c1.setOpaque(false);
        Panelr7c1.add(txtr7c1);
        txtr7c1.setBounds(5, 20, 110, 13);

        jPanel1.add(Panelr7c1);
        Panelr7c1.setBounds(40, 320, 120, 60);

        jLabel6.setBackground(new java.awt.Color(140, 140, 140));
        jLabel6.setFont(new java.awt.Font("MS Gothic", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("<html>óà<br>ìX<br>é¸<br>ä˙</html>\n");
        jLabel6.setToolTipText("");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel6.setFocusCycleRoot(true);
        jLabel6.setOpaque(true);
        jPanel1.add(jLabel6);
        jLabel6.setBounds(0, 80, 40, 300);

        Panelr2c6.setBackground(new java.awt.Color(140, 140, 140));
        Panelr2c6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr2c6.setLayout(null);

        txtr2c6.setEditable(false);
        txtr2c6.setBackground(new java.awt.Color(204, 204, 204));
        txtr2c6.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr2c6.setForeground(new java.awt.Color(255, 255, 255));
        txtr2c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr2c6.setBorder(null);
        txtr2c6.setOpaque(false);
        Panelr2c6.add(txtr2c6);
        txtr2c6.setBounds(10, 10, 100, 20);

        jPanel1.add(Panelr2c6);
        Panelr2c6.setBounds(640, 40, 120, 40);

        Panelr2c2.setBackground(new java.awt.Color(140, 140, 140));
        Panelr2c2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr2c2.setLayout(null);

        txtr2c2.setEditable(false);
        txtr2c2.setBackground(new java.awt.Color(204, 204, 204));
        txtr2c2.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr2c2.setForeground(new java.awt.Color(255, 255, 255));
        txtr2c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr2c2.setBorder(null);
        txtr2c2.setOpaque(false);
        Panelr2c2.add(txtr2c2);
        txtr2c2.setBounds(10, 4, 100, 30);

        jPanel1.add(Panelr2c2);
        Panelr2c2.setBounds(160, 40, 120, 40);

        Panelr2c3.setBackground(new java.awt.Color(140, 140, 140));
        Panelr2c3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr2c3.setLayout(null);

        txtr2c3.setEditable(false);
        txtr2c3.setBackground(new java.awt.Color(204, 204, 204));
        txtr2c3.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr2c3.setForeground(new java.awt.Color(255, 255, 255));
        txtr2c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr2c3.setBorder(null);
        txtr2c3.setOpaque(false);
        txtr2c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtr2c3ActionPerformed(evt);
            }
        });
        Panelr2c3.add(txtr2c3);
        txtr2c3.setBounds(10, 4, 100, 30);

        jPanel1.add(Panelr2c3);
        Panelr2c3.setBounds(280, 40, 120, 40);

        Panelr2c5.setBackground(new java.awt.Color(140, 140, 140));
        Panelr2c5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr2c5.setLayout(null);

        txtr2c5.setEditable(false);
        txtr2c5.setBackground(new java.awt.Color(204, 204, 204));
        txtr2c5.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr2c5.setForeground(new java.awt.Color(255, 255, 255));
        txtr2c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr2c5.setBorder(null);
        txtr2c5.setOpaque(false);
        Panelr2c5.add(txtr2c5);
        txtr2c5.setBounds(10, 10, 100, 20);

        jPanel1.add(Panelr2c5);
        Panelr2c5.setBounds(520, 40, 120, 40);

        Panelr1c2.setBackground(new java.awt.Color(140, 140, 140));
        Panelr1c2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr1c2.setLayout(null);

        txtr1c2.setEditable(false);
        txtr1c2.setBackground(new java.awt.Color(204, 204, 204));
        txtr1c2.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr1c2.setForeground(new java.awt.Color(255, 255, 255));
        txtr1c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr1c2.setBorder(null);
        txtr1c2.setOpaque(false);
        Panelr1c2.add(txtr1c2);
        txtr1c2.setBounds(10, 4, 100, 30);

        jPanel1.add(Panelr1c2);
        Panelr1c2.setBounds(160, 0, 120, 40);

        Panelr1c3.setBackground(new java.awt.Color(140, 140, 140));
        Panelr1c3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr1c3.setLayout(null);

        txtr1c3.setEditable(false);
        txtr1c3.setBackground(new java.awt.Color(204, 204, 204));
        txtr1c3.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr1c3.setForeground(new java.awt.Color(255, 255, 255));
        txtr1c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr1c3.setBorder(null);
        txtr1c3.setOpaque(false);
        Panelr1c3.add(txtr1c3);
        txtr1c3.setBounds(10, 10, 100, 20);

        jPanel1.add(Panelr1c3);
        Panelr1c3.setBounds(280, 0, 120, 40);

        Panelr1c5.setBackground(new java.awt.Color(140, 140, 140));
        Panelr1c5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr1c5.setLayout(null);

        txtr1c5.setEditable(false);
        txtr1c5.setBackground(new java.awt.Color(204, 204, 204));
        txtr1c5.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr1c5.setForeground(new java.awt.Color(255, 255, 255));
        txtr1c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr1c5.setBorder(null);
        txtr1c5.setOpaque(false);
        Panelr1c5.add(txtr1c5);
        txtr1c5.setBounds(10, 10, 100, 20);

        jPanel1.add(Panelr1c5);
        Panelr1c5.setBounds(520, 0, 120, 40);

        Panelr1c6.setBackground(new java.awt.Color(140, 140, 140));
        Panelr1c6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr1c6.setLayout(null);

        txtr1c6.setEditable(false);
        txtr1c6.setBackground(new java.awt.Color(204, 204, 204));
        txtr1c6.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr1c6.setForeground(new java.awt.Color(255, 255, 255));
        txtr1c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr1c6.setBorder(null);
        txtr1c6.setOpaque(false);
        Panelr1c6.add(txtr1c6);
        txtr1c6.setBounds(10, 10, 100, 20);

        jPanel1.add(Panelr1c6);
        Panelr1c6.setBounds(640, 0, 120, 40);

        Panelr3c2.setBackground(new java.awt.Color(255, 255, 255));
        Panelr3c2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr3c2.setLayout(null);

        txtr3c2.setEditable(false);
        txtr3c2.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr3c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr3c2.setText("0êl");
        txtr3c2.setBorder(null);
        txtr3c2.setOpaque(false);
        Panelr3c2.add(txtr3c2);
        txtr3c2.setBounds(10, 30, 100, 30);

        lblr3c2.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr3c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr3c2.setBorder(null);
        lblr3c2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr3c2.setEnabled(false);
        lblr3c2.setOpaque(false);
        Panelr3c2.add(lblr3c2);
        lblr3c2.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr3c2);
        Panelr3c2.setBounds(160, 80, 120, 60);

        Panelr2c4.setBackground(new java.awt.Color(140, 140, 140));
        Panelr2c4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr2c4.setLayout(null);

        txtr2c4.setEditable(false);
        txtr2c4.setBackground(new java.awt.Color(204, 204, 204));
        txtr2c4.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr2c4.setForeground(new java.awt.Color(255, 255, 255));
        txtr2c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr2c4.setBorder(null);
        txtr2c4.setOpaque(false);
        txtr2c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtr2c4ActionPerformed(evt);
            }
        });
        Panelr2c4.add(txtr2c4);
        txtr2c4.setBounds(10, 10, 100, 20);

        jPanel1.add(Panelr2c4);
        Panelr2c4.setBounds(400, 40, 120, 40);

        Panelr1c4.setBackground(new java.awt.Color(140, 140, 140));
        Panelr1c4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr1c4.setLayout(null);

        txtr1c4.setEditable(false);
        txtr1c4.setBackground(new java.awt.Color(204, 204, 204));
        txtr1c4.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr1c4.setForeground(new java.awt.Color(255, 255, 255));
        txtr1c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr1c4.setBorder(null);
        txtr1c4.setOpaque(false);
        Panelr1c4.add(txtr1c4);
        txtr1c4.setBounds(10, 10, 100, 20);

        jPanel1.add(Panelr1c4);
        Panelr1c4.setBounds(400, 0, 120, 40);

        Panelr1c7.setBackground(new java.awt.Color(140, 140, 140));
        Panelr1c7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr1c7.setLayout(null);

        txtr1c7.setEditable(false);
        txtr1c7.setBackground(new java.awt.Color(204, 204, 204));
        txtr1c7.setFont(new java.awt.Font("MS UI Gothic", 1, 14)); // NOI18N
        txtr1c7.setForeground(new java.awt.Color(255, 255, 255));
        txtr1c7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr1c7.setText("óàìXíPâø");
        txtr1c7.setBorder(null);
        txtr1c7.setOpaque(false);
        Panelr1c7.add(txtr1c7);
        txtr1c7.setBounds(10, 4, 140, 30);

        jPanel1.add(Panelr1c7);
        Panelr1c7.setBounds(0, 0, 160, 40);

        Panelr2c8.setBackground(new java.awt.Color(140, 140, 140));
        Panelr2c8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr2c8.setLayout(null);

        txtr2c8.setEditable(false);
        txtr2c8.setBackground(new java.awt.Color(204, 204, 204));
        txtr2c8.setFont(new java.awt.Font("MS UI Gothic", 1, 14)); // NOI18N
        txtr2c8.setForeground(new java.awt.Color(255, 255, 255));
        txtr2c8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr2c8.setText("îNä‘îÑè„");
        txtr2c8.setBorder(null);
        txtr2c8.setOpaque(false);
        Panelr2c8.add(txtr2c8);
        txtr2c8.setBounds(10, 4, 140, 30);

        jPanel1.add(Panelr2c8);
        Panelr2c8.setBounds(0, 40, 160, 40);

        Panelr3c3.setBackground(new java.awt.Color(255, 255, 255));
        Panelr3c3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr3c3.setLayout(null);

        txtr3c3.setEditable(false);
        txtr3c3.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr3c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr3c3.setText("0êl");
        txtr3c3.setBorder(null);
        txtr3c3.setOpaque(false);
        Panelr3c3.add(txtr3c3);
        txtr3c3.setBounds(10, 30, 100, 30);

        lblr3c3.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr3c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr3c3.setBorder(null);
        lblr3c3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr3c3.setEnabled(false);
        lblr3c3.setOpaque(false);
        Panelr3c3.add(lblr3c3);
        lblr3c3.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr3c3);
        Panelr3c3.setBounds(280, 80, 120, 60);

        Panelr3c4.setBackground(new java.awt.Color(255, 255, 255));
        Panelr3c4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr3c4.setLayout(null);

        txtr3c4.setEditable(false);
        txtr3c4.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr3c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr3c4.setText("0êl");
        txtr3c4.setBorder(null);
        txtr3c4.setOpaque(false);
        Panelr3c4.add(txtr3c4);
        txtr3c4.setBounds(10, 30, 100, 30);

        lblr3c4.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr3c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr3c4.setBorder(null);
        lblr3c4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr3c4.setEnabled(false);
        lblr3c4.setOpaque(false);
        Panelr3c4.add(lblr3c4);
        lblr3c4.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr3c4);
        Panelr3c4.setBounds(400, 80, 120, 60);

        Panelr3c5.setBackground(new java.awt.Color(255, 255, 255));
        Panelr3c5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr3c5.setLayout(null);

        txtr3c5.setEditable(false);
        txtr3c5.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr3c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr3c5.setText("0êl");
        txtr3c5.setBorder(null);
        txtr3c5.setOpaque(false);
        Panelr3c5.add(txtr3c5);
        txtr3c5.setBounds(10, 30, 100, 30);

        lblr3c5.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr3c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr3c5.setBorder(null);
        lblr3c5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr3c5.setEnabled(false);
        lblr3c5.setOpaque(false);
        Panelr3c5.add(lblr3c5);
        lblr3c5.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr3c5);
        Panelr3c5.setBounds(520, 80, 120, 60);

        Panelr3c6.setBackground(new java.awt.Color(255, 255, 255));
        Panelr3c6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr3c6.setLayout(null);

        txtr3c6.setEditable(false);
        txtr3c6.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr3c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr3c6.setText("0êl");
        txtr3c6.setBorder(null);
        txtr3c6.setOpaque(false);
        Panelr3c6.add(txtr3c6);
        txtr3c6.setBounds(10, 30, 100, 30);

        lblr3c6.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr3c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr3c6.setBorder(null);
        lblr3c6.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr3c6.setEnabled(false);
        lblr3c6.setOpaque(false);
        Panelr3c6.add(lblr3c6);
        lblr3c6.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr3c6);
        Panelr3c6.setBounds(640, 80, 120, 60);

        Panelr4c2.setBackground(new java.awt.Color(255, 255, 255));
        Panelr4c2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr4c2.setLayout(null);

        txtr4c2.setEditable(false);
        txtr4c2.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr4c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr4c2.setText("0êl");
        txtr4c2.setBorder(null);
        txtr4c2.setOpaque(false);
        Panelr4c2.add(txtr4c2);
        txtr4c2.setBounds(10, 30, 100, 30);

        lblr4c2.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr4c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr4c2.setBorder(null);
        lblr4c2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr4c2.setEnabled(false);
        lblr4c2.setOpaque(false);
        Panelr4c2.add(lblr4c2);
        lblr4c2.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr4c2);
        Panelr4c2.setBounds(160, 140, 120, 60);

        Panelr4c3.setBackground(new java.awt.Color(255, 255, 255));
        Panelr4c3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr4c3.setLayout(null);

        txtr4c3.setEditable(false);
        txtr4c3.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr4c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr4c3.setText("0êl");
        txtr4c3.setBorder(null);
        txtr4c3.setOpaque(false);
        Panelr4c3.add(txtr4c3);
        txtr4c3.setBounds(10, 30, 100, 30);

        lblr4c3.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr4c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr4c3.setBorder(null);
        lblr4c3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr4c3.setEnabled(false);
        lblr4c3.setOpaque(false);
        Panelr4c3.add(lblr4c3);
        lblr4c3.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr4c3);
        Panelr4c3.setBounds(280, 140, 120, 60);

        Panelr4c4.setBackground(new java.awt.Color(255, 255, 255));
        Panelr4c4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr4c4.setLayout(null);

        txtr4c4.setEditable(false);
        txtr4c4.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr4c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr4c4.setText("0êl");
        txtr4c4.setBorder(null);
        txtr4c4.setOpaque(false);
        Panelr4c4.add(txtr4c4);
        txtr4c4.setBounds(10, 30, 100, 30);

        lblr4c4.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr4c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr4c4.setBorder(null);
        lblr4c4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr4c4.setEnabled(false);
        lblr4c4.setOpaque(false);
        Panelr4c4.add(lblr4c4);
        lblr4c4.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr4c4);
        Panelr4c4.setBounds(400, 140, 120, 60);

        Panelr4c5.setBackground(new java.awt.Color(255, 255, 255));
        Panelr4c5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr4c5.setLayout(null);

        txtr4c5.setEditable(false);
        txtr4c5.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr4c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr4c5.setText("0êl");
        txtr4c5.setBorder(null);
        txtr4c5.setOpaque(false);
        Panelr4c5.add(txtr4c5);
        txtr4c5.setBounds(10, 30, 100, 30);

        lblr4c5.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr4c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr4c5.setBorder(null);
        lblr4c5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr4c5.setEnabled(false);
        lblr4c5.setOpaque(false);
        Panelr4c5.add(lblr4c5);
        lblr4c5.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr4c5);
        Panelr4c5.setBounds(520, 140, 120, 60);

        Panelr4c6.setBackground(new java.awt.Color(255, 255, 255));
        Panelr4c6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr4c6.setLayout(null);

        txtr4c6.setEditable(false);
        txtr4c6.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr4c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr4c6.setText("0êl");
        txtr4c6.setBorder(null);
        txtr4c6.setOpaque(false);
        Panelr4c6.add(txtr4c6);
        txtr4c6.setBounds(10, 30, 100, 30);

        lblr4c6.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr4c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr4c6.setBorder(null);
        lblr4c6.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr4c6.setEnabled(false);
        lblr4c6.setOpaque(false);
        Panelr4c6.add(lblr4c6);
        lblr4c6.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr4c6);
        Panelr4c6.setBounds(640, 140, 120, 60);

        Panelr5c2.setBackground(new java.awt.Color(255, 255, 255));
        Panelr5c2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr5c2.setLayout(null);

        txtr5c2.setEditable(false);
        txtr5c2.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr5c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr5c2.setText("0êl");
        txtr5c2.setBorder(null);
        txtr5c2.setOpaque(false);
        Panelr5c2.add(txtr5c2);
        txtr5c2.setBounds(10, 30, 100, 30);

        lblr5c2.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr5c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr5c2.setBorder(null);
        lblr5c2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr5c2.setEnabled(false);
        lblr5c2.setOpaque(false);
        Panelr5c2.add(lblr5c2);
        lblr5c2.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr5c2);
        Panelr5c2.setBounds(160, 200, 120, 60);

        Panelr5c3.setBackground(new java.awt.Color(255, 255, 255));
        Panelr5c3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr5c3.setLayout(null);

        txtr5c3.setEditable(false);
        txtr5c3.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr5c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr5c3.setText("0êl");
        txtr5c3.setBorder(null);
        txtr5c3.setOpaque(false);
        Panelr5c3.add(txtr5c3);
        txtr5c3.setBounds(10, 30, 100, 30);

        lblr5c3.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr5c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr5c3.setBorder(null);
        lblr5c3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr5c3.setEnabled(false);
        lblr5c3.setOpaque(false);
        Panelr5c3.add(lblr5c3);
        lblr5c3.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr5c3);
        Panelr5c3.setBounds(280, 200, 120, 60);

        Panelr5c4.setBackground(new java.awt.Color(255, 255, 255));
        Panelr5c4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr5c4.setLayout(null);

        txtr5c4.setEditable(false);
        txtr5c4.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr5c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr5c4.setText("0êl");
        txtr5c4.setBorder(null);
        txtr5c4.setOpaque(false);
        Panelr5c4.add(txtr5c4);
        txtr5c4.setBounds(10, 30, 100, 30);

        lblr5c4.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr5c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr5c4.setBorder(null);
        lblr5c4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr5c4.setEnabled(false);
        lblr5c4.setOpaque(false);
        Panelr5c4.add(lblr5c4);
        lblr5c4.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr5c4);
        Panelr5c4.setBounds(400, 200, 120, 60);

        Panelr5c5.setBackground(new java.awt.Color(255, 255, 255));
        Panelr5c5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr5c5.setLayout(null);

        txtr5c5.setEditable(false);
        txtr5c5.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr5c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr5c5.setText("0êl");
        txtr5c5.setBorder(null);
        txtr5c5.setOpaque(false);
        Panelr5c5.add(txtr5c5);
        txtr5c5.setBounds(10, 30, 100, 30);

        lblr5c5.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr5c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr5c5.setBorder(null);
        lblr5c5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr5c5.setEnabled(false);
        lblr5c5.setOpaque(false);
        Panelr5c5.add(lblr5c5);
        lblr5c5.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr5c5);
        Panelr5c5.setBounds(520, 200, 120, 60);

        Panelr5c6.setBackground(new java.awt.Color(255, 255, 255));
        Panelr5c6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr5c6.setLayout(null);

        txtr5c6.setEditable(false);
        txtr5c6.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr5c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr5c6.setText("0êl");
        txtr5c6.setBorder(null);
        txtr5c6.setOpaque(false);
        Panelr5c6.add(txtr5c6);
        txtr5c6.setBounds(10, 30, 100, 30);

        lblr5c6.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr5c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr5c6.setBorder(null);
        lblr5c6.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr5c6.setEnabled(false);
        lblr5c6.setOpaque(false);
        Panelr5c6.add(lblr5c6);
        lblr5c6.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr5c6);
        Panelr5c6.setBounds(640, 200, 120, 60);

        Panelr6c4.setBackground(new java.awt.Color(255, 255, 255));
        Panelr6c4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr6c4.setLayout(null);

        txtr6c4.setEditable(false);
        txtr6c4.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr6c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr6c4.setText("0êl");
        txtr6c4.setBorder(null);
        txtr6c4.setOpaque(false);
        Panelr6c4.add(txtr6c4);
        txtr6c4.setBounds(10, 30, 100, 30);

        lblr6c4.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr6c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr6c4.setBorder(null);
        lblr6c4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr6c4.setEnabled(false);
        lblr6c4.setOpaque(false);
        Panelr6c4.add(lblr6c4);
        lblr6c4.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr6c4);
        Panelr6c4.setBounds(400, 260, 120, 60);

        Panelr6c5.setBackground(new java.awt.Color(255, 255, 255));
        Panelr6c5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr6c5.setLayout(null);

        txtr6c5.setEditable(false);
        txtr6c5.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr6c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr6c5.setText("0êl");
        txtr6c5.setBorder(null);
        txtr6c5.setOpaque(false);
        Panelr6c5.add(txtr6c5);
        txtr6c5.setBounds(10, 30, 100, 30);

        lblr6c5.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr6c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr6c5.setBorder(null);
        lblr6c5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr6c5.setEnabled(false);
        lblr6c5.setOpaque(false);
        Panelr6c5.add(lblr6c5);
        lblr6c5.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr6c5);
        Panelr6c5.setBounds(520, 260, 120, 60);

        Panelr6c2.setBackground(new java.awt.Color(255, 255, 255));
        Panelr6c2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr6c2.setLayout(null);

        txtr6c2.setEditable(false);
        txtr6c2.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr6c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr6c2.setText("0êl");
        txtr6c2.setBorder(null);
        txtr6c2.setOpaque(false);
        Panelr6c2.add(txtr6c2);
        txtr6c2.setBounds(10, 30, 100, 30);

        lblr6c2.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr6c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr6c2.setBorder(null);
        lblr6c2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr6c2.setEnabled(false);
        lblr6c2.setOpaque(false);
        Panelr6c2.add(lblr6c2);
        lblr6c2.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr6c2);
        Panelr6c2.setBounds(160, 260, 120, 60);

        Panelr6c6.setBackground(new java.awt.Color(255, 255, 255));
        Panelr6c6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr6c6.setLayout(null);

        txtr6c6.setEditable(false);
        txtr6c6.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr6c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr6c6.setText("0êl");
        txtr6c6.setBorder(null);
        txtr6c6.setOpaque(false);
        Panelr6c6.add(txtr6c6);
        txtr6c6.setBounds(10, 30, 100, 30);

        lblr6c6.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr6c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr6c6.setBorder(null);
        lblr6c6.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr6c6.setEnabled(false);
        lblr6c6.setOpaque(false);
        Panelr6c6.add(lblr6c6);
        lblr6c6.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr6c6);
        Panelr6c6.setBounds(640, 260, 120, 60);

        Panelr6c3.setBackground(new java.awt.Color(255, 255, 255));
        Panelr6c3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr6c3.setLayout(null);

        txtr6c3.setEditable(false);
        txtr6c3.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr6c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr6c3.setText("0êl");
        txtr6c3.setBorder(null);
        txtr6c3.setOpaque(false);
        Panelr6c3.add(txtr6c3);
        txtr6c3.setBounds(10, 30, 100, 30);

        lblr6c3.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr6c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr6c3.setBorder(null);
        lblr6c3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr6c3.setEnabled(false);
        lblr6c3.setOpaque(false);
        Panelr6c3.add(lblr6c3);
        lblr6c3.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr6c3);
        Panelr6c3.setBounds(280, 260, 120, 60);

        Panelr7c4.setBackground(new java.awt.Color(255, 255, 255));
        Panelr7c4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr7c4.setLayout(null);

        txtr7c4.setEditable(false);
        txtr7c4.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr7c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr7c4.setText("0êl");
        txtr7c4.setBorder(null);
        txtr7c4.setOpaque(false);
        Panelr7c4.add(txtr7c4);
        txtr7c4.setBounds(10, 30, 100, 30);

        lblr7c4.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr7c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr7c4.setBorder(null);
        lblr7c4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr7c4.setEnabled(false);
        lblr7c4.setOpaque(false);
        Panelr7c4.add(lblr7c4);
        lblr7c4.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr7c4);
        Panelr7c4.setBounds(400, 320, 120, 60);

        Panelr7c6.setBackground(new java.awt.Color(255, 255, 255));
        Panelr7c6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr7c6.setLayout(null);

        txtr7c6.setEditable(false);
        txtr7c6.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr7c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr7c6.setText("0êl");
        txtr7c6.setBorder(null);
        txtr7c6.setOpaque(false);
        Panelr7c6.add(txtr7c6);
        txtr7c6.setBounds(10, 30, 100, 30);

        lblr7c6.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr7c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr7c6.setBorder(null);
        lblr7c6.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr7c6.setEnabled(false);
        lblr7c6.setOpaque(false);
        Panelr7c6.add(lblr7c6);
        lblr7c6.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr7c6);
        Panelr7c6.setBounds(640, 320, 120, 60);

        Panelr7c5.setBackground(new java.awt.Color(255, 255, 255));
        Panelr7c5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr7c5.setLayout(null);

        txtr7c5.setEditable(false);
        txtr7c5.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr7c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr7c5.setText("0êl");
        txtr7c5.setBorder(null);
        txtr7c5.setOpaque(false);
        Panelr7c5.add(txtr7c5);
        txtr7c5.setBounds(10, 30, 100, 30);

        lblr7c5.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr7c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr7c5.setBorder(null);
        lblr7c5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr7c5.setEnabled(false);
        lblr7c5.setOpaque(false);
        Panelr7c5.add(lblr7c5);
        lblr7c5.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr7c5);
        Panelr7c5.setBounds(520, 320, 120, 60);

        Panelr7c3.setBackground(new java.awt.Color(255, 255, 255));
        Panelr7c3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr7c3.setLayout(null);

        txtr7c3.setEditable(false);
        txtr7c3.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr7c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr7c3.setText("0êl");
        txtr7c3.setBorder(null);
        txtr7c3.setOpaque(false);
        Panelr7c3.add(txtr7c3);
        txtr7c3.setBounds(10, 30, 100, 30);

        lblr7c3.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr7c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr7c3.setBorder(null);
        lblr7c3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr7c3.setEnabled(false);
        lblr7c3.setOpaque(false);
        Panelr7c3.add(lblr7c3);
        lblr7c3.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr7c3);
        Panelr7c3.setBounds(280, 320, 120, 60);

        Panelr7c2.setBackground(new java.awt.Color(255, 255, 255));
        Panelr7c2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr7c2.setLayout(null);

        txtr7c2.setEditable(false);
        txtr7c2.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr7c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr7c2.setText("0êl");
        txtr7c2.setBorder(null);
        txtr7c2.setOpaque(false);
        Panelr7c2.add(txtr7c2);
        txtr7c2.setBounds(10, 30, 100, 30);

        lblr7c2.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr7c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr7c2.setBorder(null);
        lblr7c2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr7c2.setEnabled(false);
        lblr7c2.setOpaque(false);
        Panelr7c2.add(lblr7c2);
        lblr7c2.setBounds(0, 10, 120, 20);

        jPanel1.add(Panelr7c2);
        Panelr7c2.setBounds(160, 320, 120, 60);

        add(jPanel1);
        jPanel1.setBounds(20, 110, 760, 380);
        jPanel1.setOpaque(false);

        jPanel5.setOpaque(false);

        jLabel7.setText("ä˙ä‘");

        jLabel17.setText("ê≈ãÊï™");

        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel());
        cmbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoryActionPerformed(evt);
            }
        });

        btSetRank.setIcon(SystemInfo.getImageIcon("/button/common/rank_setting_off.jpg"));
        btSetRank.setPressedIcon(SystemInfo.getImageIcon("/button/common/rank_setting_on.jpg"));
        btSetRank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSetRankActionPerformed(evt);
            }
        });

        btItemGroup.setIcon(SystemInfo.getImageIcon("/button/common/item_group_setting_off.jpg"));
        btItemGroup.setPressedIcon(SystemInfo.getImageIcon("/button/common/item_group_setting_on.jpg"));
        btItemGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btItemGroupActionPerformed(evt);
            }
        });

        btnSave.setIcon(SystemInfo.getImageIcon("/button/common/rank_regist_off.jpg"));
        btnSave.setPressedIcon(SystemInfo.getImageIcon("/button/common/rank_regist_on.jpg"));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel3.setText("ã∆ë‘");

        rdoTaxUnit.setText("ê≈çû");
        rdoTaxUnit.setOpaque(false);
        rdoTaxUnit.setPreferredSize(new java.awt.Dimension(47, 16));
        rdoTaxUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoTaxUnitActionPerformed(evt);
            }
        });

        rdoTaxBlank.setText(" ê≈î≤");
        rdoTaxBlank.setOpaque(false);
        rdoTaxBlank.setPreferredSize(new java.awt.Dimension(51, 16));
        rdoTaxBlank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoTaxBlankActionPerformed(evt);
            }
        });

        cmbTargetPeriodStartDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodStartDate.setForeground(java.awt.Color.white);
        cmbTargetPeriodStartDate.setMaximumSize(new java.awt.Dimension(65, 20));
        cmbTargetPeriodStartDate.setMinimumSize(new java.awt.Dimension(65, 20));
        cmbTargetPeriodStartDate.setPreferredSize(new java.awt.Dimension(85, 20));
        cmbTargetPeriodStartDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodStartDateFocusGained(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Å`");

        cmbTargetPeriodEndDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodEndDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodEndDateFocusGained(evt);
            }
        });

        btnSearch.setIcon(SystemInfo.getImageIcon("/button/common/show_off.jpg"));
        btnSearch.setBorderPainted(false);
        btnSearch.setPressedIcon(SystemInfo.getImageIcon("/button/common/show_on.jpg"));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        setConditionButton.setIcon(SystemInfo.getImageIcon("/button/common/condition_setting_off.jpg"));
        setConditionButton.setBorderPainted(false);
        setConditionButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/condition_setting_on.jpg"));
        setConditionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setConditionButtonActionPerformed(evt);
            }
        });

        setNameButton.setIcon(SystemInfo.getImageIcon("/button/common/title_setting_off.jpg"));
        setNameButton.setBorderPainted(false);
        setNameButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/title_setting_on.jpg"));
        setNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setNameButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("MS Gothic", 1, 14)); // NOI18N
        jLabel2.setText("ÅÉï\ÇPÅÑ");

        shopLabel.setText("ìXï‹");

        cmbshop.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbshop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbshopActionPerformed(evt);
            }
        });

        cmbchargeStaff.setMaximumRowCount(12);
        cmbchargeStaff.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbchargeStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbchargeStaffActionPerformed(evt);
            }
        });

        chargeStaffLabel.setText("éÂíSìñé“");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                    .addComponent(jLabel17)
                        .addGap(28, 28, 28)
                        .addComponent(rdoTaxUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdoTaxBlank, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 235, Short.MAX_VALUE)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(shopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(cmbTargetPeriodStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cmbTargetPeriodEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cmbshop, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbCategory, javax.swing.GroupLayout.Alignment.LEADING, 0, 124, Short.MAX_VALUE))
                        .addGap(24, 24, 24)
                        .addComponent(chargeStaffLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbchargeStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btItemGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setNameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btSetRank, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setConditionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmbTargetPeriodStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbTargetPeriodEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7))
                    .addComponent(setNameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSetRank, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbshop, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(3, 3, 3))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(chargeStaffLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbchargeStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(setConditionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btItemGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                            .addComponent(rdoTaxUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdoTaxBlank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        add(jPanel5);
        jPanel5.setBounds(20, 0, 780, 110);

        Panelr8c1.setBackground(new java.awt.Color(140, 140, 140));
        Panelr8c1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr8c1.setLayout(null);

        txtr8c1.setEditable(false);
        txtr8c1.setBackground(new java.awt.Color(204, 204, 204));
        txtr8c1.setFont(new java.awt.Font("MS UI Gothic", 1, 11)); // NOI18N
        txtr8c1.setForeground(new java.awt.Color(255, 255, 255));
        txtr8c1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr8c1.setBorder(null);
        txtr8c1.setOpaque(false);
        Panelr8c1.add(txtr8c1);
        txtr8c1.setBounds(0, 0, 160, 20);

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("MS Gothic", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("ÇÃìXîÃçáåvã‡äz");
        Panelr8c1.add(jLabel9);
        jLabel9.setBounds(10, 20, 140, 12);

        add(Panelr8c1);
        Panelr8c1.setBounds(20, 520, 160, 40);

        Panelr8c3.setBackground(new java.awt.Color(140, 140, 140));
        Panelr8c3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr8c3.setLayout(null);

        txtr8c3.setEditable(false);
        txtr8c3.setBackground(new java.awt.Color(204, 204, 204));
        txtr8c3.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr8c3.setForeground(new java.awt.Color(255, 255, 255));
        txtr8c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr8c3.setBorder(null);
        txtr8c3.setOpaque(false);
        Panelr8c3.add(txtr8c3);
        txtr8c3.setBounds(10, 20, 100, 13);

        add(Panelr8c3);
        Panelr8c3.setBounds(300, 520, 120, 40);

        Panelr8c5.setBackground(new java.awt.Color(140, 140, 140));
        Panelr8c5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr8c5.setLayout(null);

        txtr8c5.setEditable(false);
        txtr8c5.setBackground(new java.awt.Color(204, 204, 204));
        txtr8c5.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr8c5.setForeground(new java.awt.Color(255, 255, 255));
        txtr8c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr8c5.setBorder(null);
        txtr8c5.setOpaque(false);
        Panelr8c5.add(txtr8c5);
        txtr8c5.setBounds(10, 20, 100, 13);

        add(Panelr8c5);
        Panelr8c5.setBounds(540, 520, 120, 40);

        Panelr8c6.setBackground(new java.awt.Color(140, 140, 140));
        Panelr8c6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr8c6.setLayout(null);

        txtr8c6.setEditable(false);
        txtr8c6.setBackground(new java.awt.Color(204, 204, 204));
        txtr8c6.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr8c6.setForeground(new java.awt.Color(255, 255, 255));
        txtr8c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr8c6.setBorder(null);
        txtr8c6.setOpaque(false);
        txtr8c6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtr8c6ActionPerformed(evt);
            }
        });
        Panelr8c6.add(txtr8c6);
        txtr8c6.setBounds(10, 20, 100, 13);

        add(Panelr8c6);
        Panelr8c6.setBounds(660, 520, 120, 40);

        jPanel58.setBackground(new java.awt.Color(140, 140, 140));
        jPanel58.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel58.setLayout(null);

        jTextField5.setEditable(false);
        jTextField5.setBackground(new java.awt.Color(204, 204, 204));
        jTextField5.setFont(new java.awt.Font("MS Gothic", 1, 11)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(255, 255, 255));
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField5.setText("îÉÇ¡ÇƒÇ¢ÇÈ");
        jTextField5.setBorder(null);
        jTextField5.setOpaque(false);
        jPanel58.add(jTextField5);
        jTextField5.setBounds(5, 20, 80, 12);

        add(jPanel58);
        jPanel58.setBounds(100, 560, 80, 60);

        jPanel64.setBackground(new java.awt.Color(140, 140, 140));
        jPanel64.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel64.setLayout(null);

        jTextField6.setEditable(false);
        jTextField6.setBackground(new java.awt.Color(204, 204, 204));
        jTextField6.setFont(new java.awt.Font("MS Gothic", 1, 11)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(255, 255, 255));
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.setText("îÉÇ¡ÇƒÇ¢Ç»Ç¢");
        jTextField6.setBorder(null);
        jTextField6.setOpaque(false);
        jPanel64.add(jTextField6);
        jTextField6.setBounds(0, 20, 80, 14);

        add(jPanel64);
        jPanel64.setBounds(100, 620, 80, 60);

        jLabel1.setFont(new java.awt.Font("MS Gothic", 1, 14)); // NOI18N
        jLabel1.setText("ÅÉï\ÇQÅÑ");
        add(jLabel1);
        jLabel1.setBounds(20, 500, 60, 20);

        lblGroupName.setBackground(new java.awt.Color(140, 140, 140));
        lblGroupName.setFont(new java.awt.Font("MS UI Gothic", 1, 11)); // NOI18N
        lblGroupName.setForeground(new java.awt.Color(255, 255, 255));
        lblGroupName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGroupName.setText(" ");
        lblGroupName.setToolTipText("");
        lblGroupName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblGroupName.setFocusCycleRoot(true);
        lblGroupName.setOpaque(true);
        add(lblGroupName);
        lblGroupName.setBounds(20, 560, 80, 120);

        Panelr8c2.setBackground(new java.awt.Color(140, 140, 140));
        Panelr8c2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr8c2.setForeground(new java.awt.Color(255, 255, 255));
        Panelr8c2.setLayout(null);

        txtr8c2.setEditable(false);
        txtr8c2.setBackground(new java.awt.Color(204, 204, 204));
        txtr8c2.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr8c2.setForeground(new java.awt.Color(255, 255, 255));
        txtr8c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr8c2.setBorder(null);
        txtr8c2.setOpaque(false);
        Panelr8c2.add(txtr8c2);
        txtr8c2.setBounds(10, 20, 100, 13);

        add(Panelr8c2);
        Panelr8c2.setBounds(180, 520, 120, 40);

        Panelr8c4.setBackground(new java.awt.Color(140, 140, 140));
        Panelr8c4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr8c4.setLayout(null);

        txtr8c4.setEditable(false);
        txtr8c4.setBackground(new java.awt.Color(204, 204, 204));
        txtr8c4.setFont(new java.awt.Font("MS UI Gothic", 1, 12)); // NOI18N
        txtr8c4.setForeground(new java.awt.Color(255, 255, 255));
        txtr8c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr8c4.setBorder(null);
        txtr8c4.setOpaque(false);
        Panelr8c4.add(txtr8c4);
        txtr8c4.setBounds(10, 20, 100, 13);

        add(Panelr8c4);
        Panelr8c4.setBounds(420, 520, 120, 40);

        Panelr10c6.setBackground(new java.awt.Color(255, 255, 255));
        Panelr10c6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr10c6.setLayout(null);

        txtr10c6.setEditable(false);
        txtr10c6.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr10c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr10c6.setText("0êl");
        txtr10c6.setBorder(null);
        txtr10c6.setOpaque(false);
        Panelr10c6.add(txtr10c6);
        txtr10c6.setBounds(10, 30, 100, 30);

        lblr10c6.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr10c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr10c6.setBorder(null);
        lblr10c6.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr10c6.setEnabled(false);
        lblr10c6.setOpaque(false);
        Panelr10c6.add(lblr10c6);
        lblr10c6.setBounds(0, 10, 120, 20);

        add(Panelr10c6);
        Panelr10c6.setBounds(660, 620, 120, 60);

        Panelr9c3.setBackground(new java.awt.Color(255, 255, 255));
        Panelr9c3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr9c3.setLayout(null);

        txtr9c3.setEditable(false);
        txtr9c3.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr9c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr9c3.setText("0êl");
        txtr9c3.setBorder(null);
        txtr9c3.setOpaque(false);
        Panelr9c3.add(txtr9c3);
        txtr9c3.setBounds(10, 30, 100, 30);

        lblr9c3.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr9c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr9c3.setBorder(null);
        lblr9c3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr9c3.setEnabled(false);
        lblr9c3.setOpaque(false);
        Panelr9c3.add(lblr9c3);
        lblr9c3.setBounds(0, 10, 120, 20);

        add(Panelr9c3);
        Panelr9c3.setBounds(300, 560, 120, 60);

        Panelr9c4.setBackground(new java.awt.Color(255, 255, 255));
        Panelr9c4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr9c4.setLayout(null);

        txtr9c4.setEditable(false);
        txtr9c4.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr9c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr9c4.setText("0êl");
        txtr9c4.setBorder(null);
        txtr9c4.setOpaque(false);
        Panelr9c4.add(txtr9c4);
        txtr9c4.setBounds(10, 30, 100, 30);

        lblr9c4.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr9c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr9c4.setBorder(null);
        lblr9c4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr9c4.setEnabled(false);
        lblr9c4.setOpaque(false);
        Panelr9c4.add(lblr9c4);
        lblr9c4.setBounds(0, 10, 120, 20);

        add(Panelr9c4);
        Panelr9c4.setBounds(420, 560, 120, 60);

        Panelr9c6.setBackground(new java.awt.Color(255, 255, 255));
        Panelr9c6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr9c6.setLayout(null);

        txtr9c6.setEditable(false);
        txtr9c6.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr9c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr9c6.setText("0êl");
        txtr9c6.setBorder(null);
        txtr9c6.setOpaque(false);
        Panelr9c6.add(txtr9c6);
        txtr9c6.setBounds(10, 30, 100, 30);

        lblr9c6.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr9c6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr9c6.setBorder(null);
        lblr9c6.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr9c6.setEnabled(false);
        lblr9c6.setOpaque(false);
        Panelr9c6.add(lblr9c6);
        lblr9c6.setBounds(0, 10, 120, 20);

        add(Panelr9c6);
        Panelr9c6.setBounds(660, 560, 120, 60);

        Panelr9c5.setBackground(new java.awt.Color(255, 255, 255));
        Panelr9c5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr9c5.setLayout(null);

        txtr9c5.setEditable(false);
        txtr9c5.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr9c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr9c5.setText("0êl");
        txtr9c5.setBorder(null);
        txtr9c5.setOpaque(false);
        Panelr9c5.add(txtr9c5);
        txtr9c5.setBounds(10, 30, 100, 30);

        lblr9c5.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr9c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr9c5.setBorder(null);
        lblr9c5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr9c5.setEnabled(false);
        lblr9c5.setOpaque(false);
        Panelr9c5.add(lblr9c5);
        lblr9c5.setBounds(0, 10, 120, 20);

        add(Panelr9c5);
        Panelr9c5.setBounds(540, 560, 120, 60);

        Panelr9c2.setBackground(new java.awt.Color(255, 255, 255));
        Panelr9c2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr9c2.setLayout(null);

        txtr9c2.setEditable(false);
        txtr9c2.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr9c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr9c2.setText("0êl");
        txtr9c2.setBorder(null);
        txtr9c2.setOpaque(false);
        Panelr9c2.add(txtr9c2);
        txtr9c2.setBounds(10, 30, 100, 30);

        lblr9c2.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr9c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr9c2.setBorder(null);
        lblr9c2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr9c2.setEnabled(false);
        lblr9c2.setOpaque(false);
        Panelr9c2.add(lblr9c2);
        lblr9c2.setBounds(0, 10, 120, 20);

        add(Panelr9c2);
        Panelr9c2.setBounds(180, 560, 120, 60);

        Panelr10c2.setBackground(new java.awt.Color(255, 255, 255));
        Panelr10c2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr10c2.setLayout(null);

        txtr10c2.setEditable(false);
        txtr10c2.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr10c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr10c2.setText("0êl");
        txtr10c2.setBorder(null);
        txtr10c2.setOpaque(false);
        Panelr10c2.add(txtr10c2);
        txtr10c2.setBounds(10, 30, 100, 30);

        lblr10c2.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr10c2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr10c2.setBorder(null);
        lblr10c2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr10c2.setEnabled(false);
        lblr10c2.setOpaque(false);
        Panelr10c2.add(lblr10c2);
        lblr10c2.setBounds(0, 10, 120, 20);

        add(Panelr10c2);
        Panelr10c2.setBounds(180, 620, 120, 60);

        Panelr10c3.setBackground(new java.awt.Color(255, 255, 255));
        Panelr10c3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr10c3.setLayout(null);

        txtr10c3.setEditable(false);
        txtr10c3.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr10c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr10c3.setText("0êl");
        txtr10c3.setBorder(null);
        txtr10c3.setOpaque(false);
        Panelr10c3.add(txtr10c3);
        txtr10c3.setBounds(10, 30, 100, 30);

        lblr10c3.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr10c3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr10c3.setBorder(null);
        lblr10c3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr10c3.setEnabled(false);
        lblr10c3.setOpaque(false);
        Panelr10c3.add(lblr10c3);
        lblr10c3.setBounds(0, 10, 120, 20);

        add(Panelr10c3);
        Panelr10c3.setBounds(300, 620, 120, 60);

        Panelr10c4.setBackground(new java.awt.Color(255, 255, 255));
        Panelr10c4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr10c4.setLayout(null);

        txtr10c4.setEditable(false);
        txtr10c4.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr10c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr10c4.setText("0êl");
        txtr10c4.setBorder(null);
        txtr10c4.setOpaque(false);
        Panelr10c4.add(txtr10c4);
        txtr10c4.setBounds(10, 30, 100, 30);

        lblr10c4.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr10c4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr10c4.setBorder(null);
        lblr10c4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr10c4.setEnabled(false);
        lblr10c4.setOpaque(false);
        Panelr10c4.add(lblr10c4);
        lblr10c4.setBounds(0, 10, 120, 20);

        add(Panelr10c4);
        Panelr10c4.setBounds(420, 620, 120, 60);

        Panelr10c5.setBackground(new java.awt.Color(255, 255, 255));
        Panelr10c5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panelr10c5.setLayout(null);

        txtr10c5.setEditable(false);
        txtr10c5.setFont(new java.awt.Font("MS UI Gothic", 1, 28)); // NOI18N
        txtr10c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtr10c5.setText("0êl");
        txtr10c5.setBorder(null);
        txtr10c5.setOpaque(false);
        Panelr10c5.add(txtr10c5);
        txtr10c5.setBounds(10, 30, 100, 30);

        lblr10c5.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        lblr10c5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblr10c5.setBorder(null);
        lblr10c5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblr10c5.setEnabled(false);
        lblr10c5.setOpaque(false);
        Panelr10c5.add(lblr10c5);
        lblr10c5.setBounds(0, 10, 120, 20);

        add(Panelr10c5);
        Panelr10c5.setBounds(540, 620, 120, 60);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTargetPeriodStartDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodStartDateFocusGained
        cmbTargetPeriodStartDate.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodStartDateFocusGained

    private void cmbTargetPeriodEndDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTargetPeriodEndDateFocusGained
        cmbTargetPeriodEndDate.getInputContext().setCharacterSubsets(null);
    }//GEN-LAST:event_cmbTargetPeriodEndDateFocusGained

    private void rdoTaxUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoTaxUnitActionPerformed
        // TODO add your handling code here:
        rdoTaxBlank.setSelected(false);

    }//GEN-LAST:event_rdoTaxUnitActionPerformed

    private void rdoTaxBlankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoTaxBlankActionPerformed
       rdoTaxUnit.setSelected(false);
    }//GEN-LAST:event_rdoTaxBlankActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        try {
            btnSave.setCursor(null);
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            if((saveListRanking(1)) && (saveListRanking(2)))
            {
                MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.INFO_REGIST_SUCCESS),
                            this.getTitle(),
                            JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                MessageDialog.showMessageDialog(this,
					MessageUtil.getMessage(MessageUtil.ERROR_REGIST_FAILED),
					this.getTitle(),
					JOptionPane.ERROR_MESSAGE);
            }
        } finally {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }

    /**
     * Save list item ranking into database.
     * @param typeOfRank (technic or item)
     */
    private boolean saveListRanking(int typeOfRank) {
        MasherRankingPanel dcl = new MasherRankingPanel(this.getTitle());
        dcl.setLimitCount(99999);
        //loop technic value.
        if (typeOfRank == 1) {
            //delete exist customer with shopCategoryId.
            masher5List.deleteCustomerRank(masher5List.getShopCagegory());
            
            for (int i = 0; i < 25; i++) {
                switch (i) {               
                    case 0:
                        if (txtr3c2.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num <= " + masher5List.getRankF5() + " and sales_value >= " + masher5List.getRankM5());
                        masher5List.setTechnicRankId(masher5List.getRankR3C2Value());
                        break;
                    case 1:
                        if (txtr3c3.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num <= " + masher5List.getRankF5() + " and sales_value between " + masher5List.getRankM4() + " and " + (masher5List.getRankM5()-1));
                        masher5List.setTechnicRankId(masher5List.getRankR3C3Value());
                        break;
                    case 2:
                        if (txtr3c4.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num <= " + masher5List.getRankF5() + " and sales_value between " + masher5List.getRankM3() + " and " + (masher5List.getRankM4()-1));
                        masher5List.setTechnicRankId(masher5List.getRankR3C4Value());
                        break;
                    case 3:
                        if (txtr3c5.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num <= " + masher5List.getRankF5() + " and sales_value between " + masher5List.getRankM2() + " and " + (masher5List.getRankM3()-1));
                        masher5List.setTechnicRankId(masher5List.getRankR3C5Value());
                        break;
                    case 4:
                        if (txtr3c6.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num <= " + masher5List.getRankF5() + " and sales_value between " + masher5List.getRankM1() + " and " + (masher5List.getRankM2() - 1));  
                        masher5List.setTechnicRankId(masher5List.getRankR3C6Value());
                        break;
                    case 5:
                        if (txtr4c2.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF5() + 1) + " and " + masher5List.getRankF4() + " and sales_value >= " + masher5List.getRankM5());
                        masher5List.setTechnicRankId(masher5List.getRankR4C2Value());
                        break;
                    case 6:
                        if (txtr4c3.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF5() + 1) + " and " + masher5List.getRankF4() + " and sales_value between " + masher5List.getRankM4() + " and " + (masher5List.getRankM5()-1));
                        masher5List.setTechnicRankId(masher5List.getRankR4C3Value());
                        break;
                    case 7:
                        if (txtr4c4.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF5() + 1) + " and " + masher5List.getRankF4() + " and sales_value between " + masher5List.getRankM3() + " and " + (masher5List.getRankM4()-1));
                        masher5List.setTechnicRankId(masher5List.getRankR4C4Value());
                        break;
                    case 8:
                        if (txtr4c5.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF5() + 1) + " and " + masher5List.getRankF4() + " and sales_value between " + masher5List.getRankM2() + " and " + (masher5List.getRankM3()-1));
                        masher5List.setTechnicRankId(masher5List.getRankR4C5Value());
                        break;
                    case 9:
                        if (txtr4c6.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF5() + 1) + " and " + masher5List.getRankF4() + " and sales_value between " + masher5List.getRankM1() + " and " + (masher5List.getRankM2() - 1));  
                        masher5List.setTechnicRankId(masher5List.getRankR4C6Value());
                        break;
                    case 10:
                        if (txtr5c2.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF4() + 1) + " and " + masher5List.getRankF3() + " and sales_value >= " + masher5List.getRankM5());
                        masher5List.setTechnicRankId(masher5List.getRankR5C2Value());
                        break;
                    case 11:
                        if (txtr5c3.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF4() + 1) + " and " + masher5List.getRankF3() + " and sales_value between " + masher5List.getRankM4() + " and " + (masher5List.getRankM5() - 1));
                        masher5List.setTechnicRankId(masher5List.getRankR5C3Value());
                        break;
                    case 12:
                        if (txtr5c4.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF4() + 1) + " and " + masher5List.getRankF3() + " and sales_value between " + masher5List.getRankM3() + " and " + (masher5List.getRankM4()- 1));
                        masher5List.setTechnicRankId(masher5List.getRankR5C4Value());
                        break;
                    case 13:
                        if (txtr5c5.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF4() + 1) + " and " + masher5List.getRankF3() + " and sales_value between " + masher5List.getRankM2() + " and " + (masher5List.getRankM3()- 1));
                        masher5List.setTechnicRankId(masher5List.getRankR5C5Value());
                        break;
                    case 14:
                        if (txtr5c6.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF4() + 1) + " and " + masher5List.getRankF3() + " and sales_value between " + masher5List.getRankM1() + " and " + (masher5List.getRankM2() - 1));  
                        masher5List.setTechnicRankId(masher5List.getRankR5C6Value());
                        break;
                    case 15:
                        if (txtr6c2.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF3() + 1) + " and " + masher5List.getRankF2() + " and sales_value >= " + masher5List.getRankM5());
                        masher5List.setTechnicRankId(masher5List.getRankR6C2Value());
                        break;
                    case 16:
                        if (txtr6c3.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF3() + 1) + " and " + masher5List.getRankF2() + " and sales_value between " + masher5List.getRankM4() + " and " + (masher5List.getRankM5() - 1));
                        masher5List.setTechnicRankId(masher5List.getRankR6C3Value());
                        break;
                    case 17:
                        if (txtr6c4.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF3() + 1) + " and " + masher5List.getRankF2() + " and sales_value between " + masher5List.getRankM3() + " and " + (masher5List.getRankM4() - 1));
                        masher5List.setTechnicRankId(masher5List.getRankR6C4Value());
                        break;
                    case 18:
                        if (txtr6c5.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF3() + 1) + " and " + masher5List.getRankF2() + " and sales_value between " + masher5List.getRankM2() + " and " + (masher5List.getRankM3() - 1));
                        masher5List.setTechnicRankId(masher5List.getRankR6C5Value());
                        break;
                    case 19:
                        if (txtr6c6.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  + " and date_num between " + (masher5List.getRankF3() + 1) + " and " + masher5List.getRankF2() + " and sales_value between " + masher5List.getRankM1() + " and " + (masher5List.getRankM2() - 1));  
                        masher5List.setTechnicRankId(masher5List.getRankR6C6Value());
                        break;
                    case 20:
                        if (txtr7c2.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  +" and date_num >= " + masher5List.getRankF1() + " and sales_value >= " + masher5List.getRankM5());
                        masher5List.setTechnicRankId(masher5List.getRankR7C2Value());
                        break;
                    case 21:
                        if (txtr7c3.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  +" and date_num >= " + masher5List.getRankF1() + " and sales_value between " + masher5List.getRankM4() + " and " + (masher5List.getRankM5() - 1));
                        masher5List.setTechnicRankId(masher5List.getRankR7C3Value());
                        break;
                    case 22:
                        if (txtr7c4.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  +" and date_num >= " + masher5List.getRankF1() + " and sales_value between " + masher5List.getRankM3() + " and " + (masher5List.getRankM4() - 1));
                        masher5List.setTechnicRankId(masher5List.getRankR7C4Value());
                        break;
                    case 23:
                        if (txtr7c5.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  +" and date_num >= " + masher5List.getRankF1() + " and sales_value between " + masher5List.getRankM2() + " and " + (masher5List.getRankM3() - 1));
                        masher5List.setTechnicRankId(masher5List.getRankR7C5Value());
                        break;
                    case 24:
                        if (txtr7c6.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" date_num < " + masher5List.getCycleDate()  +" and date_num >= " + masher5List.getRankF1() + " and sales_value between " + masher5List.getRankM1() + " and " + (masher5List.getRankM2() - 1));  
                        masher5List.setTechnicRankId(masher5List.getRankR7C6Value());
                        break;
                }
                //get list detail 
                try {
                    
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    ResultSetWrapper rs = SystemInfo.getConnection().executeQuery(dcl.getCustomerDetailRankingSQL(typeOfRank, dcl.getCategoryId(), false));
                    while (rs.next()) {
                        if(!masher5List.insertCustomerRanking(rs.getInt("customer_id"),
                                masher5List.getShopCagegory(), 
                                masher5List.getTechnicRankId(),
                                null))
                        {
                            return false;
                        }
                    }
                } catch (Exception ex) {
                    Logger.getLogger(MasherAnalysis5Panel.class.getName()).log(Level.SEVERE, null, ex);
                    return false;
                } finally {
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            }
        } else {
            //loop through item value
            int maxColumn = 10;
            for (int i = 0; i < maxColumn; i++) {
                switch (i) {
                    case 0:
                        if (txtr9c2.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" sales_value >= " + masher5List.getRankItemU5());
                        masher5List.setItemRankId(masher5List.getRankR9C2Value());
                        break;
                    case 1:
                        if (txtr9c3.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition("sales_value between " + masher5List.getRankItemU4() + " and " + (masher5List.getRankItemU5() -1));
                        masher5List.setItemRankId(masher5List.getRankR9C3Value());
                        break;
                    case 2:
                        if (txtr9c4.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition("sales_value between " + masher5List.getRankItemU3() + " and " + (masher5List.getRankItemU4()-1));
                        masher5List.setItemRankId(masher5List.getRankR9C4Value());
                        break;
                    case 3:
                        if (txtr9c5.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition("sales_value between " + masher5List.getRankItemU2() + " and " + (masher5List.getRankItemU3()-1));
                        masher5List.setItemRankId(masher5List.getRankR9C5Value());
                        break;
                    case 4:
                        if (txtr9c6.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition("sales_value between " + masher5List.getRankItemU1() + " and " + (masher5List.getRankItemU2()-1));
                        masher5List.setItemRankId(masher5List.getRankR9C6Value());
                        break;
                    case 5:
                        typeOfRank = 3;
                        if (txtr10c2.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition(" sales_value >= " + masher5List.getRankItemU5());
                        masher5List.setItemRankId(masher5List.getRankR10C2Value());
                        break;
                    case 6:
                        if (txtr10c3.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition("sales_value between " + masher5List.getRankItemU4() + " and " + (masher5List.getRankItemU5() -1));
                        masher5List.setItemRankId(masher5List.getRankR10C3Value());
                        break;
                    case 7:
                        if (txtr10c4.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition("sales_value between " + masher5List.getRankItemU3() + " and " + (masher5List.getRankItemU4() -1));
                        masher5List.setItemRankId(masher5List.getRankR10C4Value());
                        break;
                    case 8:
                        if (txtr10c5.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition("sales_value between " + masher5List.getRankItemU2() + " and " + (masher5List.getRankItemU3() -1));
                        masher5List.setItemRankId(masher5List.getRankR10C5Value());
                        break;
                    case 9:
                        if (txtr10c6.getText().equals("0êl")) {
                            continue;
                        }
                        dcl.setWhereCondition("sales_value between " + masher5List.getRankItemU1() + " and " + (masher5List.getRankItemU2()-1));
                        masher5List.setItemRankId(masher5List.getRankR10C6Value());
                        break;
                }

                //get list detail 
                try {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    
                    //get list customer detail from temp table
                    ResultSetWrapper rs = SystemInfo.getConnection().executeQuery(dcl.getCustomerDetailRankingSQL(typeOfRank, dcl.getCategoryId(), false));
                    ArrayList<Integer> customerIDList = new ArrayList<Integer>();

                    while (rs.next()) {
                        customerIDList.add(rs.getInt("customer_id"));
                        if (masher5List.isExistCustomer(rs.getInt("customer_id"), masher5List.getShopCagegory())) {
                            if(!masher5List.updateCustomerRanking( rs.getInt("customer_id"), masher5List.getShopCagegory(), masher5List.getItemRankId()))
                            {
                                return false;
                            }
                        } else {
                            if(!masher5List.insertCustomerRanking(rs.getInt("customer_id"),
                                    masher5List.getShopCagegory(),
                                    null,
                                    masher5List.getItemRankId()))
                            {
                                return false;
                            }
                        }
                    }

                } catch (Exception ex) {
                    Logger.getLogger(MasherAnalysis5Panel.class.getName()).log(Level.SEVERE, null, ex);
                    return false;
                } finally {
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            }
        }
        return true;
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btSetRankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSetRankActionPerformed
        //IVS_LVTu start add 2014/12/29 Mashu_[Product][Code][Phase3]ÉâÉìÉNê›íË
        btSetRank.setCursor(null);
        try {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            
            MstRankSettingPanel p = new MstRankSettingPanel();
            SwingUtil.openAnchorDialog(null, true, p, "ÉâÉìÉNê›íË", SwingUtil.ANCHOR_HCENTER|SwingUtil.ANCHOR_VCENTER);
            p = null;
            System.gc();
            
        } finally {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
        //IVS_LVTu end add 2014/12/29 Mashu_[Product][Code][Phase3]ÉâÉìÉNê›íË
    }//GEN-LAST:event_btSetRankActionPerformed

    private void btItemGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btItemGroupActionPerformed
        //IVS_LVTu start add 2014/12/29 Mashu_[Product][Code][Phase3]è§ïiÇfê›íË
        btItemGroup.setCursor(null);
        try {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            
            MstRankItemGroupPanel p = new MstRankItemGroupPanel();
            SwingUtil.openAnchorDialog(null, true, p, "è§ïiÇfê›íË", SwingUtil.ANCHOR_HCENTER|SwingUtil.ANCHOR_VCENTER);
            p = null;
            System.gc();
        
        } finally {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
        //IVS_LVTu end add 2014/12/29 Mashu_[Product][Code][Phase3]è§ïiÇfê›íË
    }//GEN-LAST:event_btItemGroupActionPerformed

    private void txtr8c6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtr8c6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtr8c6ActionPerformed

    private void txtr2c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtr2c3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtr2c3ActionPerformed

    private void txtr2c4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtr2c4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtr2c4ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
       try {
            btnSearch.setCursor(null);
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            this.searchRankingList(masher5List);
        } finally {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void setConditionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setConditionButtonActionPerformed
        setConditionButton.setCursor(null);
        try {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            
            SettingControlPanel settings = new SettingControlPanel();
            SwingUtil.openAnchorDialog(null, true, settings, "èWåvèåèê›íË", SwingUtil.ANCHOR_HCENTER | SwingUtil.ANCHOR_VCENTER);
            settings = null;
            System.gc();
        
        } finally {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_setConditionButtonActionPerformed

    private void setNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setNameButtonActionPerformed
        setNameButton.setCursor(null);
        try {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            
        MstRankPanel p = new MstRankPanel();
        SwingUtil.openAnchorDialog(null, true, p, "ñºèÃê›íË", SwingUtil.ANCHOR_HCENTER|SwingUtil.ANCHOR_VCENTER);
        p = null;
        System.gc();
        
        } finally {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_setNameButtonActionPerformed

    private void cmbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoryActionPerformed
        btnSave.setEnabled(false);
    }//GEN-LAST:event_cmbCategoryActionPerformed

    private void cmbshopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbshopActionPerformed

        if(cmbshop.getSelectedItem() instanceof MstShop)
        {
            MstShop ms = (MstShop)cmbshop.getSelectedItem();
            this.masher5List.setShopId(ms.getShopID());
        }
        initChargeStaff();
    }//GEN-LAST:event_cmbshopActionPerformed

    private void cmbchargeStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbchargeStaffActionPerformed

        MstStaff mStaff= (MstStaff)cmbchargeStaff.getSelectedItem();
        if ( mStaff != null && mStaff.getStaffID() != null ) {
            this.masher5List.setStaffId(mStaff.getStaffID());   
        } else {
            this.masher5List.setStaffId(null);
        }
    }//GEN-LAST:event_cmbchargeStaffActionPerformed

    
    /**
     * Init all category from table category.
     */
    private void intShopCategory() {
        cmbCategory.removeAllItems();
        cmbCategory.addItem("");
        
        SimpleMaster sm = new SimpleMaster(
                "",
                "mst_shop_category",
                "shop_category_id",
                "shop_class_name", 0);

        sm.loadData();
        for (MstData md : sm) {
            if (md != null) {
                MstShopCategory category = new MstShopCategory();
                category.setShopCategoryId(md.getID());
                category.setShopClassName(md.getName());
                category.setDisplaySeq(md.getDisplaySeq());
                mscs.add(category);
            }

        }
            
        for (MstShopCategory item : mscs) {
            cmbCategory.addItem(item);
        }
        cmbCategory.setSelectedIndex(0);
    }

    /**
     * Change default mouse cursor to hand cursor
     */
    private void addMouseCursorChangeAll() {
        //row 3
        SystemInfo.addMouseCursorChange(txtr3c2);
        SystemInfo.addMouseCursorChange(txtr3c3);
        SystemInfo.addMouseCursorChange(txtr3c4);
        SystemInfo.addMouseCursorChange(txtr3c5);
        SystemInfo.addMouseCursorChange(txtr3c6);

        //row 4
        SystemInfo.addMouseCursorChange(txtr4c2);
        SystemInfo.addMouseCursorChange(txtr4c3);
        SystemInfo.addMouseCursorChange(txtr4c4);
        SystemInfo.addMouseCursorChange(txtr4c5);
        SystemInfo.addMouseCursorChange(txtr4c6);

        //row 5
        SystemInfo.addMouseCursorChange(txtr5c2);
        SystemInfo.addMouseCursorChange(txtr5c3);
        SystemInfo.addMouseCursorChange(txtr5c4);
        SystemInfo.addMouseCursorChange(txtr5c5);
        SystemInfo.addMouseCursorChange(txtr5c6);

        //row 6
        SystemInfo.addMouseCursorChange(txtr6c2);
        SystemInfo.addMouseCursorChange(txtr6c3);
        SystemInfo.addMouseCursorChange(txtr6c4);
        SystemInfo.addMouseCursorChange(txtr6c5);
        SystemInfo.addMouseCursorChange(txtr6c6);

        //row 7
        SystemInfo.addMouseCursorChange(txtr7c2);
        SystemInfo.addMouseCursorChange(txtr7c3);
        SystemInfo.addMouseCursorChange(txtr7c4);
        SystemInfo.addMouseCursorChange(txtr7c5);
        SystemInfo.addMouseCursorChange(txtr7c6);

        //row 9
        SystemInfo.addMouseCursorChange(txtr9c2);
        SystemInfo.addMouseCursorChange(txtr9c3);
        SystemInfo.addMouseCursorChange(txtr9c4);
        SystemInfo.addMouseCursorChange(txtr9c5);
        SystemInfo.addMouseCursorChange(txtr9c6);

        //row 10
        SystemInfo.addMouseCursorChange(txtr10c2);
        SystemInfo.addMouseCursorChange(txtr10c3);
        SystemInfo.addMouseCursorChange(txtr10c4);
        SystemInfo.addMouseCursorChange(txtr10c5);
        SystemInfo.addMouseCursorChange(txtr10c6);

    }

    /**
     * Set key listener event.
     */
    private void setKeyListener() {
        cmbCategory.addKeyListener(SystemInfo.getMoveNextField());
        cmbCategory.addFocusListener(SystemInfo.getSelectText());
    }

    /**
     * Add all mouse click event in textbox.
     */
    private void addMouseListenerAll() {
        //row 3
        addMouseListener(txtr3c2);
        addMouseListener(txtr3c3);
        addMouseListener(txtr3c4);
        addMouseListener(txtr3c5);
        addMouseListener(txtr3c6);

        //row 4
        addMouseListener(txtr4c2);
        addMouseListener(txtr4c3);
        addMouseListener(txtr4c4);
        addMouseListener(txtr4c5);
        addMouseListener(txtr4c6);

        //row 5
        addMouseListener(txtr5c2);
        addMouseListener(txtr5c3);
        addMouseListener(txtr5c4);
        addMouseListener(txtr5c5);
        addMouseListener(txtr5c6);

        //row 6
        addMouseListener(txtr6c2);
        addMouseListener(txtr6c3);
        addMouseListener(txtr6c4);
        addMouseListener(txtr6c5);
        addMouseListener(txtr6c6);

        //row 7
        addMouseListener(txtr7c2);
        addMouseListener(txtr7c3);
        addMouseListener(txtr7c4);
        addMouseListener(txtr7c5);
        addMouseListener(txtr7c6);

        //row 9
        addMouseListener(txtr9c2);
        addMouseListener(txtr9c3);
        addMouseListener(txtr9c4);
        addMouseListener(txtr9c5);
        addMouseListener(txtr9c6);

        //row 10
        addMouseListener(txtr10c2);
        addMouseListener(txtr10c3);
        addMouseListener(txtr10c4);
        addMouseListener(txtr10c5);
        addMouseListener(txtr10c6);

    }

    /**
     * Show list detail ranking
     * @param component 
     */
    //private void showMasherRankingPanel(final JComponent component) {
    private void showMasherRankingPanel(final JComponent component, boolean flag) {
        if (((JTextField) component).getText().equals("0êl") && flag) {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(1112),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        //IVS_LVTu start add 2015/04/16 New request #36344
        if (((JTextField) component).getText().equals("0êl")) {
            component.setToolTipText("<html>å⁄ãqêî 0êl<br>"
                + "óàìXâÒêî 0âÒ<br>"
                + "îÑè„ã‡äz 0â~<br>"
                + "ïΩãœíPâø 0â~<html>"
                );    
            return;
        }
        //IVS_LVTu end edit 2015/04/16 New request #36344
        MasherRankingPanel dcl = new MasherRankingPanel(this.getTitle());
        dcl.setSelectedRow(0);
        dcl.setTargetPeriodStartDate(cmbTargetPeriodStartDate.getDateStr("/"));
        dcl.setTargetPeriodEndDate(cmbTargetPeriodEndDate.getDateStr("/"));
        dcl.setTaxName(rdoTaxUnit.isSelected() ? "ê≈çû" : "ê≈î≤");
        dcl.setLimitCount(99999999);
        dcl.setCategoryName(cmbCategory.getSelectedItem().toString());
        dcl.setCategoryId(masher5List.getShopCagegory());
        if (component.equals(txtr3c2)) {
            if ( flag ) {
            txtr3c2.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setMvalue("ãZèpîÑè„ÅF " + masher5List.getRankM5() + "â~à»è„");
            dcl.setFvalue("óàìXé¸ä˙ ÅF " + masher5List.getRankF5() + "ì˙à»ì‡");
            dcl.setWhereCondition("date_num <= " + masher5List.getRankF5() + " and sales_value >= " + masher5List.getRankM5());
            dcl.setTechnicName(masher5List.getRankR3C2());
        } else if (component.equals(txtr3c3)) {
            if ( flag ) {
            txtr3c3.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " + masher5List.getRankF5() + "ì˙à»ì‡");
            dcl.setMvalue("ãZèpîÑè„ÅF " + masher5List.getRankM4() + "â~ Å` " + (masher5List.getRankM5() -1 )+ "â~");
            dcl.setWhereCondition("date_num <= " + masher5List.getRankF5() + " and sales_value between " + masher5List.getRankM4() + " and " + (masher5List.getRankM5()-1));
            dcl.setTechnicName(masher5List.getRankR3C3());
        } else if (component.equals(txtr3c4)) {
            if ( flag ) {
            txtr3c4.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " + masher5List.getRankF5() + "ì˙à»ì‡");
            dcl.setMvalue("ãZèpîÑè„ÅF "  + masher5List.getRankM3() + "â~ Å` " + (masher5List.getRankM4()-1) + "â~");
            dcl.setWhereCondition("date_num <= " + masher5List.getRankF5() + " and sales_value between " + masher5List.getRankM3() + " and " + (masher5List.getRankM4()-1));
            dcl.setTechnicName(masher5List.getRankR3C4());
        } else if (component.equals(txtr3c5)) {
            if ( flag ) {
            txtr3c5.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " + masher5List.getRankF5() + "ì˙à»ì‡");
            dcl.setMvalue("ãZèpîÑè„ÅF "  + masher5List.getRankM2() + "â~ Å` " + (masher5List.getRankM3()-1 )+ "â~");
            dcl.setWhereCondition("date_num <= " + masher5List.getRankF5() + " and sales_value between " + masher5List.getRankM2() + " and " + (masher5List.getRankM3()-1));
            dcl.setTechnicName(masher5List.getRankR3C5());
        } else if (component.equals(txtr3c6)) {
            if ( flag ) {
            txtr3c6.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " + masher5List.getRankF5() + "ì˙à»ì‡");
            dcl.setMvalue("ãZèpîÑè„ÅF"+ (masher5List.getRankM2() -1) +" â~à»â∫");
            dcl.setWhereCondition("date_num <= " + masher5List.getRankF5() + " and sales_value between " + masher5List.getRankM1() + " and " + (masher5List.getRankM2()-1));
            dcl.setTechnicName(masher5List.getRankR3C6());
        } else if (component.equals(txtr4c2)) {                                //row 2
            if ( flag ) {
            txtr4c2.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " + (masher5List.getRankF5() + 1) + "ì˙ Å` " + masher5List.getRankF4()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF " + masher5List.getRankM5() + "â~à»è„");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF5() + 1) + " and " + masher5List.getRankF4() + " and sales_value >= " + masher5List.getRankM5());
            dcl.setTechnicName(masher5List.getRankR4C2());
        } else if (component.equals(txtr4c3)) {
            if ( flag ) {
            txtr4c3.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF5() + 1) + "ì˙ Å` " + masher5List.getRankF4()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF " + masher5List.getRankM4() + "â~ Å` " + (masher5List.getRankM5()-1) + "â~");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF5() + 1) + " and " + masher5List.getRankF4() + " and sales_value between " + masher5List.getRankM4() + " and " + (masher5List.getRankM5()-1));
            dcl.setTechnicName(masher5List.getRankR4C3());
        } else if (component.equals(txtr4c4)) {
            if ( flag ) {
            txtr4c4.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF5() + 1) + "ì˙ Å` " + masher5List.getRankF4()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF "  + masher5List.getRankM3() + "â~ Å` " + (masher5List.getRankM4()-1) + "â~");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF5() + 1) + " and " + masher5List.getRankF4() + " and sales_value between " + masher5List.getRankM3() + " and " + (masher5List.getRankM4()-1));
            dcl.setTechnicName(masher5List.getRankR4C4());
        } else if (component.equals(txtr4c5)) {
            if ( flag ) {
            txtr4c5.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF5() + 1) + "ì˙ Å` " + masher5List.getRankF4()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF "  + masher5List.getRankM2() + "â~ Å` " + (masher5List.getRankM3()-1) + "â~");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF5() + 1) + " and " + masher5List.getRankF4() + " and sales_value between " + masher5List.getRankM2() + " and " + (masher5List.getRankM3()-1));
            dcl.setTechnicName(masher5List.getRankR4C5());
        } else if (component.equals(txtr4c6)) {
            if ( flag ) {
            txtr4c6.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF5() + 1) + "ì˙ Å` " + masher5List.getRankF4()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF"+ (masher5List.getRankM2() -1) +" â~à»â∫");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF5() + 1) + " and " + masher5List.getRankF4() + " and sales_value between " + masher5List.getRankM1() + " and " + (masher5List.getRankM2()-1));
            dcl.setTechnicName(masher5List.getRankR4C6());
        } else if (component.equals(txtr5c2)) {                                //row 3
            if ( flag ) {
            txtr5c2.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF4() + 1) + "ì˙ Å` " + masher5List.getRankF3()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF " + masher5List.getRankM5() + "â~à»è„");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF4() + 1) + " and " + masher5List.getRankF3() + " and sales_value >= " + masher5List.getRankM5());
            dcl.setTechnicName(masher5List.getRankR5C2());
        } else if (component.equals(txtr5c3)) {
            if ( flag ) {
            txtr5c3.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF4() + 1) + "ì˙ Å` " + masher5List.getRankF3()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF " + masher5List.getRankM4() + "â~ Å` " + (masher5List.getRankM5()-1) + "â~");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF4() + 1) + " and " + masher5List.getRankF3() + " and sales_value between " + masher5List.getRankM4() + " and " + (masher5List.getRankM5()-1));
            dcl.setTechnicName(masher5List.getRankR5C3());
        } else if (component.equals(txtr5c4)) {
            if ( flag ) {
            txtr5c4.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF4() + 1) + "ì˙ Å` " + masher5List.getRankF3()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF "  + masher5List.getRankM3() + "â~ Å` " + (masher5List.getRankM4()-1) + "â~");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF4() + 1) + " and " + masher5List.getRankF3() + " and sales_value between " + masher5List.getRankM3() + " and " + (masher5List.getRankM4()-1));
            dcl.setTechnicName(masher5List.getRankR5C4());
        } else if (component.equals(txtr5c5)) {
            if ( flag ) {
            txtr5c5.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue(("óàìXé¸ä˙ ÅF " +masher5List.getRankF4() + 1) + "ì˙ Å` " + masher5List.getRankF3()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF "  + masher5List.getRankM2() + "â~ Å` " + (masher5List.getRankM3()-1) + "â~");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF4() + 1) + " and " + masher5List.getRankF3() + " and sales_value between " + masher5List.getRankM2() + " and " + (masher5List.getRankM3()-1));
            dcl.setTechnicName(masher5List.getRankR5C5());
        } else if (component.equals(txtr5c6)) {
            if ( flag ) {
            txtr5c6.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF4() + 1) + "ì˙ Å` " + masher5List.getRankF3()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF"+ (masher5List.getRankM2() -1) +" â~à»â∫");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF4() + 1) + " and " + masher5List.getRankF3() + " and sales_value between " + masher5List.getRankM1() + " and " + (masher5List.getRankM2()-1));
            dcl.setTechnicName(masher5List.getRankR5C6());
        } else if (component.equals(txtr6c2)) {                                //row 4
            if ( flag ) {
            txtr6c2.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF3() + 1) + "ì˙ Å` " + masher5List.getRankF2()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF " + masher5List.getRankM5() + "â~à»è„");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF3() + 1) + " and " + masher5List.getRankF2() + " and sales_value >= " + masher5List.getRankM5());
            dcl.setTechnicName(masher5List.getRankR6C2());
        } else if (component.equals(txtr6c3)) {
            if ( flag ) {
            txtr6c3.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF3() + 1) + "ì˙ Å` " + masher5List.getRankF2()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF " + masher5List.getRankM4() + "â~ Å` " + (masher5List.getRankM5()-1) + "â~");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF3() + 1) + " and " + masher5List.getRankF2() + " and sales_value between " + masher5List.getRankM4() + " and " + (masher5List.getRankM5()-1));
            dcl.setTechnicName(masher5List.getRankR6C3());
        } else if (component.equals(txtr6c4)) {
            if ( flag ) {
            txtr6c4.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF3() + 1) + "ì˙ Å` " + masher5List.getRankF2()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF "  + masher5List.getRankM3() + "â~ Å` " + (masher5List.getRankM4() -1)+ "â~");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF3() + 1) + " and " + masher5List.getRankF2() + " and sales_value between " + masher5List.getRankM3() + " and " + (masher5List.getRankM4()-1));
            dcl.setTechnicName(masher5List.getRankR6C4());
        } else if (component.equals(txtr6c5)) {
            if ( flag ) {
            txtr6c5.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF3() + 1) + "ì˙ Å` " + masher5List.getRankF2()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF "  + masher5List.getRankM2() + "â~ Å` " + (masher5List.getRankM3()-1) + "â~");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF3() + 1) + " and " + masher5List.getRankF2() + " and sales_value between " + masher5List.getRankM2() + " and " + (masher5List.getRankM3()-1));
            dcl.setTechnicName(masher5List.getRankR6C5());
        } else if (component.equals(txtr6c6)) {
            if ( flag ) {    
            txtr6c6.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue("óàìXé¸ä˙ ÅF " +(masher5List.getRankF3() + 1) + "ì˙ Å` " + masher5List.getRankF2()+"ì˙");
            dcl.setMvalue("ãZèpîÑè„ÅF"+ (masher5List.getRankM2() -1) +" â~à»â∫");
            dcl.setWhereCondition("date_num between " + (masher5List.getRankF3() + 1) + " and " + masher5List.getRankF2() + " and sales_value between " + masher5List.getRankM1() + " and " + (masher5List.getRankM2()-1));
            dcl.setTechnicName(masher5List.getRankR6C6());
        } else if (component.equals(txtr7c2)) {                                //row 5
            if ( flag ) {
            txtr7c2.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue(("óàìXé¸ä˙ ÅF " +masher5List.getRankF1() + "ì˙à»è„"));
            dcl.setMvalue("ãZèpîÑè„ÅF " + masher5List.getRankM5() + "â~à»è„");
            dcl.setWhereCondition("date_num between " + masher5List.getRankF1() + " and "+(masher5List.getCycleDate() - 1)+ " and sales_value >= " + masher5List.getRankM5());
            dcl.setTechnicName(masher5List.getRankR7C2());
        } else if (component.equals(txtr7c3)) {
            if ( flag ) {
            txtr7c3.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue(("óàìXé¸ä˙ ÅF " +masher5List.getRankF1() + "ì˙à»è„"));
            dcl.setMvalue("ãZèpîÑè„ÅF " + masher5List.getRankM4() + "â~ Å` " + (masher5List.getRankM5()-1) + "â~");
            dcl.setWhereCondition("date_num between " + masher5List.getRankF1() +  " and "+(masher5List.getCycleDate() - 1)+ " and sales_value between " + masher5List.getRankM4() + " and " + (masher5List.getRankM5()-1));
            dcl.setTechnicName(masher5List.getRankR7C3());
        } else if (component.equals(txtr7c4)) {
            if ( flag ) {
            txtr7c4.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue(("óàìXé¸ä˙ ÅF " +masher5List.getRankF1() + "ì˙à»è„"));
            dcl.setMvalue("ãZèpîÑè„ÅF "  + masher5List.getRankM3() + "â~ Å` " + (masher5List.getRankM4()-1) + "â~");
            dcl.setWhereCondition("date_num between " + masher5List.getRankF1() +  " and "+(masher5List.getCycleDate() - 1)+" and sales_value between " + masher5List.getRankM3() + " and " + (masher5List.getRankM4()-1));
            dcl.setTechnicName(masher5List.getRankR7C4());
        } else if (component.equals(txtr7c5)) {
            if ( flag ) {
            txtr7c5.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue(("óàìXé¸ä˙ ÅF " +masher5List.getRankF1() + "ì˙à»è„"));
            dcl.setMvalue("ãZèpîÑè„ÅF "  + masher5List.getRankM2() + "â~ Å` " + (masher5List.getRankM3()-1) + "â~");
            dcl.setWhereCondition("date_num between " + masher5List.getRankF1() +  " and "+(masher5List.getCycleDate() - 1)+" and sales_value between " + masher5List.getRankM2() + " and " + (masher5List.getRankM3()-1));
            dcl.setTechnicName(masher5List.getRankR7C5());
        } else if (component.equals(txtr7c6)) {
            if ( flag ) {
            txtr7c6.setCursor(null);
            }
            dcl.setTypeRank(1);
            dcl.setFvalue(("óàìXé¸ä˙ ÅF " +masher5List.getRankF1() + "ì˙à»è„"));
            dcl.setMvalue("ãZèpîÑè„ÅF"+ (masher5List.getRankM2() -1) +" â~à»â∫");
            dcl.setWhereCondition("date_num between " + masher5List.getRankF1() +  " and "+(masher5List.getCycleDate() - 1)+" and sales_value between " + masher5List.getRankM1() + " and " + (masher5List.getRankM2()-1));
            dcl.setTechnicName(masher5List.getRankR7C6());
        } //Item value row 1 
        else if (component.equals(txtr9c2)) {
            if ( flag ) {    
            txtr9c2.setCursor(null);
            }
            dcl.setTypeRank(2);
            dcl.setMvalue("ìXîÃîÑè„ : " + masher5List.getRankItemU5()+ "â~à»è„");
            dcl.setWhereCondition(" sales_value >= " + masher5List.getRankItemU5());
            dcl.setItemName(masher5List.getRankR9C2());
            //ìXîÃÇÃèÍçáÇÕ ìXîÃîÑè„ÅFÇòÇòÇòÇòâ~Å`ÇòÇòÇòÇòÇòâ~
            //çwì¸ëŒè€ÅFAÅiîÉÇ¡ÇƒÇ¢ÇÈÅj
            //ÇÃÇÊÇ§Ç…ï\é¶ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
            dcl.setFvalue("çwì¸ëŒè€ÅF" +masher5List.getItemGroupName().replace("<html>", "").replace("</html>", "").replace("<br>", "") + "ÅiîÉÇ¡ÇƒÇ¢ÇÈÅj");
        } else if (component.equals(txtr9c3)) {
            if ( flag ) {
            txtr9c3.setCursor(null);
            }
            dcl.setTypeRank(2);
            dcl.setMvalue("ìXîÃîÑè„ : " + masher5List.getRankItemU4() + "â~ Å` " + (masher5List.getRankItemU5()-1) + "â~");
            dcl.setWhereCondition("  sales_value between " + masher5List.getRankItemU4() + " and " + (masher5List.getRankItemU5()-1));
            dcl.setItemName(masher5List.getRankR9C3());
            //ìXîÃÇÃèÍçáÇÕ ìXîÃîÑè„ÅFÇòÇòÇòÇòâ~Å`ÇòÇòÇòÇòÇòâ~
            //çwì¸ëŒè€ÅFAÅiîÉÇ¡ÇƒÇ¢ÇÈÅj
            //ÇÃÇÊÇ§Ç…ï\é¶ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
            dcl.setFvalue("çwì¸ëŒè€ÅF" +masher5List.getItemGroupName().replace("<html>", "").replace("</html>", "").replace("<br>", "") + "ÅiîÉÇ¡ÇƒÇ¢ÇÈÅj");
        } else if (component.equals(txtr9c4)) {
            if ( flag ) {
            txtr9c4.setCursor(null);
            }
            dcl.setTypeRank(2);
            dcl.setMvalue("ìXîÃîÑè„ : " + masher5List.getRankItemU3() + "â~ Å` " + (masher5List.getRankItemU4()-1)+"â~");
            dcl.setWhereCondition(" sales_value between " + masher5List.getRankItemU3() + " and " + (masher5List.getRankItemU4()-1));
            dcl.setItemName(masher5List.getRankR9C4());
            //ìXîÃÇÃèÍçáÇÕ ìXîÃîÑè„ÅFÇòÇòÇòÇòâ~Å`ÇòÇòÇòÇòÇòâ~
            //çwì¸ëŒè€ÅFAÅiîÉÇ¡ÇƒÇ¢ÇÈÅj
            //ÇÃÇÊÇ§Ç…ï\é¶ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
            dcl.setFvalue("çwì¸ëŒè€ÅF" +masher5List.getItemGroupName().replace("<html>", "").replace("</html>", "").replace("<br>", "") + "ÅiîÉÇ¡ÇƒÇ¢ÇÈÅj");
        } else if (component.equals(txtr9c5)) {
            if ( flag ) {
            txtr9c5.setCursor(null);
            }
            dcl.setTypeRank(2);
            dcl.setMvalue("ìXîÃîÑè„ : " + masher5List.getRankItemU2() + "â~ Å` " + (masher5List.getRankItemU3()-1)+"â~");
            dcl.setWhereCondition("  sales_value between " + masher5List.getRankItemU2() + " and " + (masher5List.getRankItemU3()-1));
            dcl.setItemName(masher5List.getRankR9C5());
            //ìXîÃÇÃèÍçáÇÕ ìXîÃîÑè„ÅFÇòÇòÇòÇòâ~Å`ÇòÇòÇòÇòÇòâ~
            //çwì¸ëŒè€ÅFAÅiîÉÇ¡ÇƒÇ¢ÇÈÅj
            //ÇÃÇÊÇ§Ç…ï\é¶ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
            dcl.setFvalue("çwì¸ëŒè€ÅF" +masher5List.getItemGroupName().replace("<html>", "").replace("</html>", "").replace("<br>", "") + "ÅiîÉÇ¡ÇƒÇ¢ÇÈÅj");
        } else if (component.equals(txtr9c6)) {
            if ( flag ) {
            txtr9c6.setCursor(null);
            }
            dcl.setTypeRank(2);
            dcl.setMvalue("ìXîÃîÑè„ :  "+(masher5List.getRankItemU2() -1 ) +"â~à»â∫");
            dcl.setWhereCondition("  sales_value between " + masher5List.getRankItemU1() + " and " + (masher5List.getRankItemU2()-1));
            dcl.setItemName(masher5List.getRankR9C6());
            //ìXîÃÇÃèÍçáÇÕ ìXîÃîÑè„ÅFÇòÇòÇòÇòâ~Å`ÇòÇòÇòÇòÇòâ~
            //çwì¸ëŒè€ÅFAÅiîÉÇ¡ÇƒÇ¢ÇÈÅj
            //ÇÃÇÊÇ§Ç…ï\é¶ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
            dcl.setFvalue("çwì¸ëŒè€ÅF" +masher5List.getItemGroupName().replace("<html>", "").replace("</html>", "").replace("<br>", "") + "ÅiîÉÇ¡ÇƒÇ¢ÇÈÅj");
        }else if (component.equals(txtr10c2)) {                                  //item not buy
            if ( flag ) {
            txtr10c2.setCursor(null);
            }
            dcl.setTypeRank(3);
            dcl.setMvalue("ìXîÃîÑè„ : " + masher5List.getRankItemU5()+ "â~à»è„");
            dcl.setWhereCondition("  sales_value >= " + masher5List.getRankItemU5());
            dcl.setItemName(masher5List.getRankR10C2());
            //ìXîÃÇÃèÍçáÇÕ ìXîÃîÑè„ÅFÇòÇòÇòÇòâ~Å`ÇòÇòÇòÇòÇòâ~
            //çwì¸ëŒè€ÅFAÅiîÉÇ¡ÇƒÇ¢ÇÈÅj
            //ÇÃÇÊÇ§Ç…ï\é¶ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
            dcl.setFvalue("çwì¸ëŒè€ÅF" +masher5List.getItemGroupName().replace("<html>", "").replace("</html>", "").replace("<br>", "") + "ÅiîÉÇ¡ÇƒÇ¢Ç»Ç¢Åj");
        } else if (component.equals(txtr10c3)) {
            if ( flag ) {
            txtr10c3.setCursor(null);
            }
            dcl.setTypeRank(3);
            dcl.setMvalue("ìXîÃîÑè„ : " + masher5List.getRankItemU4() + "â~ Å` " + (masher5List.getRankItemU5()-1) +"â~");
            dcl.setWhereCondition("  sales_value between " + masher5List.getRankItemU4() + " and " + (masher5List.getRankItemU5() - 1));
            dcl.setItemName(masher5List.getRankR10C3());
            //ìXîÃÇÃèÍçáÇÕ ìXîÃîÑè„ÅFÇòÇòÇòÇòâ~Å`ÇòÇòÇòÇòÇòâ~
            //çwì¸ëŒè€ÅFAÅiîÉÇ¡ÇƒÇ¢ÇÈÅj
            //ÇÃÇÊÇ§Ç…ï\é¶ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
            dcl.setFvalue("çwì¸ëŒè€ÅF" +masher5List.getItemGroupName().replace("<html>", "").replace("</html>", "").replace("<br>", "") + "ÅiîÉÇ¡ÇƒÇ¢Ç»Ç¢Åj");
        } else if (component.equals(txtr10c4)) {
            if ( flag ) {
            txtr10c4.setCursor(null);
            }
            dcl.setTypeRank(3);
            dcl.setMvalue("ìXîÃîÑè„ : " + masher5List.getRankItemU3() + "â~ Å` " + (masher5List.getRankItemU4()-1) + "â~");
            dcl.setWhereCondition(" sales_value between " + masher5List.getRankItemU3() + " and " + (masher5List.getRankItemU4() - 1));
            dcl.setItemName(masher5List.getRankR10C4());
            //ìXîÃÇÃèÍçáÇÕ ìXîÃîÑè„ÅFÇòÇòÇòÇòâ~Å`ÇòÇòÇòÇòÇòâ~
            //çwì¸ëŒè€ÅFAÅiîÉÇ¡ÇƒÇ¢ÇÈÅj
            //ÇÃÇÊÇ§Ç…ï\é¶ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
            dcl.setFvalue("çwì¸ëŒè€ÅF" +masher5List.getItemGroupName().replace("<html>", "").replace("</html>", "").replace("<br>", "") + "ÅiîÉÇ¡ÇƒÇ¢Ç»Ç¢Åj");
        } else if (component.equals(txtr10c5)) {
            if ( flag ) {    
            txtr10c5.setCursor(null);
            }
            dcl.setTypeRank(3);
            dcl.setMvalue("ìXîÃîÑè„ : " + masher5List.getRankItemU2() + "â~ Å` " + (masher5List.getRankItemU3()- 1) +"â~");
            dcl.setWhereCondition(" sales_value between " + masher5List.getRankItemU2() + " and " + (masher5List.getRankItemU3() -1 ));
            dcl.setItemName(masher5List.getRankR10C5());
            //ìXîÃÇÃèÍçáÇÕ ìXîÃîÑè„ÅFÇòÇòÇòÇòâ~Å`ÇòÇòÇòÇòÇòâ~
            //çwì¸ëŒè€ÅFAÅiîÉÇ¡ÇƒÇ¢ÇÈÅj
            //ÇÃÇÊÇ§Ç…ï\é¶ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
            dcl.setFvalue("çwì¸ëŒè€ÅF" +masher5List.getItemGroupName().replace("<html>", "").replace("</html>", "").replace("<br>", "") + "ÅiîÉÇ¡ÇƒÇ¢Ç»Ç¢Åj");
        } else if (component.equals(txtr10c6)) {
            if ( flag ) {
            txtr10c6.setCursor(null);
            }
            dcl.setTypeRank(3);
            dcl.setMvalue("ìXîÃîÑè„ :  "+(masher5List.getRankItemU2() -1 ) +"â~à»â∫");
            dcl.setWhereCondition(" sales_value between " + masher5List.getRankItemU1() + " and " + (masher5List.getRankItemU2()-1));
            dcl.setItemName(masher5List.getRankR10C6());
            //ìXîÃÇÃèÍçáÇÕ ìXîÃîÑè„ÅFÇòÇòÇòÇòâ~Å`ÇòÇòÇòÇòÇòâ~
            //çwì¸ëŒè€ÅFAÅiîÉÇ¡ÇƒÇ¢ÇÈÅj
            //ÇÃÇÊÇ§Ç…ï\é¶ÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB
            dcl.setFvalue("çwì¸ëŒè€ÅF" +masher5List.getItemGroupName().replace("<html>", "").replace("</html>", "").replace("<br>", "") + "ÅiîÉÇ¡ÇƒÇ¢Ç»Ç¢Åj");
        }

            try {
                //IVS_LVTu start add 2015/05/21 New request #36880
                if(cmbshop.getSelectedItem() instanceof MstShop)
                    {
                        MstShop ms = (MstShop)cmbshop.getSelectedItem();
                        if (ms != null && ms.getShopID() != null) {
                            dcl.setShopName(ms.getShopName());
                            dcl.setShopId(ms.getShopID());
                        }
                        else {
                            dcl.setShopName("éwíËÇ»Çµ");
                            dcl.setShopId(null);
                        }
                    }
                if(cmbchargeStaff.getSelectedItem() instanceof MstStaff)
                {
                    MstStaff mStaff= (MstStaff)cmbchargeStaff.getSelectedItem();
                    if ( mStaff != null && mStaff.getStaffID() != null ) {
                        dcl.setStaffName(mStaff.toString());
                        dcl.setStaffId(mStaff.getStaffID());
                    } else {
                        dcl.setStaffName("éwíËÇ»Çµ");
                        dcl.setStaffId(null);
                    }
                }
                //get shop category.
                if (cmbCategory.getSelectedItem().equals("")) {
                    dcl.setShopCategoryId(0);
                } else {
                    MstShopCategory shopCategory = null;
                    shopCategory = (MstShopCategory) cmbCategory.getSelectedItem();
                    dcl.setShopCategoryId(shopCategory.getShopCategoryId());
                }
               // get tax 
                if ( rdoTaxUnit.isSelected() ) {
                    dcl.setTaxType(1);
                } else {
                    dcl.setTaxType(0);
                }
                //IVS_LVTu start add 2015/05/21 New request #36880
               if ( flag ){
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
               }

                //IVS_LVTu start edit 2015/04/16 New request #36344
                if( flag ) {
                    dcl.showData(dcl.getTypeRank(), masher5List.getShopCagegory());
                dcl.setOpener(this);
                this.setVisible(false);
                parentFrame.changeContents(dcl);
                }
                if ( flag == false ) {
                    showDataTooltip(component, dcl);
                }
                //IVS_LVTu end edit 2015/04/16 New request #36344
                
            } finally {
                if ( flag ){
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            }

        

    }

    /**
     * Add mouse click event in textbox.
     * @param component 
     */
    private void addMouseListener(final JComponent component) {
        component.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent event) {
                //IVS_LVTu start edit 2015/04/16 New request #36344
                //showMasherRankingPanel(component);
                showMasherRankingPanel(component, true);
                //IVS_LVTu end edit 2015/04/16 New request #36344
            }
            //IVS_LVTu start add 2015/04/16 New request #36344
            public void mouseEntered(MouseEvent me) {
                showMasherRankingPanel(component, false);
                ToolTipManager.sharedInstance().setDismissDelay(15000);
            }

            public void mouseExited(MouseEvent me) {
                ToolTipManager.sharedInstance().setDismissDelay(defaultDismissTimeout);
          }
          //IVS_LVTu end add 2015/04/16 New request #36344  
        });
    }

    /**
     * Search item with pre-condition.
     * @param masher 
     */
    private void searchRankingList(MasherRanking5List masher) {
     
        //get date start and end.
        masher.setTermFrom(cmbTargetPeriodStartDate.getDate());
        masher.setTermTo(cmbTargetPeriodEndDate.getDate());

        //get cycle date.
        Date dayStart = cmbTargetPeriodStartDate.getDate();
        Date dayEnd = cmbTargetPeriodEndDate.getDate();
        long diff = dayEnd.getTime() - dayStart.getTime();
        long diffDays = diff / (24 * 60 * 60 * 1000);
        masher.setCycleDate(diffDays);
        //IVS_LVTu start edit 2015/01/08 Task #34581
        //if dayStart > dayEnd then show message error.
        if(diff < 0)
        {
            MessageDialog.showMessageDialog(this,
                                    "ä˙ä‘ÇÕïsê≥Ç≈Ç∑ÅB",
                                    this.getTitle(),
                                    JOptionPane.ERROR_MESSAGE);
                    cmbTargetPeriodStartDate.requestFocusInWindow();
                    return;
        }
         //IVS_LVTu end edit 2015/01/08 Task #34581
        // get tax type.
        masher.setTaxType(getSelectedTaxType());
        //IVS_LVTu start edit 2015/01/09 Task #34581
        MstRankSetting mstRankSetting = new MstRankSetting();
        //get shop category.
        
        if (cmbCategory.getSelectedItem().equals("")) {
            masher.setShopCagegory(0);
            mstRankSetting.setShopCategoryId(0);
        } else {
            MstShopCategory shopCategory = null;
            shopCategory = (MstShopCategory) cmbCategory.getSelectedItem();
            masher.setShopCagegory(shopCategory.getShopCategoryId());    
            mstRankSetting.setShopCategoryId(shopCategory.getShopCategoryId());
        }
        
        try {
            if(!mstRankSetting.isExists(SystemInfo.getConnection()))
            {
                MessageDialog.showMessageDialog(this,
                    "ÉâÉìÉNê›íËÇ™Ç≥ÇÍÇƒÇ‹ÇπÇÒÅB",
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
                cmbCategory.requestFocusInWindow();
                btnSave.setEnabled(false);
                return;
            }
        } catch (SQLException ex) {
            Logger.getLogger(MasherAnalysis5Panel.class.getName()).log(Level.SEVERE, null, ex);
        }
        //IVS_LVTu end edit 2015/01/09 Task #34581
        //load init data condition adn show header , group name
         boolean isExist =  masher.loadDataHeader(masher.getShopCagegory());
         if (!isExist) {
             MessageDialog.showMessageDialog(this,
                    "èWåvèåèÇ™ê≥ÇµÇ≠ê›íËÇ≥ÇÍÇƒÇ¢Ç‹ÇπÇÒÅB\nèWåvèåèÇê›íËÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB",
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
             cmbCategory.requestFocusInWindow();
             btnSave.setEnabled(false);
             return;
         }else{
              btnSave.setEnabled(true);
         }
        showHeaderRanking();
        
        //item
        masher.loadMasherRanking(2);
        txtr9c2.setText(masher.get(0).getTargetCount() + "êl");
        txtr9c3.setText(masher.get(1).getTargetCount() + "êl");
        txtr9c4.setText(masher.get(2).getTargetCount() + "êl");
        txtr9c5.setText(masher.get(3).getTargetCount() + "êl");
        txtr9c6.setText(masher.get(4).getTargetCount() + "êl");

        masher.loadMasherRanking(3);
        txtr10c2.setText(masher.get(0).getTargetCount() + "êl");
        txtr10c3.setText(masher.get(1).getTargetCount() + "êl");
        txtr10c4.setText(masher.get(2).getTargetCount() + "êl");
        txtr10c5.setText(masher.get(3).getTargetCount() + "êl");
        txtr10c6.setText(masher.get(4).getTargetCount() + "êl");

        //execute sql and return list ranking.
        masher.loadMasherRanking(1);

        ArrayList<String> listSale = new ArrayList<String>();
        listSale = masher.loadDataGroupName(masher.getShopCagegory());
        showGroupName(masher.getShopCagegory(), listSale, masher);
        
        showContentData(masher);

    }
        /**
     * Show data header of panel
     */
    private void showHeaderRanking(){

        //clear item unit price when category is null.
        if(cmbCategory.getSelectedItem().equals("")){
            txtr1c2.setText("");
            txtr1c3.setText("");
            txtr1c4.setText("");
            txtr1c5.setText("");
            txtr1c6.setText("");
            txtr1c7.setText("");
        }else{
            txtr1c2.setText(String.valueOf(masher5List.getRankU5()) + "â~");
            txtr1c3.setText(String.valueOf(masher5List.getRankU4()) + "â~");
            txtr1c4.setText(String.valueOf(masher5List.getRankU3()) + "â~");
            txtr1c5.setText(String.valueOf(masher5List.getRankU2()) + "â~");
            txtr1c6.setText(String.valueOf(masher5List.getRankU1()) + "â~");
            txtr1c7.setText("óàìXíPâø");
        }
        
        //techinic value header
        txtr2c2.setText(String.valueOf(masher5List.getRankM5()) + "â~Å`");
        txtr2c3.setText(String.valueOf(masher5List.getRankM4()) + "â~Å`");
        txtr2c4.setText(String.valueOf(masher5List.getRankM3()) + "â~Å`");
        txtr2c5.setText(String.valueOf(masher5List.getRankM2()) + "â~Å`");
        if(masher5List.getRankM2() == 0 ){
            txtr2c6.setText("Å`" + String.valueOf(masher5List.getRankM2()) + "â~");
        }else{
            txtr2c6.setText("Å`" + String.valueOf(masher5List.getRankM2() - 1) + "â~");
        }
        

        txtr3c1.setText(String.valueOf(masher5List.getRankF5()) + "ì˙à»ì‡");
        if(masher5List.getRankF5() == 0){
            txtr4c1.setText(String.valueOf(masher5List.getRankF5()) + "ì˙ Å` " + (String.valueOf(masher5List.getRankF4())) + "ì˙");
        }else{
            txtr4c1.setText(String.valueOf(masher5List.getRankF5() + 1) + "ì˙ Å` " + (String.valueOf(masher5List.getRankF4())) + "ì˙");
        }
        
        if(masher5List.getRankF4() == 0){
            txtr5c1.setText(String.valueOf(masher5List.getRankF4()) + "ì˙ Å` " + (String.valueOf(masher5List.getRankF3())) + "ì˙");
        }else{
             txtr5c1.setText(String.valueOf(masher5List.getRankF4() + 1) + "ì˙ Å` " + (String.valueOf(masher5List.getRankF3())) + "ì˙");
        }
       
        if(masher5List.getRankF3() == 0){
            txtr6c1.setText(String.valueOf(masher5List.getRankF3()) + "ì˙ Å` " + (String.valueOf(masher5List.getRankF2())) + "ì˙");
        }else{
            txtr6c1.setText(String.valueOf(masher5List.getRankF3() + 1) + "ì˙ Å` " + (String.valueOf(masher5List.getRankF2())) + "ì˙");
        }
        
        txtr7c1.setText((String.valueOf(masher5List.getRankF1())) + "ì˙à»è„");

        //item value
        txtr8c2.setText(String.valueOf(masher5List.getRankItemU5()) + "â~Å`");
        txtr8c3.setText(String.valueOf(masher5List.getRankItemU4()) + "â~Å`");
        txtr8c4.setText(String.valueOf(masher5List.getRankItemU3()) + "â~Å`");
        txtr8c5.setText(String.valueOf(masher5List.getRankItemU2()) + "â~Å`");
        if(masher5List.getRankItemU2() == 0){
            txtr8c6.setText("Å`" + String.valueOf(masher5List.getRankItemU2()) +"â~");
        }else{
            txtr8c6.setText("Å`" + String.valueOf(masher5List.getRankItemU2() - 1)+"â~");
        }
        
    }
    /**
     * Show content data of panel
     * @param masher 
     */
    private void showContentData(MasherRanking5List masher){
        //set text item 
        lblr3c2.setText(masher.getRankR3C2());
        lblr3c3.setText(masher.getRankR3C3());
        lblr3c4.setText(masher.getRankR3C4());
        lblr3c5.setText(masher.getRankR3C5());
        lblr3c6.setText(masher.getRankR3C6());

        lblr4c2.setText(masher.getRankR4C2());
        lblr4c3.setText(masher.getRankR4C3());
        lblr4c4.setText(masher.getRankR4C4());
        lblr4c5.setText(masher.getRankR4C5());
        lblr4c6.setText(masher.getRankR4C6());

        lblr5c2.setText(masher.getRankR5C2());
        lblr5c3.setText(masher.getRankR5C3());
        lblr5c4.setText(masher.getRankR5C4());
        lblr5c5.setText(masher.getRankR5C5());
        lblr5c6.setText(masher.getRankR5C6());

        lblr6c2.setText(masher.getRankR6C2());
        lblr6c3.setText(masher.getRankR6C3());
        lblr6c4.setText(masher.getRankR6C4());
        lblr6c5.setText(masher.getRankR6C5());
        lblr6c6.setText(masher.getRankR6C6());

        lblr7c2.setText(masher.getRankR7C2());
        lblr7c3.setText(masher.getRankR7C3());
        lblr7c4.setText(masher.getRankR7C4());
        lblr7c5.setText(masher.getRankR7C5());
        lblr7c6.setText(masher.getRankR7C6());

        lblr9c2.setText(masher.getRankR9C2());
        lblr9c3.setText(masher.getRankR9C3());
        lblr9c4.setText(masher.getRankR9C4());
        lblr9c5.setText(masher.getRankR9C5());
        lblr9c6.setText(masher.getRankR9C6());

        lblr10c2.setText(masher.getRankR10C2());
        lblr10c3.setText(masher.getRankR10C3());
        lblr10c4.setText(masher.getRankR10C4());
        lblr10c5.setText(masher.getRankR10C5());
        lblr10c6.setText(masher.getRankR10C6());

        //set color item
        Panelr3c2.setBackground(Color.decode("#" + masher.getRankR3C2Color()));
        Panelr3c3.setBackground(Color.decode("#" + masher.getRankR3C3Color()));
        Panelr3c4.setBackground(Color.decode("#" +masher.getRankR3C4Color()));
        Panelr3c5.setBackground(Color.decode("#" +masher.getRankR3C5Color()));
        Panelr3c6.setBackground(Color.decode("#" +masher.getRankR3C6Color()));

        Panelr4c2.setBackground(Color.decode("#" +masher.getRankR4C2Color()));
        Panelr4c3.setBackground(Color.decode("#" +masher.getRankR4C3Color()));
        Panelr4c4.setBackground(Color.decode("#" +masher.getRankR4C4Color()));
        Panelr4c5.setBackground(Color.decode("#" +masher.getRankR4C5Color()));
        Panelr4c6.setBackground(Color.decode("#" +masher.getRankR4C6Color()));

        Panelr5c2.setBackground(Color.decode("#" +masher.getRankR5C2Color()));
        Panelr5c3.setBackground(Color.decode("#" +masher.getRankR5C3Color()));
        Panelr5c4.setBackground(Color.decode("#" +masher.getRankR5C4Color()));
        Panelr5c5.setBackground(Color.decode("#" +masher.getRankR5C5Color()));
        Panelr5c6.setBackground(Color.decode("#" +masher.getRankR5C6Color()));

        Panelr6c2.setBackground(Color.decode("#" +masher.getRankR6C2Color()));
        Panelr6c3.setBackground(Color.decode("#" +masher.getRankR6C3Color()));
        Panelr6c4.setBackground(Color.decode("#" +masher.getRankR6C4Color()));
        Panelr6c5.setBackground(Color.decode("#" +masher.getRankR6C5Color()));
        Panelr6c6.setBackground(Color.decode("#" +masher.getRankR6C6Color()));

        Panelr7c2.setBackground(Color.decode("#" +masher.getRankR7C2Color()));
        Panelr7c3.setBackground(Color.decode("#" +masher.getRankR7C3Color()));
        Panelr7c4.setBackground(Color.decode("#" +masher.getRankR7C4Color()));
        Panelr7c5.setBackground(Color.decode("#" +masher.getRankR7C5Color()));
        Panelr7c6.setBackground(Color.decode("#" +masher.getRankR7C6Color()));

        Panelr9c2.setBackground(Color.decode("#" +masher.getRankR9C2Color()));
        Panelr9c3.setBackground(Color.decode("#" +masher.getRankR9C3Color()));
        Panelr9c4.setBackground(Color.decode("#" +masher.getRankR9C4Color()));
        Panelr9c5.setBackground(Color.decode("#" +masher.getRankR9C5Color()));
        Panelr9c6.setBackground(Color.decode("#" +masher.getRankR9C6Color()));

        Panelr10c2.setBackground(Color.decode("#" +masher.getRankR10C2Color()));
        Panelr10c3.setBackground(Color.decode("#" +masher.getRankR10C3Color()));
        Panelr10c4.setBackground(Color.decode("#" +masher.getRankR10C4Color()));
        Panelr10c5.setBackground(Color.decode("#" +masher.getRankR10C5Color()));
        Panelr10c6.setBackground(Color.decode("#" +masher.getRankR10C6Color()));
        
        
        
        /**
         * get content item detail
         */

        txtr3c2.setText(masher.get(0).getTargetCount() + "êl");
        txtr3c3.setText(masher.get(1).getTargetCount() + "êl");
        txtr3c4.setText(masher.get(2).getTargetCount() + "êl");
        txtr3c5.setText(masher.get(3).getTargetCount() + "êl");
        txtr3c6.setText(masher.get(4).getTargetCount() + "êl");

        txtr4c2.setText(masher.get(5).getTargetCount() + "êl");
        txtr4c3.setText(masher.get(6).getTargetCount() + "êl");
        txtr4c4.setText(masher.get(7).getTargetCount() + "êl");
        txtr4c5.setText(masher.get(8).getTargetCount() + "êl");
        txtr4c6.setText(masher.get(9).getTargetCount() + "êl");

        txtr5c2.setText(masher.get(10).getTargetCount() + "êl");
        txtr5c3.setText(masher.get(11).getTargetCount() + "êl");
        txtr5c4.setText(masher.get(12).getTargetCount() + "êl");
        txtr5c5.setText(masher.get(13).getTargetCount() + "êl");
        txtr5c6.setText(masher.get(14).getTargetCount() + "êl");

        txtr6c2.setText(masher.get(15).getTargetCount() + "êl");
        txtr6c3.setText(masher.get(16).getTargetCount() + "êl");
        txtr6c4.setText(masher.get(17).getTargetCount() + "êl");
        txtr6c5.setText(masher.get(18).getTargetCount() + "êl");
        txtr6c6.setText(masher.get(19).getTargetCount() + "êl");

        txtr7c2.setText(masher.get(20).getTargetCount() + "êl");
        txtr7c3.setText(masher.get(21).getTargetCount() + "êl");
        txtr7c4.setText(masher.get(22).getTargetCount() + "êl");
        txtr7c5.setText(masher.get(23).getTargetCount() + "êl");
        txtr7c6.setText(masher.get(24).getTargetCount() + "êl");
    }

    /**
     * Show group name of panel
     * @param categoryId
     * @param listSaleGroup
     * @param masher 
     */
    private void showGroupName(int categoryId, ArrayList<String> listSaleGroup, MasherRanking5List masher) {
        Collections.sort(listSaleGroup);
        String textGroup = "";
        for (int i = 0; i < listSaleGroup.size(); i++) {
            textGroup += listSaleGroup.get(i) + ",";
            if (i == listSaleGroup.size() - 1) {
                textGroup = textGroup.substring(0, textGroup.length() - 1);
            }
        }
        lblGroupName.setText(masher.getItemGroupName());
        txtr8c1.setText(textGroup);
    }
    /**
     * Get tax or no tax value
     * @return 1 or 2
     */
    private int getSelectedTaxType() {
        if (rdoTaxUnit.isSelected()) {
            return 2;
        }

        return 1;
    }
    
    /**
     * show rank name when init form
     * @param masher 
     */
    private void initRankName(MasherRanking5List masher){
          //set text item 
        lblr3c2.setText(masher.getRankR3C2());
        lblr3c3.setText(masher.getRankR3C3());
        lblr3c4.setText(masher.getRankR3C4());
        lblr3c5.setText(masher.getRankR3C5());
        lblr3c6.setText(masher.getRankR3C6());

        lblr4c2.setText(masher.getRankR4C2());
        lblr4c3.setText(masher.getRankR4C3());
        lblr4c4.setText(masher.getRankR4C4());
        lblr4c5.setText(masher.getRankR4C5());
        lblr4c6.setText(masher.getRankR4C6());

        lblr5c2.setText(masher.getRankR5C2());
        lblr5c3.setText(masher.getRankR5C3());
        lblr5c4.setText(masher.getRankR5C4());
        lblr5c5.setText(masher.getRankR5C5());
        lblr5c6.setText(masher.getRankR5C6());

        lblr6c2.setText(masher.getRankR6C2());
        lblr6c3.setText(masher.getRankR6C3());
        lblr6c4.setText(masher.getRankR6C4());
        lblr6c5.setText(masher.getRankR6C5());
        lblr6c6.setText(masher.getRankR6C6());

        lblr7c2.setText(masher.getRankR7C2());
        lblr7c3.setText(masher.getRankR7C3());
        lblr7c4.setText(masher.getRankR7C4());
        lblr7c5.setText(masher.getRankR7C5());
        lblr7c6.setText(masher.getRankR7C6());

        lblr9c2.setText(masher.getRankR9C2());
        lblr9c3.setText(masher.getRankR9C3());
        lblr9c4.setText(masher.getRankR9C4());
        lblr9c5.setText(masher.getRankR9C5());
        lblr9c6.setText(masher.getRankR9C6());

        lblr10c2.setText(masher.getRankR10C2());
        lblr10c3.setText(masher.getRankR10C3());
        lblr10c4.setText(masher.getRankR10C4());
        lblr10c5.setText(masher.getRankR10C5());
        lblr10c6.setText(masher.getRankR10C6());

        //set color item
        Panelr3c2.setBackground(Color.decode("#" + masher.getRankR3C2Color()));
        Panelr3c3.setBackground(Color.decode("#" + masher.getRankR3C3Color()));
        Panelr3c4.setBackground(Color.decode("#" +masher.getRankR3C4Color()));
        Panelr3c5.setBackground(Color.decode("#" +masher.getRankR3C5Color()));
        Panelr3c6.setBackground(Color.decode("#" +masher.getRankR3C6Color()));

        Panelr4c2.setBackground(Color.decode("#" +masher.getRankR4C2Color()));
        Panelr4c3.setBackground(Color.decode("#" +masher.getRankR4C3Color()));
        Panelr4c4.setBackground(Color.decode("#" +masher.getRankR4C4Color()));
        Panelr4c5.setBackground(Color.decode("#" +masher.getRankR4C5Color()));
        Panelr4c6.setBackground(Color.decode("#" +masher.getRankR4C6Color()));

        Panelr5c2.setBackground(Color.decode("#" +masher.getRankR5C2Color()));
        Panelr5c3.setBackground(Color.decode("#" +masher.getRankR5C3Color()));
        Panelr5c4.setBackground(Color.decode("#" +masher.getRankR5C4Color()));
        Panelr5c5.setBackground(Color.decode("#" +masher.getRankR5C5Color()));
        Panelr5c6.setBackground(Color.decode("#" +masher.getRankR5C6Color()));

        Panelr6c2.setBackground(Color.decode("#" +masher.getRankR6C2Color()));
        Panelr6c3.setBackground(Color.decode("#" +masher.getRankR6C3Color()));
        Panelr6c4.setBackground(Color.decode("#" +masher.getRankR6C4Color()));
        Panelr6c5.setBackground(Color.decode("#" +masher.getRankR6C5Color()));
        Panelr6c6.setBackground(Color.decode("#" +masher.getRankR6C6Color()));

        Panelr7c2.setBackground(Color.decode("#" +masher.getRankR7C2Color()));
        Panelr7c3.setBackground(Color.decode("#" +masher.getRankR7C3Color()));
        Panelr7c4.setBackground(Color.decode("#" +masher.getRankR7C4Color()));
        Panelr7c5.setBackground(Color.decode("#" +masher.getRankR7C5Color()));
        Panelr7c6.setBackground(Color.decode("#" +masher.getRankR7C6Color()));

        Panelr9c2.setBackground(Color.decode("#" +masher.getRankR9C2Color()));
        Panelr9c3.setBackground(Color.decode("#" +masher.getRankR9C3Color()));
        Panelr9c4.setBackground(Color.decode("#" +masher.getRankR9C4Color()));
        Panelr9c5.setBackground(Color.decode("#" +masher.getRankR9C5Color()));
        Panelr9c6.setBackground(Color.decode("#" +masher.getRankR9C6Color()));

        Panelr10c2.setBackground(Color.decode("#" +masher.getRankR10C2Color()));
        Panelr10c3.setBackground(Color.decode("#" +masher.getRankR10C3Color()));
        Panelr10c4.setBackground(Color.decode("#" +masher.getRankR10C4Color()));
        Panelr10c5.setBackground(Color.decode("#" +masher.getRankR10C5Color()));
        Panelr10c6.setBackground(Color.decode("#" +masher.getRankR10C6Color()));
    }
    
    //IVS_LVTu start edit 2015/01/09 Task #34581
    /**
     * É{É^ÉìÇ…É}ÉEÉXÉJÅ[É\ÉãÇ™èÊÇ¡ÇΩÇ∆Ç´Ç…ÉJÅ[É\ÉãÇïœçXÇ∑ÇÈÉCÉxÉìÉgÇí«â¡Ç∑ÇÈÅB
     */
    private void addMouseCursorChange()
    {
            SystemInfo.addMouseCursorChange(btnSearch);
            SystemInfo.addMouseCursorChange(btnSave);
            SystemInfo.addMouseCursorChange(setNameButton);
            SystemInfo.addMouseCursorChange(btSetRank);
            SystemInfo.addMouseCursorChange(btItemGroup);
            SystemInfo.addMouseCursorChange(setConditionButton);
    }
    //IVS_LVTu end edit 2015/01/09 Task #34581

    //IVS_LVTu start add 2015/04/24 Task New request #36344
    public void showDataTooltip(final JComponent component, MasherRankingPanel dcl){
        try {
            long customerCountTotal = 0l;
            long visitCountTotal = 0l;
            long salesValueTotal = 0l;
            long valueAVG = 0l;
            
            ResultSetWrapper rs = null;
            try{
                rs = SystemInfo.getConnection().executeQuery(dcl.getCustomerValueRankingSQL(dcl.getTypeRank(), dcl.getCategoryId()));
            }catch(SQLException e)
            {
                MessageDialog.showMessageDialog(this,
                    "DBê⁄ë±Ç™é∏îsÇ‡ÇµÇ≠ÇÕÉ^ÉCÉ}Å[ÉAÉEÉgÇ≈ÇµÇΩÅB\n ÉÅÉjÉÖÅ[Ç©ÇÁçƒìxé¿é{Ç®äËÇ¢Ç¢ÇΩÇµÇ‹Ç∑ÅB",
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
                SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
                return;
            }

            while (rs.next()) {
                salesValueTotal += rs.getLong("sales_value");
                customerCountTotal += 1;
                visitCountTotal += rs.getLong("visit_count");
            }
            rs.close();
            
            valueAVG = visitCountTotal > 0 ? (salesValueTotal / visitCountTotal) : 0;
            
            component.setToolTipText("<html>å⁄ãqêî " + customerCountTotal +"êl<br>"
                + "óàìXâÒêî " + visitCountTotal +"âÒ<br>"
                + "îÑè„ã‡äz " + salesValueTotal +"â~<br>"
                + "ïΩãœíPâø " + valueAVG +"â~<html>"
                );
        } catch (Exception e) {
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
        }
    }
    //IVS_LVTu start add 2015/04/24 Task New request #36344

    //IVS_LVTu start add 2015/05/21 New request #36880
    /**
	 * éÂíSìñÇéÊìæÇ∑ÇÈ
	 */
	private void initChargeStaff()
	{
	    cmbchargeStaff.removeAllItems();

	    MstStaffs staffs = new MstStaffs();
            String shopId = "";
            if ( this.masher5List.getShopId() != null) {
                shopId = this.masher5List.getShopId().toString();
                staffs.setShopIDList(shopId);
            }
            else {
                staffs.setShopIDList(SystemInfo.getCurrentShop().getShopID().toString());
            }
	    try
	    {
		staffs.load(SystemInfo.getConnection(), true);
	    }
	    catch(java.sql.SQLException e)
	    {
		SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
	    }

	    for (MstStaff ms : staffs) {
		cmbchargeStaff.addItem(ms);
	    }

	    cmbchargeStaff.setSelectedIndex(0);
	}	
        //IVS_LVTu end add 2015/05/21 New request #36880

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panelr10c2;
    private javax.swing.JPanel Panelr10c3;
    private javax.swing.JPanel Panelr10c4;
    private javax.swing.JPanel Panelr10c5;
    private javax.swing.JPanel Panelr10c6;
    private javax.swing.JPanel Panelr1c2;
    private javax.swing.JPanel Panelr1c3;
    private javax.swing.JPanel Panelr1c4;
    private javax.swing.JPanel Panelr1c5;
    private javax.swing.JPanel Panelr1c6;
    private javax.swing.JPanel Panelr1c7;
    private javax.swing.JPanel Panelr2c2;
    private javax.swing.JPanel Panelr2c3;
    private javax.swing.JPanel Panelr2c4;
    private javax.swing.JPanel Panelr2c5;
    private javax.swing.JPanel Panelr2c6;
    private javax.swing.JPanel Panelr2c8;
    private javax.swing.JPanel Panelr3c1;
    private javax.swing.JPanel Panelr3c2;
    private javax.swing.JPanel Panelr3c3;
    private javax.swing.JPanel Panelr3c4;
    private javax.swing.JPanel Panelr3c5;
    private javax.swing.JPanel Panelr3c6;
    private javax.swing.JPanel Panelr4c1;
    private javax.swing.JPanel Panelr4c2;
    private javax.swing.JPanel Panelr4c3;
    private javax.swing.JPanel Panelr4c4;
    private javax.swing.JPanel Panelr4c5;
    private javax.swing.JPanel Panelr4c6;
    private javax.swing.JPanel Panelr5c1;
    private javax.swing.JPanel Panelr5c2;
    private javax.swing.JPanel Panelr5c3;
    private javax.swing.JPanel Panelr5c4;
    private javax.swing.JPanel Panelr5c5;
    private javax.swing.JPanel Panelr5c6;
    private javax.swing.JPanel Panelr6c1;
    private javax.swing.JPanel Panelr6c2;
    private javax.swing.JPanel Panelr6c3;
    private javax.swing.JPanel Panelr6c4;
    private javax.swing.JPanel Panelr6c5;
    private javax.swing.JPanel Panelr6c6;
    private javax.swing.JPanel Panelr7c1;
    private javax.swing.JPanel Panelr7c2;
    private javax.swing.JPanel Panelr7c3;
    private javax.swing.JPanel Panelr7c4;
    private javax.swing.JPanel Panelr7c5;
    private javax.swing.JPanel Panelr7c6;
    private javax.swing.JPanel Panelr8c1;
    private javax.swing.JPanel Panelr8c2;
    private javax.swing.JPanel Panelr8c3;
    private javax.swing.JPanel Panelr8c4;
    private javax.swing.JPanel Panelr8c5;
    private javax.swing.JPanel Panelr8c6;
    private javax.swing.JPanel Panelr9c2;
    private javax.swing.JPanel Panelr9c3;
    private javax.swing.JPanel Panelr9c4;
    private javax.swing.JPanel Panelr9c5;
    private javax.swing.JPanel Panelr9c6;
    private javax.swing.JButton btItemGroup;
    private javax.swing.JButton btSetRank;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel chargeStaffLabel;
    private javax.swing.JComboBox cmbCategory;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEndDate;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStartDate;
    private javax.swing.JComboBox cmbchargeStaff;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel cmbshop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JLabel lblGroupName;
    private javax.swing.JTextField lblr10c2;
    private javax.swing.JTextField lblr10c3;
    private javax.swing.JTextField lblr10c4;
    private javax.swing.JTextField lblr10c5;
    private javax.swing.JTextField lblr10c6;
    private javax.swing.JTextField lblr3c2;
    private javax.swing.JTextField lblr3c3;
    private javax.swing.JTextField lblr3c4;
    private javax.swing.JTextField lblr3c5;
    private javax.swing.JTextField lblr3c6;
    private javax.swing.JTextField lblr4c2;
    private javax.swing.JTextField lblr4c3;
    private javax.swing.JTextField lblr4c4;
    private javax.swing.JTextField lblr4c5;
    private javax.swing.JTextField lblr4c6;
    private javax.swing.JTextField lblr5c2;
    private javax.swing.JTextField lblr5c3;
    private javax.swing.JTextField lblr5c4;
    private javax.swing.JTextField lblr5c5;
    private javax.swing.JTextField lblr5c6;
    private javax.swing.JTextField lblr6c2;
    private javax.swing.JTextField lblr6c3;
    private javax.swing.JTextField lblr6c4;
    private javax.swing.JTextField lblr6c5;
    private javax.swing.JTextField lblr6c6;
    private javax.swing.JTextField lblr7c2;
    private javax.swing.JTextField lblr7c3;
    private javax.swing.JTextField lblr7c4;
    private javax.swing.JTextField lblr7c5;
    private javax.swing.JTextField lblr7c6;
    private javax.swing.JTextField lblr9c2;
    private javax.swing.JTextField lblr9c3;
    private javax.swing.JTextField lblr9c4;
    private javax.swing.JTextField lblr9c5;
    private javax.swing.JTextField lblr9c6;
    private javax.swing.JRadioButton rdoTaxBlank;
    private javax.swing.JRadioButton rdoTaxUnit;
    private javax.swing.JButton setConditionButton;
    private javax.swing.JButton setNameButton;
    private javax.swing.JLabel shopLabel;
    private javax.swing.JTextField txtr10c2;
    private javax.swing.JTextField txtr10c3;
    private javax.swing.JTextField txtr10c4;
    private javax.swing.JTextField txtr10c5;
    private javax.swing.JTextField txtr10c6;
    private javax.swing.JTextField txtr1c2;
    private javax.swing.JTextField txtr1c3;
    private javax.swing.JTextField txtr1c4;
    private javax.swing.JTextField txtr1c5;
    private javax.swing.JTextField txtr1c6;
    private javax.swing.JTextField txtr1c7;
    private javax.swing.JTextField txtr2c2;
    private javax.swing.JTextField txtr2c3;
    private javax.swing.JTextField txtr2c4;
    private javax.swing.JTextField txtr2c5;
    private javax.swing.JTextField txtr2c6;
    private javax.swing.JTextField txtr2c8;
    private javax.swing.JTextField txtr3c1;
    private javax.swing.JTextField txtr3c2;
    private javax.swing.JTextField txtr3c3;
    private javax.swing.JTextField txtr3c4;
    private javax.swing.JTextField txtr3c5;
    private javax.swing.JTextField txtr3c6;
    private javax.swing.JTextField txtr4c1;
    private javax.swing.JTextField txtr4c2;
    private javax.swing.JTextField txtr4c3;
    private javax.swing.JTextField txtr4c4;
    private javax.swing.JTextField txtr4c5;
    private javax.swing.JTextField txtr4c6;
    private javax.swing.JTextField txtr5c1;
    private javax.swing.JTextField txtr5c2;
    private javax.swing.JTextField txtr5c3;
    private javax.swing.JTextField txtr5c4;
    private javax.swing.JTextField txtr5c5;
    private javax.swing.JTextField txtr5c6;
    private javax.swing.JTextField txtr6c1;
    private javax.swing.JTextField txtr6c2;
    private javax.swing.JTextField txtr6c3;
    private javax.swing.JTextField txtr6c4;
    private javax.swing.JTextField txtr6c5;
    private javax.swing.JTextField txtr6c6;
    private javax.swing.JTextField txtr7c1;
    private javax.swing.JTextField txtr7c2;
    private javax.swing.JTextField txtr7c3;
    private javax.swing.JTextField txtr7c4;
    private javax.swing.JTextField txtr7c5;
    private javax.swing.JTextField txtr7c6;
    private javax.swing.JTextField txtr8c1;
    private javax.swing.JTextField txtr8c2;
    private javax.swing.JTextField txtr8c3;
    private javax.swing.JTextField txtr8c4;
    private javax.swing.JTextField txtr8c5;
    private javax.swing.JTextField txtr8c6;
    private javax.swing.JTextField txtr9c2;
    private javax.swing.JTextField txtr9c3;
    private javax.swing.JTextField txtr9c4;
    private javax.swing.JTextField txtr9c5;
    private javax.swing.JTextField txtr9c6;
    // End of variables declaration//GEN-END:variables

}
