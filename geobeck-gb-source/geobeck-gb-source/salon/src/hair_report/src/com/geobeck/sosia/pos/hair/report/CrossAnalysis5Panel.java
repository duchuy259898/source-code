/*
 * CrossAnalysisPanel.java
 *
 * Created on 2008/07/20, 11:00
 */

package com.geobeck.sosia.pos.hair.report;

import com.geobeck.sosia.pos.system.SystemInfo;
import java.awt.*;
import java.util.*;
import java.math.BigDecimal;
import javax.swing.*;
import javax.swing.text.*;
import com.geobeck.swing.*;
import com.geobeck.sosia.pos.master.customer.MstCustomer;
import com.geobeck.sosia.pos.util.MessageUtil;
import com.geobeck.sosia.pos.master.company.*;
import com.geobeck.sql.ResultSetWrapper;

/**
 *
 * @author  ryugou
 */
public class CrossAnalysis5Panel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx
{
        /** Creates new form StaffShopRankingPanel */
	public CrossAnalysis5Panel()
	{
		initComponents();
                addMouseCursorChange();
                this.setSize(820,680);
		this.setPath("帳票出力");
		this.setTitle("クロス分析5");
		this.setKeyListener();
                
                this.initChargeStaff();
                
                //対象期間の設定
                Calendar cal = Calendar.getInstance();
                cal.add(Calendar.MONTH, 1);
                cal.set(Calendar.DAY_OF_MONTH, 1);
                cal.add(Calendar.YEAR, -1);
		this.cmbTargetPeriodStartDate.setDate(cal.getTime());
                cal.add(Calendar.YEAR, 1);
                cal.add(Calendar.DAY_OF_MONTH, -1);
		this.cmbTargetPeriodEndDate.setDate(cal.getTime());
		
		// 顧客共有の有無によりグループ表示を切り替える
		if (SystemInfo.getSetteing().isShareCustomer())
		{
		    SystemInfo.initGroupShopComponents(shop1, 3);
		}
		else
		{
		    SystemInfo.initGroupShopComponents(shop1, 2);
		}
                
                //初期化処理
                this.init();
                
                this.setChkValidLabel();
                
                if (SystemInfo.getAccountSetting().getReportPriceType() == 0) {
                    rdoTaxBlank.setSelected(false);
                    rdoTaxUnit.setSelected(true);
                } else {
                    rdoTaxBlank.setSelected(true);
                    rdoTaxUnit.setSelected(false);
                }

                rdoSalesAll.setSelected(true);
                
	}
        
	/**
	 * ボタンにマウスカーソルが乗ったときにカーソルを変更するイベントを追加する。
	 */
	private void addMouseCursorChange()
	{
            SystemInfo.addMouseCursorChange(setPeriodButton);
            SystemInfo.addMouseCursorChange(searchButton);
            SystemInfo.addMouseCursorChange(setConditionButton);
            SystemInfo.addMouseCursorChange(setNameButton);
            SystemInfo.addMouseCursorChange(f5m5);
            SystemInfo.addMouseCursorChange(f5m4);
            SystemInfo.addMouseCursorChange(f5m3);
            SystemInfo.addMouseCursorChange(f5m2);
            SystemInfo.addMouseCursorChange(f5m1);
            SystemInfo.addMouseCursorChange(f4m5);
            SystemInfo.addMouseCursorChange(f4m4);
            SystemInfo.addMouseCursorChange(f4m3);
            SystemInfo.addMouseCursorChange(f4m2);
            SystemInfo.addMouseCursorChange(f4m1);
            SystemInfo.addMouseCursorChange(f3m5);
            SystemInfo.addMouseCursorChange(f3m4);
            SystemInfo.addMouseCursorChange(f3m3);
            SystemInfo.addMouseCursorChange(f3m2);
            SystemInfo.addMouseCursorChange(f3m1);
            SystemInfo.addMouseCursorChange(f2m5);
            SystemInfo.addMouseCursorChange(f2m4);
            SystemInfo.addMouseCursorChange(f2m3);
            SystemInfo.addMouseCursorChange(f2m2);
            SystemInfo.addMouseCursorChange(f2m1);
            SystemInfo.addMouseCursorChange(f1m5);
            SystemInfo.addMouseCursorChange(f1m4);
            SystemInfo.addMouseCursorChange(f1m3);
            SystemInfo.addMouseCursorChange(f1m2);
            SystemInfo.addMouseCursorChange(f1m1);            
	}
        
	/**
	 * 主担当を取得する
	 */
	private void initChargeStaff()
	{
	    chargeStaff.removeAllItems();

	    MstStaffs staffs = new MstStaffs();

	    staffs.setShopIDList(SystemInfo.getCurrentShop().getShopID().toString());

	    try
	    {
		staffs.load(SystemInfo.getConnection(), true);
	    }
	    catch(java.sql.SQLException e)
	    {
		//SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
	    }

	    for (MstStaff ms : staffs) {
		chargeStaff.addItem(ms);
	    }

	    chargeStaff.setSelectedIndex(0);
	}	
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        taxGroup = new javax.swing.ButtonGroup();
        salesGroup = new javax.swing.ButtonGroup();
        pnlMain = new javax.swing.JPanel();
        shopLabel = new javax.swing.JLabel();
        shop1 = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        chargeStaffLabel = new javax.swing.JLabel();
        chargeStaffNo = new javax.swing.JTextField();
        chargeStaff = new javax.swing.JComboBox();
        lblTargetPeriod = new javax.swing.JLabel();
        cmbTargetPeriodStartDate = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        cmbTargetPeriodEndDate = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        isPastTotal = new javax.swing.JCheckBox();
        lblTargetPeriod2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblTax = new javax.swing.JLabel();
        rdoTaxUnit = new javax.swing.JRadioButton();
        rdoTaxBlank = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        chkValid1 = new javax.swing.JCheckBox();
        lblTax23 = new javax.swing.JLabel();
        lblTax24 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        chkValid2 = new javax.swing.JCheckBox();
        chkValid3 = new javax.swing.JCheckBox();
        setPeriodButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        chkCondition1 = new javax.swing.JCheckBox();
        chkCondition2 = new javax.swing.JCheckBox();
        chkCondition3 = new javax.swing.JCheckBox();
        chkCondition4 = new javax.swing.JCheckBox();
        setNameButton = new javax.swing.JButton();
        setConditionButton = new javax.swing.JButton();
        lblSales = new javax.swing.JLabel();
        rdoSalesItem = new javax.swing.JRadioButton();
        rdoSalesAll = new javax.swing.JRadioButton();
        rdoSalesTech = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        yLabel = new javax.swing.JLabel();
        lblTax27 = new javax.swing.JLabel();
        lblTax22 = new javax.swing.JLabel();
        lblTax28 = new javax.swing.JLabel();
        lblTax25 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        xLabel = new javax.swing.JLabel();
        lblTax19 = new javax.swing.JLabel();
        lblTax20 = new javax.swing.JLabel();
        f2m3Panel = new javax.swing.JPanel();
        f2m3 = new javax.swing.JTextField();
        f2m3Label = new javax.swing.JTextField();
        f2m3Ratio = new javax.swing.JTextField();
        f1m3Panel = new javax.swing.JPanel();
        f1m3 = new javax.swing.JTextField();
        f1m3Label = new javax.swing.JTextField();
        f1m3Ratio = new javax.swing.JTextField();
        f2m2Panel = new javax.swing.JPanel();
        f2m2 = new javax.swing.JTextField();
        f2m2Label = new javax.swing.JTextField();
        f2m2Ratio = new javax.swing.JTextField();
        f3m2Panel = new javax.swing.JPanel();
        f3m2 = new javax.swing.JTextField();
        f3m2Label = new javax.swing.JTextField();
        f3m2Ratio = new javax.swing.JTextField();
        f1m2Panel = new javax.swing.JPanel();
        f1m2 = new javax.swing.JTextField();
        f1m2Label = new javax.swing.JTextField();
        f1m2Ratio = new javax.swing.JTextField();
        f2m1Panel = new javax.swing.JPanel();
        f2m1 = new javax.swing.JTextField();
        f2m1Label = new javax.swing.JTextField();
        f2m1Ratio = new javax.swing.JTextField();
        f3m1Panel = new javax.swing.JPanel();
        f3m1 = new javax.swing.JTextField();
        f3m1Label = new javax.swing.JTextField();
        f3m1Ratio = new javax.swing.JTextField();
        lblTax21 = new javax.swing.JLabel();
        f1m1Panel = new javax.swing.JPanel();
        f1m1 = new javax.swing.JTextField();
        f1m1Label = new javax.swing.JTextField();
        f1m1Ratio = new javax.swing.JTextField();
        f3m3Panel = new javax.swing.JPanel();
        f3m3 = new javax.swing.JTextField();
        f3m3Label = new javax.swing.JTextField();
        f3m3Ratio = new javax.swing.JTextField();
        f1m4Panel = new javax.swing.JPanel();
        f1m4 = new javax.swing.JTextField();
        f1m4Label = new javax.swing.JTextField();
        f1m4Ratio = new javax.swing.JTextField();
        f1m5Panel = new javax.swing.JPanel();
        f1m5 = new javax.swing.JTextField();
        f1m5Label = new javax.swing.JTextField();
        f1m5Ratio = new javax.swing.JTextField();
        f2m4Panel = new javax.swing.JPanel();
        f2m4 = new javax.swing.JTextField();
        f2m4Label = new javax.swing.JTextField();
        f2m4Ratio = new javax.swing.JTextField();
        f2m5Panel = new javax.swing.JPanel();
        f2m5 = new javax.swing.JTextField();
        f2m5Label = new javax.swing.JTextField();
        f2m5Ratio = new javax.swing.JTextField();
        f3m4Panel = new javax.swing.JPanel();
        f3m4 = new javax.swing.JTextField();
        f3m4Label = new javax.swing.JTextField();
        f3m4Ratio = new javax.swing.JTextField();
        f3m5Panel = new javax.swing.JPanel();
        f3m5 = new javax.swing.JTextField();
        f3m5Label = new javax.swing.JTextField();
        f3m5Ratio = new javax.swing.JTextField();
        f4m2Panel = new javax.swing.JPanel();
        f4m2 = new javax.swing.JTextField();
        f4m2Label = new javax.swing.JTextField();
        f4m2Ratio = new javax.swing.JTextField();
        f4m1Panel = new javax.swing.JPanel();
        f4m1 = new javax.swing.JTextField();
        f4m1Label = new javax.swing.JTextField();
        f4m1Ratio = new javax.swing.JTextField();
        f4m3Panel = new javax.swing.JPanel();
        f4m3 = new javax.swing.JTextField();
        f4m3Label = new javax.swing.JTextField();
        f4m3Ratio = new javax.swing.JTextField();
        f4m4Panel = new javax.swing.JPanel();
        f4m4 = new javax.swing.JTextField();
        f4m4Label = new javax.swing.JTextField();
        f4m4Ratio = new javax.swing.JTextField();
        f4m5Panel = new javax.swing.JPanel();
        f4m5 = new javax.swing.JTextField();
        f4m5Label = new javax.swing.JTextField();
        f4m5Ratio = new javax.swing.JTextField();
        f5m2Panel = new javax.swing.JPanel();
        f5m2 = new javax.swing.JTextField();
        f5m2Label = new javax.swing.JTextField();
        f5m2Ratio = new javax.swing.JTextField();
        f5m1Panel = new javax.swing.JPanel();
        f5m1 = new javax.swing.JTextField();
        f5m1Label = new javax.swing.JTextField();
        f5m1Ratio = new javax.swing.JTextField();
        f5m3Panel = new javax.swing.JPanel();
        f5m3 = new javax.swing.JTextField();
        f5m3Label = new javax.swing.JTextField();
        f5m3Ratio = new javax.swing.JTextField();
        f5m4Panel = new javax.swing.JPanel();
        f5m4 = new javax.swing.JTextField();
        f5m4Label = new javax.swing.JTextField();
        f5m4Ratio = new javax.swing.JTextField();
        f5m5Panel = new javax.swing.JPanel();
        f5m5 = new javax.swing.JTextField();
        f5m5Label = new javax.swing.JTextField();
        f5m5Ratio = new javax.swing.JTextField();
        lblTax29 = new javax.swing.JLabel();
        lblTax30 = new javax.swing.JLabel();
        lblTax31 = new javax.swing.JLabel();
        lblTax32 = new javax.swing.JLabel();

        setFocusCycleRoot(true);
        setOpaque(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        pnlMain.setOpaque(false);
        pnlMain.setLayout(null);

        shopLabel.setText("店舗");
        pnlMain.add(shopLabel);
        shopLabel.setBounds(10, 10, 60, 22);

        shop1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        shop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shop1ActionPerformed(evt);
            }
        });
        pnlMain.add(shop1);
        shop1.setBounds(80, 10, 223, 22);

        chargeStaffLabel.setText("主担当者");
        pnlMain.add(chargeStaffLabel);
        chargeStaffLabel.setBounds(10, 40, 60, 25);

        chargeStaffNo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        chargeStaffNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                chargeStaffNoFocusLost(evt);
            }
        });
        pnlMain.add(chargeStaffNo);
        chargeStaffNo.setBounds(80, 40, 40, 25);

        chargeStaff.setMaximumRowCount(12);
        chargeStaff.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        chargeStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeStaffActionPerformed(evt);
            }
        });
        pnlMain.add(chargeStaff);
        chargeStaff.setBounds(125, 40, 150, 24);

        lblTargetPeriod.setText("対象期間");
        lblTargetPeriod.setFocusCycleRoot(true);
        pnlMain.add(lblTargetPeriod);
        lblTargetPeriod.setBounds(10, 70, 60, 21);

        cmbTargetPeriodStartDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodStartDate.setFocusCycleRoot(true);
        cmbTargetPeriodStartDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodStartDateFocusGained(evt);
            }
        });
        pnlMain.add(cmbTargetPeriodStartDate);
        cmbTargetPeriodStartDate.setBounds(80, 70, 90, 23);

        cmbTargetPeriodEndDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cmbTargetPeriodEndDate.setFocusCycleRoot(true);
        cmbTargetPeriodEndDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTargetPeriodEndDateFocusGained(evt);
            }
        });
        pnlMain.add(cmbTargetPeriodEndDate);
        cmbTargetPeriodEndDate.setBounds(190, 70, 90, 23);

        isPastTotal.setText("過去累積(実績)も含む");
        isPastTotal.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        isPastTotal.setMargin(new java.awt.Insets(0, 0, 0, 0));
        isPastTotal.setOpaque(false);
        pnlMain.add(isPastTotal);
        isPastTotal.setBounds(300, 70, 140, 23);

        lblTargetPeriod2.setText("対象期間内に来店し、かつ過去累計（実績）の来店回数や売上金額で分析する場合にチェックしてください ");
        lblTargetPeriod2.setFocusCycleRoot(true);
        pnlMain.add(lblTargetPeriod2);
        lblTargetPeriod2.setBounds(300, 90, 520, 20);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("〜");
        jLabel1.setFocusCycleRoot(true);
        pnlMain.add(jLabel1);
        jLabel1.setBounds(170, 70, 20, 21);

        lblTax.setText("税区分");
        lblTax.setFocusCycleRoot(true);
        pnlMain.add(lblTax);
        lblTax.setBounds(10, 100, 60, 20);

        taxGroup.add(rdoTaxUnit);
        rdoTaxUnit.setText("税込");
        rdoTaxUnit.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoTaxUnit.setFocusCycleRoot(true);
        rdoTaxUnit.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoTaxUnit.setOpaque(false);
        pnlMain.add(rdoTaxUnit);
        rdoTaxUnit.setBounds(80, 100, 41, 20);

        taxGroup.add(rdoTaxBlank);
        rdoTaxBlank.setText("税抜");
        rdoTaxBlank.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdoTaxBlank.setFocusCycleRoot(true);
        rdoTaxBlank.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdoTaxBlank.setOpaque(false);
        pnlMain.add(rdoTaxBlank);
        rdoTaxBlank.setBounds(140, 100, 41, 20);

        jLabel2.setText("対象顧客");
        pnlMain.add(jLabel2);
        jLabel2.setBounds(10, 130, 60, 20);

        chkValid1.setSelected(true);
        chkValid1.setText("稼働客（4ヶ月以内）");
        chkValid1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkValid1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chkValid1.setOpaque(false);
        pnlMain.add(chkValid1);
        chkValid1.setBounds(80, 130, 130, 20);

        lblTax23.setText("※ 期間内の来店回数を基準で設定してください。");
        lblTax23.setFocusCycleRoot(true);
        pnlMain.add(lblTax23);
        lblTax23.setBounds(90, 310, 250, 20);

        lblTax24.setText("<html>\n※ 期間内の累計売上金額を基準で設定してください。<br>\n（目安としては、平均客単価×来店回数で[来店回数設定]と同じ基準にしてください）\n</html>");
        lblTax24.setFocusCycleRoot(true);
        pnlMain.add(lblTax24);
        lblTax24.setBounds(360, 310, 420, 30);

        searchButton.setIcon(SystemInfo.getImageIcon("/button/common/show_off.jpg"));
        searchButton.setBorderPainted(false);
        searchButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/show_on.jpg"));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        pnlMain.add(searchButton);
        searchButton.setBounds(700, 160, 92, 25);

        chkValid2.setSelected(true);
        chkValid2.setText("現役客（4〜6ヶ月）");
        chkValid2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkValid2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chkValid2.setOpaque(false);
        pnlMain.add(chkValid2);
        chkValid2.setBounds(210, 130, 130, 20);

        chkValid3.setSelected(true);
        chkValid3.setText("離店客（6ヶ月以上）");
        chkValid3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkValid3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chkValid3.setOpaque(false);
        pnlMain.add(chkValid3);
        chkValid3.setBounds(340, 130, 130, 20);

        setPeriodButton.setIcon(SystemInfo.getImageIcon("/button/common/period_set_off.jpg"));
        setPeriodButton.setBorderPainted(false);
        setPeriodButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/period_set_on.jpg"));
        setPeriodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setPeriodButtonActionPerformed(evt);
            }
        });
        pnlMain.add(setPeriodButton);
        setPeriodButton.setBounds(500, 130, 92, 25);

        jLabel3.setText("集計条件");
        pnlMain.add(jLabel3);
        jLabel3.setBounds(10, 160, 60, 20);

        chkCondition1.setSelected(true);
        chkCondition1.setText("来店回数");
        chkCondition1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkCondition1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chkCondition1.setOpaque(false);
        pnlMain.add(chkCondition1);
        chkCondition1.setBounds(80, 160, 80, 20);

        chkCondition2.setSelected(true);
        chkCondition2.setText("売上金額");
        chkCondition2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkCondition2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chkCondition2.setOpaque(false);
        chkCondition2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkCondition2stateCanged(evt);
            }
        });
        chkCondition2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCondition2ActionPerformed(evt);
            }
        });
        pnlMain.add(chkCondition2);
        chkCondition2.setBounds(160, 160, 80, 20);

        chkCondition3.setText("紹介客数");
        chkCondition3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkCondition3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chkCondition3.setOpaque(false);
        pnlMain.add(chkCondition3);
        chkCondition3.setBounds(240, 160, 80, 20);

        chkCondition4.setText("客単価");
        chkCondition4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkCondition4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chkCondition4.setOpaque(false);
        pnlMain.add(chkCondition4);
        chkCondition4.setBounds(320, 160, 80, 20);

        setNameButton.setIcon(SystemInfo.getImageIcon("/button/common/name_set_off.jpg"));
        setNameButton.setBorderPainted(false);
        setNameButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/name_set_on.jpg"));
        setNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setNameButtonActionPerformed(evt);
            }
        });
        pnlMain.add(setNameButton);
        setNameButton.setBounds(500, 160, 92, 25);

        setConditionButton.setIcon(SystemInfo.getImageIcon("/button/common/cond_set_off.jpg"));
        setConditionButton.setBorderPainted(false);
        setConditionButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/cond_set_on.jpg"));
        setConditionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setConditionButtonActionPerformed(evt);
            }
        });
        pnlMain.add(setConditionButton);
        setConditionButton.setBounds(390, 160, 92, 25);

        lblSales.setText("売上金額");
        lblSales.setFocusCycleRoot(true);
        pnlMain.add(lblSales);
        lblSales.setBounds(10, 190, 60, 20);

        salesGroup.add(rdoSalesItem);
        rdoSalesItem.setText("商品売上");
        rdoSalesItem.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        rdoSalesItem.setFocusCycleRoot(true);
        rdoSalesItem.setOpaque(false);
        rdoSalesItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoSalesItemActionPerformed(evt);
            }
        });
        pnlMain.add(rdoSalesItem);
        rdoSalesItem.setBounds(230, 190, 80, 20);

        salesGroup.add(rdoSalesAll);
        rdoSalesAll.setText("総売上");
        rdoSalesAll.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        rdoSalesAll.setFocusCycleRoot(true);
        rdoSalesAll.setOpaque(false);
        pnlMain.add(rdoSalesAll);
        rdoSalesAll.setBounds(80, 190, 60, 20);

        salesGroup.add(rdoSalesTech);
        rdoSalesTech.setText("技術売上");
        rdoSalesTech.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        rdoSalesTech.setFocusCycleRoot(true);
        rdoSalesTech.setOpaque(false);
        rdoSalesTech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoSalesTechActionPerformed(evt);
            }
        });
        pnlMain.add(rdoSalesTech);
        rdoSalesTech.setBounds(150, 190, 80, 20);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        jPanel13.setBackground(new java.awt.Color(49, 65, 77));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel13.setLayout(null);

        yLabel.setFont(new java.awt.Font("MS UI Gothic", 1, 14)); // NOI18N
        yLabel.setForeground(new java.awt.Color(255, 255, 255));
        yLabel.setText("<html>来<br>店<br>回<br>数</html>");
        yLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        yLabel.setFocusCycleRoot(true);
        jPanel13.add(yLabel);
        yLabel.setBounds(10, 60, 15, 215);

        jPanel1.add(jPanel13);
        jPanel13.setBounds(10, 55, 35, 400);

        lblTax27.setBackground(new java.awt.Color(49, 65, 77));
        lblTax27.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax27.setForeground(new java.awt.Color(255, 255, 255));
        lblTax27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTax27.setText("１");
        lblTax27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTax27.setFocusCycleRoot(true);
        lblTax27.setOpaque(true);
        jPanel1.add(lblTax27);
        lblTax27.setBounds(45, 375, 35, 80);

        lblTax22.setBackground(new java.awt.Color(49, 65, 77));
        lblTax22.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax22.setForeground(new java.awt.Color(255, 255, 255));
        lblTax22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTax22.setText("５");
        lblTax22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTax22.setFocusCycleRoot(true);
        lblTax22.setOpaque(true);
        jPanel1.add(lblTax22);
        lblTax22.setBounds(45, 55, 35, 80);

        lblTax28.setBackground(new java.awt.Color(49, 65, 77));
        lblTax28.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax28.setForeground(new java.awt.Color(255, 255, 255));
        lblTax28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTax28.setText("２");
        lblTax28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTax28.setFocusCycleRoot(true);
        lblTax28.setOpaque(true);
        jPanel1.add(lblTax28);
        lblTax28.setBounds(45, 295, 35, 80);

        lblTax25.setBackground(new java.awt.Color(49, 65, 77));
        lblTax25.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        lblTax25.setForeground(new java.awt.Color(255, 255, 255));
        lblTax25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTax25.setText("ランク");
        lblTax25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTax25.setFocusCycleRoot(true);
        lblTax25.setOpaque(true);
        jPanel1.add(lblTax25);
        lblTax25.setBounds(10, 5, 70, 50);

        jPanel12.setBackground(new java.awt.Color(49, 65, 77));
        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel12.setLayout(null);

        xLabel.setFont(new java.awt.Font("MS UI Gothic", 1, 14)); // NOI18N
        xLabel.setForeground(new java.awt.Color(255, 255, 255));
        xLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        xLabel.setText("売上金額");
        xLabel.setFocusCycleRoot(true);
        jPanel12.add(xLabel);
        xLabel.setBounds(200, 5, 299, 18);

        jPanel1.add(jPanel12);
        jPanel12.setBounds(80, 5, 700, 25);

        lblTax19.setBackground(new java.awt.Color(49, 65, 77));
        lblTax19.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax19.setForeground(new java.awt.Color(255, 255, 255));
        lblTax19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTax19.setText("５");
        lblTax19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTax19.setFocusCycleRoot(true);
        lblTax19.setOpaque(true);
        jPanel1.add(lblTax19);
        lblTax19.setBounds(80, 30, 140, 25);

        lblTax20.setBackground(new java.awt.Color(49, 65, 77));
        lblTax20.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax20.setForeground(new java.awt.Color(255, 255, 255));
        lblTax20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTax20.setText("２");
        lblTax20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTax20.setFocusCycleRoot(true);
        lblTax20.setOpaque(true);
        jPanel1.add(lblTax20);
        lblTax20.setBounds(500, 30, 140, 25);

        f2m3Panel.setBackground(new java.awt.Color(153, 153, 153));
        f2m3Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f2m3Panel.setName("f2m3"); // NOI18N
        f2m3Panel.setLayout(null);

        f2m3.setEditable(false);
        f2m3.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f2m3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m3.setText("0人");
        f2m3.setBorder(null);
        f2m3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m3.setName("f2m3"); // NOI18N
        f2m3.setOpaque(false);
        f2m3Panel.add(f2m3);
        f2m3.setBounds(10, 30, 120, 30);

        f2m3Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f2m3Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m3Label.setText("←[シルバー客]↑");
        f2m3Label.setBorder(null);
        f2m3Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m3Label.setEnabled(false);
        f2m3Label.setName("f2m3"); // NOI18N
        f2m3Label.setOpaque(false);
        f2m3Panel.add(f2m3Label);
        f2m3Label.setBounds(10, 10, 120, 20);

        f2m3Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f2m3Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m3Ratio.setText("0%");
        f2m3Ratio.setBorder(null);
        f2m3Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m3Ratio.setEnabled(false);
        f2m3Ratio.setName("f2m3"); // NOI18N
        f2m3Ratio.setOpaque(false);
        f2m3Panel.add(f2m3Ratio);
        f2m3Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f2m3Panel);
        f2m3Panel.setBounds(360, 295, 140, 80);

        f1m3Panel.setBackground(new java.awt.Color(204, 255, 204));
        f1m3Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f1m3Panel.setName("f1m3"); // NOI18N
        f1m3Panel.setLayout(null);

        f1m3.setEditable(false);
        f1m3.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f1m3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m3.setText("0人");
        f1m3.setBorder(null);
        f1m3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m3.setName("f1m3"); // NOI18N
        f1m3.setOpaque(false);
        f1m3Panel.add(f1m3);
        f1m3.setBounds(10, 30, 120, 30);

        f1m3Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f1m3Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m3Label.setText("[ 新規含む一般客 ]");
        f1m3Label.setBorder(null);
        f1m3Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m3Label.setEnabled(false);
        f1m3Label.setName("f1m3"); // NOI18N
        f1m3Label.setOpaque(false);
        f1m3Panel.add(f1m3Label);
        f1m3Label.setBounds(10, 10, 120, 20);

        f1m3Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f1m3Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m3Ratio.setText("0%");
        f1m3Ratio.setBorder(null);
        f1m3Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m3Ratio.setEnabled(false);
        f1m3Ratio.setName("f1m3"); // NOI18N
        f1m3Ratio.setOpaque(false);
        f1m3Panel.add(f1m3Ratio);
        f1m3Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f1m3Panel);
        f1m3Panel.setBounds(360, 375, 140, 80);

        f2m2Panel.setBackground(new java.awt.Color(153, 153, 153));
        f2m2Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f2m2Panel.setName("f2m2"); // NOI18N
        f2m2Panel.setLayout(null);

        f2m2.setEditable(false);
        f2m2.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f2m2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m2.setText("0人");
        f2m2.setBorder(null);
        f2m2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m2.setName("f2m2"); // NOI18N
        f2m2.setOpaque(false);
        f2m2Panel.add(f2m2);
        f2m2.setBounds(10, 30, 120, 30);

        f2m2Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f2m2Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m2Label.setText("↑[シルバー客]←");
        f2m2Label.setBorder(null);
        f2m2Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m2Label.setEnabled(false);
        f2m2Label.setName("f2m2"); // NOI18N
        f2m2Label.setOpaque(false);
        f2m2Panel.add(f2m2Label);
        f2m2Label.setBounds(10, 10, 120, 20);

        f2m2Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f2m2Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m2Ratio.setText("0%");
        f2m2Ratio.setBorder(null);
        f2m2Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m2Ratio.setEnabled(false);
        f2m2Ratio.setName("f2m2"); // NOI18N
        f2m2Ratio.setOpaque(false);
        f2m2Panel.add(f2m2Ratio);
        f2m2Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f2m2Panel);
        f2m2Panel.setBounds(500, 295, 140, 80);

        f3m2Panel.setBackground(new java.awt.Color(153, 153, 153));
        f3m2Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f3m2Panel.setName("f3m2"); // NOI18N
        f3m2Panel.setLayout(null);

        f3m2.setEditable(false);
        f3m2.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f3m2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m2.setText("0人");
        f3m2.setBorder(null);
        f3m2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m2.setName("f3m2"); // NOI18N
        f3m2.setOpaque(false);
        f3m2Panel.add(f3m2);
        f3m2.setBounds(10, 30, 120, 30);

        f3m2Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f3m2Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m2Label.setText("←[シルバー客]↑");
        f3m2Label.setBorder(null);
        f3m2Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m2Label.setEnabled(false);
        f3m2Label.setName("f3m2"); // NOI18N
        f3m2Label.setOpaque(false);
        f3m2Panel.add(f3m2Label);
        f3m2Label.setBounds(10, 10, 120, 20);

        f3m2Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f3m2Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m2Ratio.setText("0%");
        f3m2Ratio.setBorder(null);
        f3m2Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m2Ratio.setEnabled(false);
        f3m2Ratio.setName("f3m2"); // NOI18N
        f3m2Ratio.setOpaque(false);
        f3m2Panel.add(f3m2Ratio);
        f3m2Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f3m2Panel);
        f3m2Panel.setBounds(500, 215, 140, 80);

        f1m2Panel.setBackground(new java.awt.Color(204, 255, 204));
        f1m2Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f1m2Panel.setName("f1m2"); // NOI18N
        f1m2Panel.setLayout(null);

        f1m2.setEditable(false);
        f1m2.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f1m2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m2.setText("0人");
        f1m2.setBorder(null);
        f1m2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m2.setName("f1m2"); // NOI18N
        f1m2.setOpaque(false);
        f1m2Panel.add(f1m2);
        f1m2.setBounds(10, 30, 120, 30);

        f1m2Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f1m2Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m2Label.setText("[ 新規含む一般客 ]");
        f1m2Label.setBorder(null);
        f1m2Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m2Label.setEnabled(false);
        f1m2Label.setName("f1m2"); // NOI18N
        f1m2Label.setOpaque(false);
        f1m2Panel.add(f1m2Label);
        f1m2Label.setBounds(10, 10, 120, 20);

        f1m2Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f1m2Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m2Ratio.setText("0%");
        f1m2Ratio.setBorder(null);
        f1m2Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m2Ratio.setEnabled(false);
        f1m2Ratio.setName("f1m2"); // NOI18N
        f1m2Ratio.setOpaque(false);
        f1m2Panel.add(f1m2Ratio);
        f1m2Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f1m2Panel);
        f1m2Panel.setBounds(500, 375, 140, 80);

        f2m1Panel.setBackground(new java.awt.Color(204, 255, 255));
        f2m1Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f2m1Panel.setName("f2m1"); // NOI18N
        f2m1Panel.setLayout(null);

        f2m1.setEditable(false);
        f2m1.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f2m1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m1.setText("0人");
        f2m1.setBorder(null);
        f2m1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m1.setName("f2m1"); // NOI18N
        f2m1.setOpaque(false);
        f2m1Panel.add(f2m1);
        f2m1.setBounds(10, 30, 120, 30);

        f2m1Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f2m1Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m1Label.setText("[ 一般客 ]");
        f2m1Label.setBorder(null);
        f2m1Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m1Label.setEnabled(false);
        f2m1Label.setName("f2m1"); // NOI18N
        f2m1Label.setOpaque(false);
        f2m1Panel.add(f2m1Label);
        f2m1Label.setBounds(10, 10, 120, 20);

        f2m1Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f2m1Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m1Ratio.setText("0%");
        f2m1Ratio.setBorder(null);
        f2m1Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m1Ratio.setEnabled(false);
        f2m1Ratio.setName("f2m1"); // NOI18N
        f2m1Ratio.setOpaque(false);
        f2m1Panel.add(f2m1Ratio);
        f2m1Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f2m1Panel);
        f2m1Panel.setBounds(640, 295, 140, 80);

        f3m1Panel.setBackground(new java.awt.Color(204, 255, 255));
        f3m1Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f3m1Panel.setName("f3m1"); // NOI18N
        f3m1Panel.setLayout(null);

        f3m1.setEditable(false);
        f3m1.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f3m1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m1.setText("0人");
        f3m1.setBorder(null);
        f3m1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m1.setName("f3m1"); // NOI18N
        f3m1.setOpaque(false);
        f3m1Panel.add(f3m1);
        f3m1.setBounds(10, 30, 120, 30);

        f3m1Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f3m1Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m1Label.setText("[ 一般客 ]");
        f3m1Label.setBorder(null);
        f3m1Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m1Label.setEnabled(false);
        f3m1Label.setName("f3m1"); // NOI18N
        f3m1Label.setOpaque(false);
        f3m1Panel.add(f3m1Label);
        f3m1Label.setBounds(10, 10, 120, 20);

        f3m1Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f3m1Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m1Ratio.setText("0%");
        f3m1Ratio.setBorder(null);
        f3m1Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m1Ratio.setEnabled(false);
        f3m1Ratio.setName("f3m1"); // NOI18N
        f3m1Ratio.setOpaque(false);
        f3m1Panel.add(f3m1Ratio);
        f3m1Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f3m1Panel);
        f3m1Panel.setBounds(640, 215, 140, 80);

        lblTax21.setBackground(new java.awt.Color(49, 65, 77));
        lblTax21.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax21.setForeground(new java.awt.Color(255, 255, 255));
        lblTax21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTax21.setText("１");
        lblTax21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTax21.setFocusCycleRoot(true);
        lblTax21.setOpaque(true);
        jPanel1.add(lblTax21);
        lblTax21.setBounds(640, 30, 140, 25);

        f1m1Panel.setBackground(new java.awt.Color(204, 255, 204));
        f1m1Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f1m1Panel.setName("f1m1"); // NOI18N
        f1m1Panel.setLayout(null);

        f1m1.setEditable(false);
        f1m1.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f1m1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m1.setText("0人");
        f1m1.setBorder(null);
        f1m1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m1.setName("f1m1"); // NOI18N
        f1m1.setOpaque(false);
        f1m1Panel.add(f1m1);
        f1m1.setBounds(10, 30, 120, 30);

        f1m1Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f1m1Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m1Label.setText("[ 新規含む一般客 ]");
        f1m1Label.setBorder(null);
        f1m1Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m1Label.setEnabled(false);
        f1m1Label.setName("f1m1"); // NOI18N
        f1m1Label.setOpaque(false);
        f1m1Panel.add(f1m1Label);
        f1m1Label.setBounds(10, 10, 120, 20);

        f1m1Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f1m1Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m1Ratio.setText("0%");
        f1m1Ratio.setBorder(null);
        f1m1Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m1Ratio.setEnabled(false);
        f1m1Ratio.setName("f1m1"); // NOI18N
        f1m1Ratio.setOpaque(false);
        f1m1Panel.add(f1m1Ratio);
        f1m1Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f1m1Panel);
        f1m1Panel.setBounds(640, 375, 140, 80);

        f3m3Panel.setBackground(new java.awt.Color(255, 204, 51));
        f3m3Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f3m3Panel.setName("f3m3"); // NOI18N
        f3m3Panel.setLayout(null);

        f3m3.setEditable(false);
        f3m3.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f3m3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m3.setText("0人");
        f3m3.setBorder(null);
        f3m3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m3.setName("f3m3"); // NOI18N
        f3m3.setOpaque(false);
        f3m3Panel.add(f3m3);
        f3m3.setBounds(10, 30, 120, 30);

        f3m3Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f3m3Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m3Label.setText("←[ゴールド客]");
        f3m3Label.setBorder(null);
        f3m3Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m3Label.setEnabled(false);
        f3m3Label.setName("f3m3"); // NOI18N
        f3m3Label.setOpaque(false);
        f3m3Panel.add(f3m3Label);
        f3m3Label.setBounds(10, 10, 120, 20);

        f3m3Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f3m3Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m3Ratio.setText("0%");
        f3m3Ratio.setBorder(null);
        f3m3Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m3Ratio.setEnabled(false);
        f3m3Ratio.setName("f3m3"); // NOI18N
        f3m3Ratio.setOpaque(false);
        f3m3Panel.add(f3m3Ratio);
        f3m3Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f3m3Panel);
        f3m3Panel.setBounds(360, 215, 140, 80);

        f1m4Panel.setBackground(new java.awt.Color(204, 255, 204));
        f1m4Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f1m4Panel.setName("f1m3"); // NOI18N
        f1m4Panel.setLayout(null);

        f1m4.setEditable(false);
        f1m4.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f1m4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m4.setText("0人");
        f1m4.setBorder(null);
        f1m4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m4.setName("f1m3"); // NOI18N
        f1m4.setOpaque(false);
        f1m4Panel.add(f1m4);
        f1m4.setBounds(10, 30, 120, 30);

        f1m4Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f1m4Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m4Label.setText("[ 新規含む一般客 ]");
        f1m4Label.setBorder(null);
        f1m4Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m4Label.setEnabled(false);
        f1m4Label.setName("f1m3"); // NOI18N
        f1m4Label.setOpaque(false);
        f1m4Panel.add(f1m4Label);
        f1m4Label.setBounds(10, 10, 120, 20);

        f1m4Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f1m4Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m4Ratio.setText("0%");
        f1m4Ratio.setBorder(null);
        f1m4Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m4Ratio.setEnabled(false);
        f1m4Ratio.setName("f1m3"); // NOI18N
        f1m4Ratio.setOpaque(false);
        f1m4Panel.add(f1m4Ratio);
        f1m4Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f1m4Panel);
        f1m4Panel.setBounds(220, 375, 140, 80);

        f1m5Panel.setBackground(new java.awt.Color(204, 255, 204));
        f1m5Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f1m5Panel.setName("f1m3"); // NOI18N
        f1m5Panel.setLayout(null);

        f1m5.setEditable(false);
        f1m5.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f1m5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m5.setText("0人");
        f1m5.setBorder(null);
        f1m5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m5.setName("f1m3"); // NOI18N
        f1m5.setOpaque(false);
        f1m5Panel.add(f1m5);
        f1m5.setBounds(10, 30, 120, 30);

        f1m5Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f1m5Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m5Label.setText("[ 新規含む一般客 ]");
        f1m5Label.setBorder(null);
        f1m5Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m5Label.setEnabled(false);
        f1m5Label.setName("f1m3"); // NOI18N
        f1m5Label.setOpaque(false);
        f1m5Panel.add(f1m5Label);
        f1m5Label.setBounds(10, 10, 120, 20);

        f1m5Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f1m5Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f1m5Ratio.setText("0%");
        f1m5Ratio.setBorder(null);
        f1m5Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f1m5Ratio.setEnabled(false);
        f1m5Ratio.setName("f1m3"); // NOI18N
        f1m5Ratio.setOpaque(false);
        f1m5Panel.add(f1m5Ratio);
        f1m5Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f1m5Panel);
        f1m5Panel.setBounds(80, 375, 140, 80);

        f2m4Panel.setBackground(new java.awt.Color(153, 153, 153));
        f2m4Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f2m4Panel.setName("f2m3"); // NOI18N
        f2m4Panel.setLayout(null);

        f2m4.setEditable(false);
        f2m4.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f2m4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m4.setText("0人");
        f2m4.setBorder(null);
        f2m4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m4.setName("f2m3"); // NOI18N
        f2m4.setOpaque(false);
        f2m4Panel.add(f2m4);
        f2m4.setBounds(10, 30, 120, 30);

        f2m4Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f2m4Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m4Label.setText("←[シルバー客]↑");
        f2m4Label.setBorder(null);
        f2m4Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m4Label.setEnabled(false);
        f2m4Label.setName("f2m3"); // NOI18N
        f2m4Label.setOpaque(false);
        f2m4Panel.add(f2m4Label);
        f2m4Label.setBounds(10, 10, 120, 20);

        f2m4Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f2m4Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m4Ratio.setText("0%");
        f2m4Ratio.setBorder(null);
        f2m4Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m4Ratio.setEnabled(false);
        f2m4Ratio.setName("f2m3"); // NOI18N
        f2m4Ratio.setOpaque(false);
        f2m4Panel.add(f2m4Ratio);
        f2m4Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f2m4Panel);
        f2m4Panel.setBounds(220, 295, 140, 80);

        f2m5Panel.setBackground(new java.awt.Color(153, 153, 153));
        f2m5Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f2m5Panel.setName("f2m3"); // NOI18N
        f2m5Panel.setLayout(null);

        f2m5.setEditable(false);
        f2m5.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f2m5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m5.setText("0人");
        f2m5.setBorder(null);
        f2m5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m5.setName("f2m3"); // NOI18N
        f2m5.setOpaque(false);
        f2m5Panel.add(f2m5);
        f2m5.setBounds(10, 30, 120, 30);

        f2m5Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f2m5Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m5Label.setText("←[シルバー客]↑");
        f2m5Label.setBorder(null);
        f2m5Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m5Label.setEnabled(false);
        f2m5Label.setName("f2m3"); // NOI18N
        f2m5Label.setOpaque(false);
        f2m5Panel.add(f2m5Label);
        f2m5Label.setBounds(10, 10, 120, 20);

        f2m5Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f2m5Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f2m5Ratio.setText("0%");
        f2m5Ratio.setBorder(null);
        f2m5Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f2m5Ratio.setEnabled(false);
        f2m5Ratio.setName("f2m3"); // NOI18N
        f2m5Ratio.setOpaque(false);
        f2m5Panel.add(f2m5Ratio);
        f2m5Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f2m5Panel);
        f2m5Panel.setBounds(80, 295, 140, 80);

        f3m4Panel.setBackground(new java.awt.Color(255, 204, 51));
        f3m4Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f3m4Panel.setName("f3m3"); // NOI18N
        f3m4Panel.setLayout(null);

        f3m4.setEditable(false);
        f3m4.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f3m4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m4.setText("0人");
        f3m4.setBorder(null);
        f3m4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m4.setName("f3m3"); // NOI18N
        f3m4.setOpaque(false);
        f3m4Panel.add(f3m4);
        f3m4.setBounds(10, 30, 120, 30);

        f3m4Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f3m4Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m4Label.setText("←[ゴールド客]");
        f3m4Label.setBorder(null);
        f3m4Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m4Label.setEnabled(false);
        f3m4Label.setName("f3m3"); // NOI18N
        f3m4Label.setOpaque(false);
        f3m4Panel.add(f3m4Label);
        f3m4Label.setBounds(10, 10, 120, 20);

        f3m4Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f3m4Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m4Ratio.setText("0%");
        f3m4Ratio.setBorder(null);
        f3m4Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m4Ratio.setEnabled(false);
        f3m4Ratio.setName("f3m3"); // NOI18N
        f3m4Ratio.setOpaque(false);
        f3m4Panel.add(f3m4Ratio);
        f3m4Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f3m4Panel);
        f3m4Panel.setBounds(220, 215, 140, 80);

        f3m5Panel.setBackground(new java.awt.Color(255, 204, 51));
        f3m5Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f3m5Panel.setName("f3m3"); // NOI18N
        f3m5Panel.setLayout(null);

        f3m5.setEditable(false);
        f3m5.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f3m5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m5.setText("0人");
        f3m5.setBorder(null);
        f3m5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m5.setName("f3m3"); // NOI18N
        f3m5.setOpaque(false);
        f3m5Panel.add(f3m5);
        f3m5.setBounds(10, 30, 120, 30);

        f3m5Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f3m5Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m5Label.setText("←[ゴールド客]");
        f3m5Label.setBorder(null);
        f3m5Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m5Label.setEnabled(false);
        f3m5Label.setName("f3m3"); // NOI18N
        f3m5Label.setOpaque(false);
        f3m5Panel.add(f3m5Label);
        f3m5Label.setBounds(10, 10, 120, 20);

        f3m5Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f3m5Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f3m5Ratio.setText("0%");
        f3m5Ratio.setBorder(null);
        f3m5Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f3m5Ratio.setEnabled(false);
        f3m5Ratio.setName("f3m3"); // NOI18N
        f3m5Ratio.setOpaque(false);
        f3m5Panel.add(f3m5Ratio);
        f3m5Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f3m5Panel);
        f3m5Panel.setBounds(80, 215, 140, 80);

        f4m2Panel.setBackground(new java.awt.Color(153, 153, 153));
        f4m2Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f4m2Panel.setName("f3m2"); // NOI18N
        f4m2Panel.setLayout(null);

        f4m2.setEditable(false);
        f4m2.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f4m2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m2.setText("0人");
        f4m2.setBorder(null);
        f4m2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m2.setName("f3m2"); // NOI18N
        f4m2.setOpaque(false);
        f4m2Panel.add(f4m2);
        f4m2.setBounds(10, 30, 120, 30);

        f4m2Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f4m2Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m2Label.setText("←[シルバー客]↑");
        f4m2Label.setBorder(null);
        f4m2Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m2Label.setEnabled(false);
        f4m2Label.setName("f3m2"); // NOI18N
        f4m2Label.setOpaque(false);
        f4m2Panel.add(f4m2Label);
        f4m2Label.setBounds(10, 10, 120, 20);

        f4m2Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f4m2Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m2Ratio.setText("0%");
        f4m2Ratio.setBorder(null);
        f4m2Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m2Ratio.setEnabled(false);
        f4m2Ratio.setName("f3m2"); // NOI18N
        f4m2Ratio.setOpaque(false);
        f4m2Panel.add(f4m2Ratio);
        f4m2Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f4m2Panel);
        f4m2Panel.setBounds(500, 135, 140, 80);

        f4m1Panel.setBackground(new java.awt.Color(204, 255, 255));
        f4m1Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f4m1Panel.setName("f3m1"); // NOI18N
        f4m1Panel.setLayout(null);

        f4m1.setEditable(false);
        f4m1.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f4m1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m1.setText("0人");
        f4m1.setBorder(null);
        f4m1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m1.setName("f3m1"); // NOI18N
        f4m1.setOpaque(false);
        f4m1Panel.add(f4m1);
        f4m1.setBounds(10, 30, 120, 30);

        f4m1Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f4m1Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m1Label.setText("[ 一般客 ]");
        f4m1Label.setBorder(null);
        f4m1Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m1Label.setEnabled(false);
        f4m1Label.setName("f3m1"); // NOI18N
        f4m1Label.setOpaque(false);
        f4m1Panel.add(f4m1Label);
        f4m1Label.setBounds(10, 10, 120, 20);

        f4m1Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f4m1Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m1Ratio.setText("0%");
        f4m1Ratio.setBorder(null);
        f4m1Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m1Ratio.setEnabled(false);
        f4m1Ratio.setName("f3m1"); // NOI18N
        f4m1Ratio.setOpaque(false);
        f4m1Panel.add(f4m1Ratio);
        f4m1Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f4m1Panel);
        f4m1Panel.setBounds(640, 135, 140, 80);

        f4m3Panel.setBackground(new java.awt.Color(255, 204, 51));
        f4m3Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f4m3Panel.setName("f3m3"); // NOI18N
        f4m3Panel.setLayout(null);

        f4m3.setEditable(false);
        f4m3.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f4m3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m3.setText("0人");
        f4m3.setBorder(null);
        f4m3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m3.setName("f3m3"); // NOI18N
        f4m3.setOpaque(false);
        f4m3Panel.add(f4m3);
        f4m3.setBounds(10, 30, 120, 30);

        f4m3Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f4m3Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m3Label.setText("←[ゴールド客]");
        f4m3Label.setBorder(null);
        f4m3Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m3Label.setEnabled(false);
        f4m3Label.setName("f3m3"); // NOI18N
        f4m3Label.setOpaque(false);
        f4m3Panel.add(f4m3Label);
        f4m3Label.setBounds(10, 10, 120, 20);

        f4m3Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f4m3Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m3Ratio.setText("0%");
        f4m3Ratio.setBorder(null);
        f4m3Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m3Ratio.setEnabled(false);
        f4m3Ratio.setName("f3m3"); // NOI18N
        f4m3Ratio.setOpaque(false);
        f4m3Panel.add(f4m3Ratio);
        f4m3Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f4m3Panel);
        f4m3Panel.setBounds(360, 135, 140, 80);

        f4m4Panel.setBackground(new java.awt.Color(255, 204, 51));
        f4m4Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f4m4Panel.setName("f3m3"); // NOI18N
        f4m4Panel.setLayout(null);

        f4m4.setEditable(false);
        f4m4.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f4m4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m4.setText("0人");
        f4m4.setBorder(null);
        f4m4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m4.setName("f3m3"); // NOI18N
        f4m4.setOpaque(false);
        f4m4Panel.add(f4m4);
        f4m4.setBounds(10, 30, 120, 30);

        f4m4Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f4m4Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m4Label.setText("←[ゴールド客]");
        f4m4Label.setBorder(null);
        f4m4Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m4Label.setEnabled(false);
        f4m4Label.setName("f3m3"); // NOI18N
        f4m4Label.setOpaque(false);
        f4m4Panel.add(f4m4Label);
        f4m4Label.setBounds(10, 10, 120, 20);

        f4m4Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f4m4Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m4Ratio.setText("0%");
        f4m4Ratio.setBorder(null);
        f4m4Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m4Ratio.setEnabled(false);
        f4m4Ratio.setName("f3m3"); // NOI18N
        f4m4Ratio.setOpaque(false);
        f4m4Panel.add(f4m4Ratio);
        f4m4Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f4m4Panel);
        f4m4Panel.setBounds(220, 135, 140, 80);

        f4m5Panel.setBackground(new java.awt.Color(255, 102, 0));
        f4m5Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f4m5Panel.setName("f3m3"); // NOI18N
        f4m5Panel.setLayout(null);

        f4m5.setEditable(false);
        f4m5.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f4m5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m5.setText("0人");
        f4m5.setBorder(null);
        f4m5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m5.setName("f3m3"); // NOI18N
        f4m5.setOpaque(false);
        f4m5Panel.add(f4m5);
        f4m5.setBounds(10, 30, 120, 30);

        f4m5Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f4m5Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m5Label.setText("[ ＶＩＰ客 ]");
        f4m5Label.setBorder(null);
        f4m5Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m5Label.setEnabled(false);
        f4m5Label.setName("f3m3"); // NOI18N
        f4m5Label.setOpaque(false);
        f4m5Panel.add(f4m5Label);
        f4m5Label.setBounds(10, 10, 120, 20);

        f4m5Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f4m5Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f4m5Ratio.setText("0%");
        f4m5Ratio.setBorder(null);
        f4m5Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f4m5Ratio.setEnabled(false);
        f4m5Ratio.setName("f3m3"); // NOI18N
        f4m5Ratio.setOpaque(false);
        f4m5Panel.add(f4m5Ratio);
        f4m5Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f4m5Panel);
        f4m5Panel.setBounds(80, 135, 140, 80);

        f5m2Panel.setBackground(new java.awt.Color(153, 153, 153));
        f5m2Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f5m2Panel.setName("f3m2"); // NOI18N
        f5m2Panel.setLayout(null);

        f5m2.setEditable(false);
        f5m2.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f5m2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m2.setText("0人");
        f5m2.setBorder(null);
        f5m2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m2.setName("f3m2"); // NOI18N
        f5m2.setOpaque(false);
        f5m2Panel.add(f5m2);
        f5m2.setBounds(10, 30, 120, 30);

        f5m2Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f5m2Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m2Label.setText("←[シルバー客]");
        f5m2Label.setBorder(null);
        f5m2Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m2Label.setEnabled(false);
        f5m2Label.setName("f3m2"); // NOI18N
        f5m2Label.setOpaque(false);
        f5m2Panel.add(f5m2Label);
        f5m2Label.setBounds(10, 10, 120, 20);

        f5m2Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f5m2Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m2Ratio.setText("0%");
        f5m2Ratio.setBorder(null);
        f5m2Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m2Ratio.setEnabled(false);
        f5m2Ratio.setName("f3m2"); // NOI18N
        f5m2Ratio.setOpaque(false);
        f5m2Panel.add(f5m2Ratio);
        f5m2Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f5m2Panel);
        f5m2Panel.setBounds(500, 55, 140, 80);

        f5m1Panel.setBackground(new java.awt.Color(204, 255, 255));
        f5m1Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f5m1Panel.setName("f3m1"); // NOI18N
        f5m1Panel.setLayout(null);

        f5m1.setEditable(false);
        f5m1.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f5m1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m1.setText("0人");
        f5m1.setBorder(null);
        f5m1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m1.setName("f3m1"); // NOI18N
        f5m1.setOpaque(false);
        f5m1Panel.add(f5m1);
        f5m1.setBounds(10, 30, 120, 30);

        f5m1Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f5m1Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m1Label.setText("[ 一般客 ]");
        f5m1Label.setBorder(null);
        f5m1Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m1Label.setEnabled(false);
        f5m1Label.setName("f3m1"); // NOI18N
        f5m1Label.setOpaque(false);
        f5m1Panel.add(f5m1Label);
        f5m1Label.setBounds(10, 10, 120, 20);

        f5m1Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f5m1Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m1Ratio.setText("0%");
        f5m1Ratio.setBorder(null);
        f5m1Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m1Ratio.setEnabled(false);
        f5m1Ratio.setName("f3m1"); // NOI18N
        f5m1Ratio.setOpaque(false);
        f5m1Panel.add(f5m1Ratio);
        f5m1Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f5m1Panel);
        f5m1Panel.setBounds(640, 55, 140, 80);

        f5m3Panel.setBackground(new java.awt.Color(255, 204, 51));
        f5m3Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f5m3Panel.setName("f3m3"); // NOI18N
        f5m3Panel.setLayout(null);

        f5m3.setEditable(false);
        f5m3.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f5m3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m3.setText("0人");
        f5m3.setBorder(null);
        f5m3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m3.setName("f3m3"); // NOI18N
        f5m3.setOpaque(false);
        f5m3Panel.add(f5m3);
        f5m3.setBounds(10, 30, 120, 30);

        f5m3Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f5m3Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m3Label.setText("←[ゴールド客]");
        f5m3Label.setBorder(null);
        f5m3Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m3Label.setEnabled(false);
        f5m3Label.setName("f3m3"); // NOI18N
        f5m3Label.setOpaque(false);
        f5m3Panel.add(f5m3Label);
        f5m3Label.setBounds(10, 10, 120, 20);

        f5m3Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f5m3Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m3Ratio.setText("0%");
        f5m3Ratio.setBorder(null);
        f5m3Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m3Ratio.setEnabled(false);
        f5m3Ratio.setName("f3m3"); // NOI18N
        f5m3Ratio.setOpaque(false);
        f5m3Panel.add(f5m3Ratio);
        f5m3Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f5m3Panel);
        f5m3Panel.setBounds(360, 55, 140, 80);

        f5m4Panel.setBackground(new java.awt.Color(255, 102, 0));
        f5m4Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f5m4Panel.setName("f3m3"); // NOI18N
        f5m4Panel.setLayout(null);

        f5m4.setEditable(false);
        f5m4.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f5m4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m4.setText("0人");
        f5m4.setBorder(null);
        f5m4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m4.setName("f3m3"); // NOI18N
        f5m4.setOpaque(false);
        f5m4Panel.add(f5m4);
        f5m4.setBounds(10, 30, 120, 30);

        f5m4Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f5m4Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m4Label.setText("[ ＶＩＰ客 ]");
        f5m4Label.setBorder(null);
        f5m4Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m4Label.setEnabled(false);
        f5m4Label.setName("f3m3"); // NOI18N
        f5m4Label.setOpaque(false);
        f5m4Panel.add(f5m4Label);
        f5m4Label.setBounds(10, 10, 120, 20);

        f5m4Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f5m4Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m4Ratio.setText("0%");
        f5m4Ratio.setBorder(null);
        f5m4Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m4Ratio.setEnabled(false);
        f5m4Ratio.setName("f3m3"); // NOI18N
        f5m4Ratio.setOpaque(false);
        f5m4Panel.add(f5m4Ratio);
        f5m4Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f5m4Panel);
        f5m4Panel.setBounds(220, 55, 140, 80);

        f5m5Panel.setBackground(new java.awt.Color(255, 102, 0));
        f5m5Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        f5m5Panel.setName("f3m3"); // NOI18N
        f5m5Panel.setLayout(null);

        f5m5.setEditable(false);
        f5m5.setFont(new java.awt.Font("MS UI Gothic", 1, 28));
        f5m5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m5.setText("0人");
        f5m5.setBorder(null);
        f5m5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m5.setName("f3m3"); // NOI18N
        f5m5.setOpaque(false);
        f5m5Panel.add(f5m5);
        f5m5.setBounds(10, 30, 120, 30);

        f5m5Label.setFont(new java.awt.Font("MS UI Gothic", 1, 13));
        f5m5Label.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m5Label.setText("[ ＶＩＰ客 ]");
        f5m5Label.setBorder(null);
        f5m5Label.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m5Label.setEnabled(false);
        f5m5Label.setName("f3m3"); // NOI18N
        f5m5Label.setOpaque(false);
        f5m5Panel.add(f5m5Label);
        f5m5Label.setBounds(10, 10, 120, 20);

        f5m5Ratio.setFont(new java.awt.Font("MS UI Gothic", 1, 14));
        f5m5Ratio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        f5m5Ratio.setText("0%");
        f5m5Ratio.setBorder(null);
        f5m5Ratio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        f5m5Ratio.setEnabled(false);
        f5m5Ratio.setName("f3m3"); // NOI18N
        f5m5Ratio.setOpaque(false);
        f5m5Panel.add(f5m5Ratio);
        f5m5Ratio.setBounds(10, 60, 120, 20);

        jPanel1.add(f5m5Panel);
        f5m5Panel.setBounds(80, 55, 140, 80);

        lblTax29.setBackground(new java.awt.Color(49, 65, 77));
        lblTax29.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax29.setForeground(new java.awt.Color(255, 255, 255));
        lblTax29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTax29.setText("３");
        lblTax29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTax29.setFocusCycleRoot(true);
        lblTax29.setOpaque(true);
        jPanel1.add(lblTax29);
        lblTax29.setBounds(360, 30, 140, 25);

        lblTax30.setBackground(new java.awt.Color(49, 65, 77));
        lblTax30.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax30.setForeground(new java.awt.Color(255, 255, 255));
        lblTax30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTax30.setText("４");
        lblTax30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTax30.setFocusCycleRoot(true);
        lblTax30.setOpaque(true);
        jPanel1.add(lblTax30);
        lblTax30.setBounds(220, 30, 140, 25);

        lblTax31.setBackground(new java.awt.Color(49, 65, 77));
        lblTax31.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax31.setForeground(new java.awt.Color(255, 255, 255));
        lblTax31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTax31.setText("３");
        lblTax31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTax31.setFocusCycleRoot(true);
        lblTax31.setOpaque(true);
        jPanel1.add(lblTax31);
        lblTax31.setBounds(45, 215, 35, 80);

        lblTax32.setBackground(new java.awt.Color(49, 65, 77));
        lblTax32.setFont(new java.awt.Font("MS UI Gothic", 1, 12));
        lblTax32.setForeground(new java.awt.Color(255, 255, 255));
        lblTax32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTax32.setText("４");
        lblTax32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTax32.setFocusCycleRoot(true);
        lblTax32.setOpaque(true);
        jPanel1.add(lblTax32);
        lblTax32.setBounds(45, 135, 35, 80);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlMain, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 817, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(pnlMain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 211, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setPeriodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setPeriodButtonActionPerformed

        ValidCustomerUpdatePeriodPanel p = new ValidCustomerUpdatePeriodPanel();
        SwingUtil.openAnchorDialog(null, true, p, "有効顧客　期間設定", SwingUtil.ANCHOR_HCENTER|SwingUtil.ANCHOR_VCENTER);
        p = null;
        System.gc();
        
        this.setChkValidLabel();        

    }//GEN-LAST:event_setPeriodButtonActionPerformed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        /*
        hint.setText("");
         *
         */

    }//GEN-LAST:event_formMouseMoved

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        CustomerRanking5List crl = new CustomerRanking5List();
        if (inputCheck(crl)) {
            searchButton.setCursor(null);            
            this.search(crl);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void chargeStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargeStaffActionPerformed

	MstStaff ms= (MstStaff)chargeStaff.getSelectedItem();
        
        if (ms != null) {
            if (ms.getStaffID() != null) {
		chargeStaffNo.setText(ms.getStaffNo());
	    }

	    if (chargeStaff.getSelectedIndex() == 0) {
                chargeStaffNo.setText("");
            }
        }
    }//GEN-LAST:event_chargeStaffActionPerformed

    private void chargeStaffNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_chargeStaffNoFocusLost

	if (!chargeStaffNo.getText().equals("")) {
            this.setChargeStaff(chargeStaffNo.getText());
        }else{
            chargeStaff.setSelectedIndex(0);
        }
    }//GEN-LAST:event_chargeStaffNoFocusLost

    private boolean checkDuplicateCustomer(ArrayList<MstCustomer> selectedArray, MstCustomer customer){
        for(MstCustomer mc : selectedArray){
            if(mc.getCustomerID().intValue() == customer.getCustomerID().intValue()){
                return true;
            }
        }
        return false;
    }
    
    private Date getStartDate(Date date){
        
        if(date == null) return null;
        
        GregorianCalendar cal = new GregorianCalendar();
        cal.setTime(date);
        cal.set(Calendar.HOUR_OF_DAY, 0);
        cal.set(Calendar.MINUTE, 0);
        cal.set(Calendar.SECOND, 0);
        
        return cal.getTime();
    }
    
    private Date getEndDate(Date date){
        if(date == null) return null;
        
        GregorianCalendar cal = new GregorianCalendar();
        cal.setTime(date);
        cal.set(Calendar.HOUR_OF_DAY, 23);
        cal.set(Calendar.MINUTE, 59);
        cal.set(Calendar.SECOND, 59);
        
        return cal.getTime();
    }
    
    private void search(CustomerRanking5List crl){

        String shopIDList = "";

        //グループ
        if(shop1.getSelectedItem() instanceof MstGroup)
        {
                MstGroup mg = (MstGroup)shop1.getSelectedItem();
                shopIDList = mg.getShopIDListAll();
        }
        //店舗
        else if(shop1.getSelectedItem() instanceof MstShop)
        {
                MstShop ms = (MstShop)shop1.getSelectedItem();
                shopIDList = ms.getShopID().toString();
        }

        /*
	CustomerRankingList crl = new CustomerRankingList();
         *
         */
        
        //店舗IDリスト
        crl.setShopIDList(shopIDList);
        //担当者ID
        if (chargeStaff.getSelectedIndex() > 0) {
            crl.setStaffID(((MstStaff)chargeStaff.getSelectedItem()).getStaffID());
        }
        //対象期間
        crl.setTermFrom(cmbTargetPeriodStartDate.getDate());
        crl.setTermTo(cmbTargetPeriodEndDate.getDate());
        //過去累積集計
        crl.setPastTotal(isPastTotal.isSelected());
        //税区分
        crl.setTaxType(getSelectedTaxType());
        //評価対象
        if( ! chkCondition2.isSelected() || rdoSalesAll.isSelected()){
            crl.setProductDivision(0);
        }else if(rdoSalesTech.isSelected()){
            crl.setProductDivision(1);
        }else if(rdoSalesItem.isSelected()){
            crl.setProductDivision(2);
        }

        //来店回数設定
        crl.setRankF5(crl.getRankF5());
        crl.setRankF4(crl.getRankF4());
        crl.setRankF3(crl.getRankF3());
        crl.setRankF2(crl.getRankF2());
        crl.setRankF1(crl.getRankF1());
        //売上金額設定
        crl.setRankM5(crl.getRankM5());
        crl.setRankM4(crl.getRankM4());
        crl.setRankM3(crl.getRankM3());
        crl.setRankM2(crl.getRankM2());
        crl.setRankM1(crl.getRankM1());
        //客単価
        crl.setRankA5(crl.getRankA5());
        crl.setRankA4(crl.getRankA4());
        crl.setRankA3(crl.getRankA3());
        crl.setRankA2(crl.getRankA2());
        crl.setRankA1(crl.getRankA1());
        //紹介客数
        crl.setRankI5(crl.getRankI5());
        crl.setRankI4(crl.getRankI4());
        crl.setRankI3(crl.getRankI3());
        crl.setRankI2(crl.getRankI2());
        crl.setRankI1(crl.getRankI1());
        //有効顧客
        crl.setChkValid1(this.chkValid1.isSelected());
        crl.setChkValid2(this.chkValid2.isSelected());
        crl.setChkValid3(this.chkValid3.isSelected());
        //集計条件
        crl.setChkCondition1(this.chkCondition1.isSelected());
        crl.setChkCondition2(this.chkCondition2.isSelected());
        crl.setChkCondition3(this.chkCondition3.isSelected());
        crl.setChkCondition4(this.chkCondition4.isSelected());

        if( this.chkCondition1.isSelected() ){
            yLabel.setText("<html>来<br>店<br>回<br>数</html>");
            if( this.chkCondition2.isSelected() ){
                xLabel.setText("売上金額");
            }else if( this.chkCondition3.isSelected() ){
                xLabel.setText("紹介客数");
            }else if( this.chkCondition4.isSelected() ){
                xLabel.setText("客単価");
            }
        }else if( this.chkCondition2.isSelected() ){
            yLabel.setText("<html>売<br>上<br>金<br>額</html>");
            if( this.chkCondition3.isSelected() ){
                xLabel.setText("紹介客数");
            }else if( this.chkCondition4.isSelected() ){
                xLabel.setText("客単価");
            }
        }else if( this.chkCondition3.isSelected() ){
            yLabel.setText("<html>紹<br>介<br>客<br>数</html>");
            if( this.chkCondition4.isSelected() ){
                xLabel.setText("客単価");
            }
        }

        f5m5Label.setText("[" + crl.getRankF5M5Name() + "]");
        f5m4Label.setText("←[" + crl.getRankF5M4Name() + "]");
        f5m3Label.setText("←[" + crl.getRankF5M3Name() + "]");
        f5m2Label.setText("←[" + crl.getRankF5M2Name() + "]");
        f5m1Label.setText("[" + crl.getRankF5M1Name() + "]");
        f4m5Label.setText("↑[" + crl.getRankF4M5Name() + "]");
        f4m4Label.setText("↑[" + crl.getRankF4M4Name() + "]←");
        f4m3Label.setText("↑[" + crl.getRankF4M3Name() + "]←");
        f4m2Label.setText("↑[" + crl.getRankF4M2Name() + "]←");
        f4m1Label.setText("[" + crl.getRankF4M1Name() + "]");
        f3m5Label.setText("↑[" + crl.getRankF3M5Name() + "]");
        f3m4Label.setText("↑[" + crl.getRankF3M4Name() + "]←");
        f3m3Label.setText("↑[" + crl.getRankF3M3Name() + "]←");
        f3m2Label.setText("↑[" + crl.getRankF3M2Name() + "]←");
        f3m1Label.setText("[" + crl.getRankF3M1Name() + "]");
        f2m5Label.setText("↑[" + crl.getRankF2M5Name() + "]");
        f2m4Label.setText("↑[" + crl.getRankF2M4Name() + "]←");
        f2m3Label.setText("↑[" + crl.getRankF2M3Name() + "]←");
        f2m2Label.setText("↑[" + crl.getRankF2M2Name() + "]←");
        f2m1Label.setText("[" + crl.getRankF2M1Name() + "]");
        f1m5Label.setText("[" + crl.getRankF1M5Name() + "]");
        f1m4Label.setText("[" + crl.getRankF1M4Name() + "]");
        f1m3Label.setText("[" + crl.getRankF1M3Name() + "]");
        f1m2Label.setText("[" + crl.getRankF1M2Name() + "]");
        f1m1Label.setText("[" + crl.getRankF1M1Name() + "]");


        try {

            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            
            crl.load_CrossAnalysis();

            f5m5.setText(crl.get(0).getTargetCount() + "人");
            f5m4.setText(crl.get(1).getTargetCount() + "人");
            f5m3.setText(crl.get(2).getTargetCount() + "人");
            f5m2.setText(crl.get(3).getTargetCount() + "人");
            f5m1.setText(crl.get(4).getTargetCount() + "人");

            f4m5.setText(crl.get(5).getTargetCount() + "人");
            f4m4.setText(crl.get(6).getTargetCount() + "人");
            f4m3.setText(crl.get(7).getTargetCount() + "人");
            f4m2.setText(crl.get(8).getTargetCount() + "人");
            f4m1.setText(crl.get(9).getTargetCount() + "人");

            f3m5.setText(crl.get(10).getTargetCount() + "人");
            f3m4.setText(crl.get(11).getTargetCount() + "人");
            f3m3.setText(crl.get(12).getTargetCount() + "人");
            f3m2.setText(crl.get(13).getTargetCount() + "人");
            f3m1.setText(crl.get(14).getTargetCount() + "人");

            f2m5.setText(crl.get(15).getTargetCount() + "人");
            f2m4.setText(crl.get(16).getTargetCount() + "人");
            f2m3.setText(crl.get(17).getTargetCount() + "人");
            f2m2.setText(crl.get(18).getTargetCount() + "人");
            f2m1.setText(crl.get(19).getTargetCount() + "人");

            f1m5.setText(crl.get(20).getTargetCount() + "人");
            f1m4.setText(crl.get(21).getTargetCount() + "人");
            f1m3.setText(crl.get(22).getTargetCount() + "人");
            f1m2.setText(crl.get(23).getTargetCount() + "人");
            f1m1.setText(crl.get(24).getTargetCount() + "人");

            long totalCount = 0;
            for (int i = 0; i < 25; i++) {
                totalCount += crl.get(i).getTargetCount();
            }

            if (totalCount > 0) {

                BigDecimal bd = null;
                bd = new BigDecimal(crl.get(0).getTargetCount().doubleValue() / totalCount * 100);
                f5m5Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(1).getTargetCount().doubleValue() / totalCount * 100);
                f5m4Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(2).getTargetCount().doubleValue() / totalCount * 100);
                f5m3Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(3).getTargetCount().doubleValue() / totalCount * 100);
                f5m2Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(4).getTargetCount().doubleValue() / totalCount * 100);
                f5m1Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");

                bd = new BigDecimal(crl.get(5).getTargetCount().doubleValue() / totalCount * 100);
                f4m5Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(6).getTargetCount().doubleValue() / totalCount * 100);
                f4m4Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(7).getTargetCount().doubleValue() / totalCount * 100);
                f4m3Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(8).getTargetCount().doubleValue() / totalCount * 100);
                f4m2Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(9).getTargetCount().doubleValue() / totalCount * 100);
                f4m1Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");

                bd = new BigDecimal(crl.get(10).getTargetCount().doubleValue() / totalCount * 100);
                f3m5Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(11).getTargetCount().doubleValue() / totalCount * 100);
                f3m4Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(12).getTargetCount().doubleValue() / totalCount * 100);
                f3m3Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(13).getTargetCount().doubleValue() / totalCount * 100);
                f3m2Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(14).getTargetCount().doubleValue() / totalCount * 100);
                f3m1Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");

                bd = new BigDecimal(crl.get(15).getTargetCount().doubleValue() / totalCount * 100);
                f2m5Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(16).getTargetCount().doubleValue() / totalCount * 100);
                f2m4Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(17).getTargetCount().doubleValue() / totalCount * 100);
                f2m3Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(18).getTargetCount().doubleValue() / totalCount * 100);
                f2m2Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(19).getTargetCount().doubleValue() / totalCount * 100);
                f2m1Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");

                bd = new BigDecimal(crl.get(20).getTargetCount().doubleValue() / totalCount * 100);
                f1m5Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(21).getTargetCount().doubleValue() / totalCount * 100);
                f1m4Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(22).getTargetCount().doubleValue() / totalCount * 100);
                f1m3Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(23).getTargetCount().doubleValue() / totalCount * 100);
                f1m2Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");
                bd = new BigDecimal(crl.get(24).getTargetCount().doubleValue() / totalCount * 100);
                f1m1Ratio.setText(bd.setScale(1, BigDecimal.ROUND_HALF_UP).doubleValue() + "%");


            } else {

                f5m5Ratio.setText("0%");
                f5m4Ratio.setText("0%");
                f5m3Ratio.setText("0%");
                f5m2Ratio.setText("0%");
                f5m1Ratio.setText("0%");

                f4m5Ratio.setText("0%");
                f4m4Ratio.setText("0%");
                f4m3Ratio.setText("0%");
                f4m2Ratio.setText("0%");
                f4m1Ratio.setText("0%");

                f3m5Ratio.setText("0%");
                f3m4Ratio.setText("0%");
                f3m3Ratio.setText("0%");
                f3m2Ratio.setText("0%");
                f3m1Ratio.setText("0%");
                f2m5Ratio.setText("0%");
                f2m4Ratio.setText("0%");
                f2m3Ratio.setText("0%");
                f2m2Ratio.setText("0%");
                f2m1Ratio.setText("0%");
                f1m5Ratio.setText("0%");
                f1m4Ratio.setText("0%");
                f1m3Ratio.setText("0%");
                f1m2Ratio.setText("0%");
                f1m1Ratio.setText("0%");
            }

            /*
            try {

                // 設定値の登録
                StringBuilder sql = new StringBuilder(1000);
                sql.append(" update mst_cross_analysis_setting");
                sql.append(" set");
                sql.append("      f3value = " + count3From.getText());
                sql.append("     ,f2value = " + count2From.getText());
                sql.append("     ,f1value = " + count1From.getText());
                sql.append("     ,m3value = " + price3From.getText());
                sql.append("     ,m2value = " + price2From.getText());
                sql.append("     ,m1value = " + price1From.getText());
                sql.append(" where");
                sql.append("     shop_id = " + SystemInfo.getCurrentShop().getShopID());

                SystemInfo.getConnection().executeUpdate(sql.toString());
                
            } catch (Exception e) {
            }
             *
             */
            
        } finally {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
        
    }
    
    /**
     * 主担当者をセットする。
     */
    private void setChargeStaff(String staffNo)
    {     
	chargeStaff.setSelectedIndex(0);

	for (int i = 1; i < chargeStaff.getItemCount(); i++) {
	    if (((MstStaff)chargeStaff.getItemAt(i)).getStaffNo().equals(staffNo)) {
		chargeStaff.setSelectedIndex(i);
		break;
	    }
	}
    }
    
    private void shop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shop1ActionPerformed

    }//GEN-LAST:event_shop1ActionPerformed

	private void cmbTargetPeriodEndDateFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_cmbTargetPeriodEndDateFocusGained
	{//GEN-HEADEREND:event_cmbTargetPeriodEndDateFocusGained
            cmbTargetPeriodEndDate.getInputContext().setCharacterSubsets(null);
	}//GEN-LAST:event_cmbTargetPeriodEndDateFocusGained

	private void cmbTargetPeriodStartDateFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_cmbTargetPeriodStartDateFocusGained
	{//GEN-HEADEREND:event_cmbTargetPeriodStartDateFocusGained
            cmbTargetPeriodStartDate.getInputContext().setCharacterSubsets(null);
	}//GEN-LAST:event_cmbTargetPeriodStartDateFocusGained

        private void chkCondition2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCondition2ActionPerformed
            // TODO add your handling code here:
        }//GEN-LAST:event_chkCondition2ActionPerformed

        private void setNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setNameButtonActionPerformed
            RankNameSetPanel p = new RankNameSetPanel();
            SwingUtil.openAnchorDialog(null, true, p, "分析結果名称設定", SwingUtil.ANCHOR_HCENTER|SwingUtil.ANCHOR_VCENTER);
            p = null;
            System.gc();

            this.setChkValidLabel();
        }//GEN-LAST:event_setNameButtonActionPerformed

        private void setConditionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setConditionButtonActionPerformed
            ConditionSetPanel p = new ConditionSetPanel();
            SwingUtil.openAnchorDialog(null, true, p, "集計条件設定", SwingUtil.ANCHOR_HCENTER|SwingUtil.ANCHOR_VCENTER);
            p = null;
            System.gc();

            this.setChkValidLabel();
        }//GEN-LAST:event_setConditionButtonActionPerformed

        private void rdoSalesItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoSalesItemActionPerformed
            // TODO add your handling code here:
        }//GEN-LAST:event_rdoSalesItemActionPerformed

        private void rdoSalesTechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoSalesTechActionPerformed
            // TODO add your handling code here:
        }//GEN-LAST:event_rdoSalesTechActionPerformed

        private void chkCondition2stateCanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkCondition2stateCanged
             //売上金額
            if( chkCondition2.isSelected() ){
                rdoSalesAll.setEnabled(true);
                rdoSalesTech.setEnabled(true);
                rdoSalesItem.setEnabled(true);
                lblSales.setEnabled(true);
            }else{
                rdoSalesAll.setSelected(true);
                rdoSalesAll.setEnabled(false);
                rdoSalesTech.setEnabled(false);
                rdoSalesItem.setEnabled(false);
                lblSales.setEnabled(false);
            }
        }//GEN-LAST:event_chkCondition2stateCanged
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox chargeStaff;
    private javax.swing.JLabel chargeStaffLabel;
    private javax.swing.JTextField chargeStaffNo;
    private javax.swing.JCheckBox chkCondition1;
    private javax.swing.JCheckBox chkCondition2;
    private javax.swing.JCheckBox chkCondition3;
    private javax.swing.JCheckBox chkCondition4;
    private javax.swing.JCheckBox chkValid1;
    private javax.swing.JCheckBox chkValid2;
    private javax.swing.JCheckBox chkValid3;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodEndDate;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo cmbTargetPeriodStartDate;
    private javax.swing.JTextField f1m1;
    private javax.swing.JTextField f1m1Label;
    private javax.swing.JPanel f1m1Panel;
    private javax.swing.JTextField f1m1Ratio;
    private javax.swing.JTextField f1m2;
    private javax.swing.JTextField f1m2Label;
    private javax.swing.JPanel f1m2Panel;
    private javax.swing.JTextField f1m2Ratio;
    private javax.swing.JTextField f1m3;
    private javax.swing.JTextField f1m3Label;
    private javax.swing.JPanel f1m3Panel;
    private javax.swing.JTextField f1m3Ratio;
    private javax.swing.JTextField f1m4;
    private javax.swing.JTextField f1m4Label;
    private javax.swing.JPanel f1m4Panel;
    private javax.swing.JTextField f1m4Ratio;
    private javax.swing.JTextField f1m5;
    private javax.swing.JTextField f1m5Label;
    private javax.swing.JPanel f1m5Panel;
    private javax.swing.JTextField f1m5Ratio;
    private javax.swing.JTextField f2m1;
    private javax.swing.JTextField f2m1Label;
    private javax.swing.JPanel f2m1Panel;
    private javax.swing.JTextField f2m1Ratio;
    private javax.swing.JTextField f2m2;
    private javax.swing.JTextField f2m2Label;
    private javax.swing.JPanel f2m2Panel;
    private javax.swing.JTextField f2m2Ratio;
    private javax.swing.JTextField f2m3;
    private javax.swing.JTextField f2m3Label;
    private javax.swing.JPanel f2m3Panel;
    private javax.swing.JTextField f2m3Ratio;
    private javax.swing.JTextField f2m4;
    private javax.swing.JTextField f2m4Label;
    private javax.swing.JPanel f2m4Panel;
    private javax.swing.JTextField f2m4Ratio;
    private javax.swing.JTextField f2m5;
    private javax.swing.JTextField f2m5Label;
    private javax.swing.JPanel f2m5Panel;
    private javax.swing.JTextField f2m5Ratio;
    private javax.swing.JTextField f3m1;
    private javax.swing.JTextField f3m1Label;
    private javax.swing.JPanel f3m1Panel;
    private javax.swing.JTextField f3m1Ratio;
    private javax.swing.JTextField f3m2;
    private javax.swing.JTextField f3m2Label;
    private javax.swing.JPanel f3m2Panel;
    private javax.swing.JTextField f3m2Ratio;
    private javax.swing.JTextField f3m3;
    private javax.swing.JTextField f3m3Label;
    private javax.swing.JPanel f3m3Panel;
    private javax.swing.JTextField f3m3Ratio;
    private javax.swing.JTextField f3m4;
    private javax.swing.JTextField f3m4Label;
    private javax.swing.JPanel f3m4Panel;
    private javax.swing.JTextField f3m4Ratio;
    private javax.swing.JTextField f3m5;
    private javax.swing.JTextField f3m5Label;
    private javax.swing.JPanel f3m5Panel;
    private javax.swing.JTextField f3m5Ratio;
    private javax.swing.JTextField f4m1;
    private javax.swing.JTextField f4m1Label;
    private javax.swing.JPanel f4m1Panel;
    private javax.swing.JTextField f4m1Ratio;
    private javax.swing.JTextField f4m2;
    private javax.swing.JTextField f4m2Label;
    private javax.swing.JPanel f4m2Panel;
    private javax.swing.JTextField f4m2Ratio;
    private javax.swing.JTextField f4m3;
    private javax.swing.JTextField f4m3Label;
    private javax.swing.JPanel f4m3Panel;
    private javax.swing.JTextField f4m3Ratio;
    private javax.swing.JTextField f4m4;
    private javax.swing.JTextField f4m4Label;
    private javax.swing.JPanel f4m4Panel;
    private javax.swing.JTextField f4m4Ratio;
    private javax.swing.JTextField f4m5;
    private javax.swing.JTextField f4m5Label;
    private javax.swing.JPanel f4m5Panel;
    private javax.swing.JTextField f4m5Ratio;
    private javax.swing.JTextField f5m1;
    private javax.swing.JTextField f5m1Label;
    private javax.swing.JPanel f5m1Panel;
    private javax.swing.JTextField f5m1Ratio;
    private javax.swing.JTextField f5m2;
    private javax.swing.JTextField f5m2Label;
    private javax.swing.JPanel f5m2Panel;
    private javax.swing.JTextField f5m2Ratio;
    private javax.swing.JTextField f5m3;
    private javax.swing.JTextField f5m3Label;
    private javax.swing.JPanel f5m3Panel;
    private javax.swing.JTextField f5m3Ratio;
    private javax.swing.JTextField f5m4;
    private javax.swing.JTextField f5m4Label;
    private javax.swing.JPanel f5m4Panel;
    private javax.swing.JTextField f5m4Ratio;
    private javax.swing.JTextField f5m5;
    private javax.swing.JTextField f5m5Label;
    private javax.swing.JPanel f5m5Panel;
    private javax.swing.JTextField f5m5Ratio;
    private javax.swing.JCheckBox isPastTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JLabel lblSales;
    private javax.swing.JLabel lblTargetPeriod;
    private javax.swing.JLabel lblTargetPeriod2;
    private javax.swing.JLabel lblTax;
    private javax.swing.JLabel lblTax19;
    private javax.swing.JLabel lblTax20;
    private javax.swing.JLabel lblTax21;
    private javax.swing.JLabel lblTax22;
    private javax.swing.JLabel lblTax23;
    private javax.swing.JLabel lblTax24;
    private javax.swing.JLabel lblTax25;
    private javax.swing.JLabel lblTax27;
    private javax.swing.JLabel lblTax28;
    private javax.swing.JLabel lblTax29;
    private javax.swing.JLabel lblTax30;
    private javax.swing.JLabel lblTax31;
    private javax.swing.JLabel lblTax32;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JRadioButton rdoSalesAll;
    private javax.swing.JRadioButton rdoSalesItem;
    private javax.swing.JRadioButton rdoSalesTech;
    private javax.swing.JRadioButton rdoTaxBlank;
    private javax.swing.JRadioButton rdoTaxUnit;
    private javax.swing.ButtonGroup salesGroup;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton setConditionButton;
    private javax.swing.JButton setNameButton;
    private javax.swing.JButton setPeriodButton;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel shop1;
    private javax.swing.JLabel shopLabel;
    private javax.swing.ButtonGroup taxGroup;
    private javax.swing.JLabel xLabel;
    private javax.swing.JLabel yLabel;
    // End of variables declaration//GEN-END:variables
	
	private	StaffShopRankingFocusTraversalPolicy	ftp	=
			new StaffShopRankingFocusTraversalPolicy();
	
	
	private void setKeyListener()
	{
		cmbTargetPeriodEndDate.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodEndDate.addFocusListener(SystemInfo.getSelectText());
		cmbTargetPeriodStartDate.addKeyListener(SystemInfo.getMoveNextField());
		cmbTargetPeriodStartDate.addFocusListener(SystemInfo.getSelectText());

                /*
		count3From.addKeyListener(SystemInfo.getMoveNextField());
		count3From.addFocusListener(SystemInfo.getSelectText());
		count2From.addKeyListener(SystemInfo.getMoveNextField());
		count2From.addFocusListener(SystemInfo.getSelectText());
		count1From.addKeyListener(SystemInfo.getMoveNextField());
		count1From.addFocusListener(SystemInfo.getSelectText());
                
		price3From.addKeyListener(SystemInfo.getMoveNextField());
		price3From.addFocusListener(SystemInfo.getSelectText());
		price2From.addKeyListener(SystemInfo.getMoveNextField());
		price2From.addFocusListener(SystemInfo.getSelectText());
		price1From.addKeyListener(SystemInfo.getMoveNextField());
		price1From.addFocusListener(SystemInfo.getSelectText());
                 *
                 */
	}
	
	/**
	 * 初期化処理を行う。
	 */
	private void init()
	{
            // 設定値の読み込み
            try {

                String sql = "";
                sql = "select * from mst_cross_analysis5_setting where shop_id = " + SystemInfo.getCurrentShop().getShopID();
                
                ResultSetWrapper rs = SystemInfo.getConnection().executeQuery(sql);
                if (rs.next()) {
                    /*
                    count3From.setText(rs.getString("f3value"));
                    count2From.setText(rs.getString("f2value"));
                    count1From.setText(rs.getString("f1value"));
                    dispCountCondition();

                    price3From.setText(rs.getString("m3value"));
                    price2From.setText(rs.getString("m2value"));
                    price1From.setText(rs.getString("m1value"));
                    dispPriceCondition();
                     *
                     */
                    
                    f5m5Label.setText("[" + rs.getString("f5m5name") + "]");
                    f5m4Label.setText("←[" + rs.getString("f5m4name") + "]");
                    f5m3Label.setText("←[" + rs.getString("f5m3name") + "]");
                    f5m2Label.setText("←[" + rs.getString("f5m2name") + "]");
                    f5m1Label.setText("[" + rs.getString("f5m1name") + "]");
                    f4m5Label.setText("↑[" + rs.getString("f4m5name") + "]");
                    f4m4Label.setText("↑[" + rs.getString("f4m4name") + "]←");
                    f4m3Label.setText("↑[" + rs.getString("f4m3name") + "]←");
                    f4m2Label.setText("↑[" + rs.getString("f4m2name") + "]←");
                    f4m1Label.setText("[" + rs.getString("f4m1name") + "]");
                    f3m5Label.setText("↑[" + rs.getString("f3m5name") + "]");
                    f3m4Label.setText("↑[" + rs.getString("f3m4name") + "]←");
                    f3m3Label.setText("↑[" + rs.getString("f3m3name") + "]←");
                    f3m2Label.setText("↑[" + rs.getString("f3m2name") + "]←");
                    f3m1Label.setText("[" + rs.getString("f3m1name") + "]");
                    f2m5Label.setText("↑[" + rs.getString("f2m5name") + "]");
                    f2m4Label.setText("↑[" + rs.getString("f2m4name") + "]←");
                    f2m3Label.setText("↑[" + rs.getString("f2m3name") + "]←");
                    f2m2Label.setText("↑[" + rs.getString("f2m2name") + "]←");
                    f2m1Label.setText("[" + rs.getString("f2m1name") + "]");
                    f1m5Label.setText("[" + rs.getString("f1m5name") + "]");
                    f1m4Label.setText("[" + rs.getString("f1m4name") + "]");
                    f1m3Label.setText("[" + rs.getString("f1m3name") + "]");
                    f1m2Label.setText("[" + rs.getString("f1m2name") + "]");
                    f1m1Label.setText("[" + rs.getString("f1m1name") + "]");

                /*
                } else {

                    sql = "insert into mst_cross_analysis_setting (shop_id) values(" + SystemInfo.getCurrentShop().getShopID() + ")";
                    SystemInfo.getConnection().executeUpdate(sql);
                 *
                 */
                }

                /*
                if (count1From.getText().length() == 0) count1From.setText("1");
                if (price1From.getText().length() == 0) price1From.setText("0");
                 *
                 */
                
                rs.close();
   
            } catch (Exception e) {
            }


            /*
            addMouseMotionListener(f1m1Panel);
            addMouseMotionListener(f1m1Label);
            addMouseMotionListener(f1m1);
            addMouseMotionListener(f1m1Ratio);
            addMouseMotionListener(f1m2Panel);
            addMouseMotionListener(f1m2Label);
            addMouseMotionListener(f1m2);
            addMouseMotionListener(f1m2Ratio);
            addMouseMotionListener(f1m3Panel);
            addMouseMotionListener(f1m3Label);
            addMouseMotionListener(f1m3);
            addMouseMotionListener(f1m3Ratio);

            addMouseMotionListener(f2m1Panel);
            addMouseMotionListener(f2m1Label);
            addMouseMotionListener(f2m1);
            addMouseMotionListener(f2m1Ratio);
            addMouseMotionListener(f2m2Panel);
            addMouseMotionListener(f2m2Label);
            addMouseMotionListener(f2m2);
            addMouseMotionListener(f2m2Ratio);
            addMouseMotionListener(f2m3Panel);
            addMouseMotionListener(f2m3Label);
            addMouseMotionListener(f2m3);
            addMouseMotionListener(f2m3Ratio);

            addMouseMotionListener(f3m1Panel);
            addMouseMotionListener(f3m1Label);
            addMouseMotionListener(f3m1);
            addMouseMotionListener(f3m1Ratio);
            addMouseMotionListener(f3m2Panel);
            addMouseMotionListener(f3m2Label);
            addMouseMotionListener(f3m2);
            addMouseMotionListener(f3m2Ratio);
            addMouseMotionListener(f3m3Panel);
            addMouseMotionListener(f3m3Label);
            addMouseMotionListener(f3m3);
            addMouseMotionListener(f3m3Ratio);

             *
             */
            
             
            addMouseListener(f1m1);
            addMouseListener(f1m2);
            addMouseListener(f1m3);
            addMouseListener(f1m4);
            addMouseListener(f1m5);

            addMouseListener(f2m1);
            addMouseListener(f2m2);
            addMouseListener(f2m3);
            addMouseListener(f2m4);
            addMouseListener(f2m5);

            addMouseListener(f3m1);
            addMouseListener(f3m2);
            addMouseListener(f3m3);
            addMouseListener(f3m4);
            addMouseListener(f3m5);

            addMouseListener(f4m1);
            addMouseListener(f4m2);
            addMouseListener(f4m3);
            addMouseListener(f4m4);
            addMouseListener(f4m5);

            addMouseListener(f5m1);
            addMouseListener(f5m2);
            addMouseListener(f5m3);
            addMouseListener(f5m4);
            addMouseListener(f5m5);
              
              
        }
        
        private void setChkValidLabel() {
            
            MstShopSetting mss = MstShopSetting.getInstance();
            
            String s1 = mss.getValidCustomerPeriod1().toString();
            String s2 = mss.getValidCustomerPeriod2().toString();

            this.chkValid1.setText("稼働客（" + s1 + "ヶ月以内）");
            this.chkValid2.setText("現役客（" + s1 + "〜" + s2 + "ヶ月）");
            this.chkValid3.setText("離店客（" + s2 + "ヶ月以上）");
        }
        
         public StaffShopRankingFocusTraversalPolicy getFocusTraversalPolicy()
	{
		return	ftp;
	}
        
	/**
	 * ランキング画面用FocusTraversalPolicy
	 */
	private class StaffShopRankingFocusTraversalPolicy
					extends FocusTraversalPolicy
	{
		/**
		 * aComponentStaffShopRankingFocusTraversalPolicy。
		 * aContainer は aComponent のフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダでなければなりません。
		 * @param aContainer aComponent のフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダ
		 * @param aComponent aContainer のおそらく間接的な子、または aContainer 自体
		 * @return aComponent のあとにフォーカスを受け取る Component。適切な Component が見つからない場合は null
		 */
		public Component getComponentAfter(Container aContainer,
										   Component aComponent)
		{
			if (aComponent.equals(shop1))
			{
				return chargeStaffNo;
			}else if (aComponent.equals(chargeStaffNo))
			{
				return chargeStaff;
			}else if (aComponent.equals(chargeStaff))
			{
				return cmbTargetPeriodStartDate;
			}else if (aComponent.equals(cmbTargetPeriodStartDate))
			{
				return cmbTargetPeriodEndDate;
			}else if (aComponent.equals(cmbTargetPeriodEndDate))
			{
				return isPastTotal;
			}
                        else if (aComponent.equals(isPastTotal))
			{
				if(rdoTaxUnit.isSelected()){
                                    return rdoTaxUnit;
                                }
                                 return rdoTaxBlank;
			}
			else if (aComponent.equals(rdoTaxUnit) || aComponent.equals(rdoTaxBlank) )
			{
				return chkValid1;
			}
                        else if (aComponent.equals(chkValid1) )
			{
				return chkValid2;
			}else if (aComponent.equals(chkValid2) )
			{
				return chkValid3;
			}
                        else if (aComponent.equals(chkValid3) )
			{
				return chkCondition1;
			}
                         else if (aComponent.equals(chkCondition1) )
			{
				return chkCondition2;
			}
                         else if (aComponent.equals(chkCondition2) )
			{
				return chkCondition3;
			} else if (aComponent.equals(chkCondition3) )
			{
				return chkCondition4;
			} else if (aComponent.equals(chkCondition4) )
			{
				if(rdoSalesAll.isSelected()){
                                    return rdoSalesAll;
                                }
                                else if(rdoSalesTech.isSelected()){
                                    return rdoSalesTech;
                                }
                                return rdoSalesItem;
			}
			return this.getStartComponent();
		}

		/**
		 * aComponent の前にフォーカスを受け取る Component を返します。
		 * aContainer は aComponent のフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダでなければなりません。
		 * @param aContainer aComponent のフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダ
		 * @param aComponent aContainer のおそらく間接的な子、または aContainer 自体
		 * @return aComponent の前にフォーカスを受け取る Component。適切な Component が見つからない場合は null
		 */
		public Component getComponentBefore(Container aContainer,
											Component aComponent)
		{
			return this.getStartComponent();
			
		}

		/**
		 * トラバーサルサイクルの最初の Component を返します。
		 * このメソッドは、順方向のトラバーサルがラップするときに、次にフォーカスする Component を判定するために使用します。
		 * @param aContainer 先頭の Component を返すフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダ
		 * @return aContainer のトラバーサルサイクルの先頭の Componet、または適切な Component が見つからない場合は null
		 */
		public Component getFirstComponent(Container aContainer)
		{
			return this.getStartComponent();
		}

		/**
		 * トラバーサルサイクルの最後の Component を返します。
		 * このメソッドは、逆方向のトラバーサルがラップするときに、次にフォーカスする Component を判定するために使用します。
		 * @param aContainer aContainer - 最後の Component を返すフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダ
		 * @return aContainer のトラバーサルサイクルの最後の Componet、または適切な Component が見つからない場合は null
		 */
		public Component getLastComponent(Container aContainer)
		{
                    if(rdoSalesAll.isSelected() ){
                        return rdoSalesAll;
                    }
                    else if(rdoSalesTech.isSelected()){
                        return rdoSalesTech;
                    }
			return rdoSalesItem;
		}

		/**
		 * フォーカスを設定するデフォルトコンポーネントを返します。
		 * aContainer をルートとするフォーカストラバーサルサイクルが新しく開始されたときに、このコンポーネントに最初にフォーカスが設定されます。
		 * @param aContainer デフォルトの Component を返すフォーカスサイクルのルートまたはフォーカストラバーサルポリシープロバイダ
		 * @return aContainer のトラバーサルサイクルのデフォルトの Componet、または適切な Component が見つからない場合は null
		 */
		public Component getDefaultComponent(Container aContainer)
		{
			return this.getStartComponent();
		}
		
		/**
		 * ウィンドウが最初に表示されたときにフォーカスが設定されるコンポーネントを返します。
		 * show() または setVisible(true) の呼び出しで一度ウィンドウが表示されると、
		 * 初期化コンポーネントはそれ以降使用されません。
		 * 一度別のウィンドウに移ったフォーカスが再び設定された場合、
		 * または、一度非表示状態になったウィンドウが再び表示された場合は、
		 * そのウィンドウの最後にフォーカスが設定されたコンポーネントがフォーカス所有者になります。
		 * このメソッドのデフォルト実装ではデフォルトコンポーネントを返します。
		 * @param window 初期コンポーネントが返されるウィンドウ
		 * @return 最初にウィンドウが表示されるときにフォーカス設定されるコンポーネント。適切なコンポーネントがない場合は null
		 */
		public Component getInitialComponent(Window window)
		{
			return this.getStartComponent();
		}
                 private Component getStartComponent(){
                    if(shop1.getItemCount() == 1)
                    {
                        return chargeStaffNo;
                    }
                    return shop1 ;
                }
		
	}
	/*
        private void dispCountCondition() {
            
            try {

                if (count3From.getText().length() > 0) {
                    count2To.setText(String.valueOf(Long.parseLong(count3From.getText()) - 1));
                }

                if (count2From.getText().length() > 0) {
                    count1To.setText(String.valueOf(Long.parseLong(count2From.getText()) - 1));
                }
                
            } catch (Exception e) {
            }
            
        }
        
        private void dispPriceCondition() {
            
            try {

                if (price3From.getText().length() > 0) {
                    price2To.setText(String.valueOf(Long.parseLong(price3From.getText()) - 1));
                }

                if (price2From.getText().length() > 0) {
                    price1To.setText(String.valueOf(Long.parseLong(price2From.getText()) - 1));
                }
                
            } catch (Exception e) {
            }
            
        }
         *
         */

        private boolean inputCheck(CustomerRanking5List crl)
        {
            /*
                try {
                    Long.parseLong(count3From.getText());
                } catch (Exception e) {
                    
                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "来店回数設定のランク３"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    count3From.requestFocusInWindow();
                    return false;
                }
                
                try {
                    Long.parseLong(count2From.getText());
                } catch (Exception e) {
                    
                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "来店回数設定のランク２"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    count2From.requestFocusInWindow();
                    return false;
                }
            
                try {
                    Long.parseLong(count1From.getText());
                } catch (Exception e) {
                    
                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "来店回数設定のランク１"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    count1From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(price3From.getText());
                } catch (Exception e) {
                    
                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "売上金額設定のランク３"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    price3From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(price2From.getText());
                } catch (Exception e) {
                    
                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "売上金額設定のランク２"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    price2From.requestFocusInWindow();
                    return false;
                }

                try {
                    Long.parseLong(price1From.getText());
                } catch (Exception e) {
                    
                    MessageDialog.showMessageDialog(this,
                            MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "売上金額設定のランク１"),
                            this.getTitle(),
                            JOptionPane.ERROR_MESSAGE);
                    price1From.requestFocusInWindow();
                    return false;
                }
              */
                //対象顧客
                boolean isChecked = false;
                isChecked = isChecked || chkValid1.isSelected();
                isChecked = isChecked || chkValid2.isSelected();
                isChecked = isChecked || chkValid3.isSelected();
                if (!isChecked) {
                    MessageDialog.showMessageDialog(
                        this,
                        "有効顧客のいずれかをチェックしてください。",
                        this.getTitle(),
                        JOptionPane.WARNING_MESSAGE);

                    return false;
                }
                //集計条件選択確認
                int conditionCnt = 0;
                if ( chkCondition1.isSelected() ){  //来店回数
                    conditionCnt++;
                }
                if ( chkCondition2.isSelected() ){  //売上金額
                    conditionCnt++;
                }
                if ( chkCondition3.isSelected() ){  //紹介客数
                    conditionCnt++;
                }
                if ( chkCondition4.isSelected() ){  //客単価
                    conditionCnt++;
                }
                if ( conditionCnt != 2){
                    showWarningMessageDialog( "集計条件を２つチェックしてください。");
                    return false;
                }

                //集計条件の取得
                if ( !getMstCrossAnalysisSetting(crl)){
                    showWarningMessageDialog( "集計条件,名称を設定してください。");
                    return false;
                }else{

                    if( (crl.getRankF5() <= crl.getRankF4())
                         || (crl.getRankF4() <= crl.getRankF3())
                         || (crl.getRankF3() <= crl.getRankF2())
                         || (crl.getRankF2() <= crl.getRankF1()) ){
                            showWarningMessageDialog("集計条件(来店回数)を正しく設定してください。");
                            return false;
                    }

                    if( (crl.getRankM5() <= crl.getRankM4())
                         || (crl.getRankM4() <= crl.getRankM3())
                         || (crl.getRankM3() <= crl.getRankM2())
                         || (crl.getRankM2() <= crl.getRankM1()) ){
                            showWarningMessageDialog("集計条件(売上金額)を正しく設定してください。");
                            return false;
                    }

                    if( (crl.getRankI5() <= crl.getRankI4())
                         || (crl.getRankI4() <= crl.getRankI3())
                         || (crl.getRankI3() <= crl.getRankI2())
                         || (crl.getRankI2() <= crl.getRankI1()) ){
                            showWarningMessageDialog("集計条件(紹介客数)を正しく設定してください。");
                            return false;
                    }

                    if( (crl.getRankA5() <= crl.getRankA4())
                         || (crl.getRankA4() <= crl.getRankA3())
                         || (crl.getRankA3() <= crl.getRankA2())
                         || (crl.getRankA2() <= crl.getRankA1()) ){
                            showWarningMessageDialog("集計条件(客単価)を正しく設定してください。");
                            return false;
                    }

                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF5M5Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF5M4Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF5M3Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF5M2Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF5M1Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }

                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF4M5Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF4M4Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF4M3Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF4M2Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF4M1Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }

                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF3M5Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF3M4Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF3M3Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF3M2Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF3M1Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }

                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF2M5Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF2M4Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF2M3Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF2M2Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF2M1Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }

                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF1M5Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF1M4Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF1M3Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF1M2Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }
                    if ( ! chkMstCrossAnalysisSettingValue(crl.getRankF1M1Name())) {
                            showWarningMessageDialog("名称を設定してください。");
                            return false;
                    }

                }

                return true;
        }

        private void showWarningMessageDialog(String msg){
                MessageDialog.showMessageDialog(
                    this,
                    msg,
                    this.getTitle(),
                    JOptionPane.WARNING_MESSAGE);

        }
 
        private boolean chkMstCrossAnalysisSettingValue( String chk) {
                if ( chk == null || chk.equals("") ){
                    return false;
                }
               
                return true;
            
        }
        private boolean getMstCrossAnalysisSetting( CustomerRanking5List crl) {

                boolean result = true;

                try {

                    String sql = "";
                    sql = "select * from mst_cross_analysis5_setting where shop_id = " + SystemInfo.getCurrentShop().getShopID();

                    ResultSetWrapper rs = SystemInfo.getConnection().executeQuery(sql);
                    if (rs.next()) {

                        crl.setRankF5(rs.getLong("f5value")); 
                        crl.setRankF4(rs.getLong("f4value"));
                        crl.setRankF3(rs.getLong("f3value"));
                        crl.setRankF2(rs.getLong("f2value"));
                        crl.setRankF1(rs.getLong("f1value"));

                        crl.setRankM5(rs.getLong("m5value"));
                        crl.setRankM4(rs.getLong("m4value"));
                        crl.setRankM3(rs.getLong("m3value"));
                        crl.setRankM2(rs.getLong("m2value"));
                        crl.setRankM1(rs.getLong("m1value"));

                        crl.setRankA5(rs.getLong("a5value"));
                        crl.setRankA4(rs.getLong("a4value"));
                        crl.setRankA3(rs.getLong("a3value"));
                        crl.setRankA2(rs.getLong("a2value"));
                        crl.setRankA1(rs.getLong("a1value"));

                        crl.setRankI5(rs.getLong("i5value"));
                        crl.setRankI4(rs.getLong("i4value"));
                        crl.setRankI3(rs.getLong("i3value"));
                        crl.setRankI2(rs.getLong("i2value"));
                        crl.setRankI1(rs.getLong("i1value"));

                        crl.setRankF5M5Name(rs.getString("f5m5name"));
                        crl.setRankF5M4Name(rs.getString("f5m4name"));
                        crl.setRankF5M3Name(rs.getString("f5m3name"));
                        crl.setRankF5M2Name(rs.getString("f5m2name"));
                        crl.setRankF5M1Name(rs.getString("f5m1name"));

                        crl.setRankF4M5Name(rs.getString("f4m5name"));
                        crl.setRankF4M4Name(rs.getString("f4m4name"));
                        crl.setRankF4M3Name(rs.getString("f4m3name"));
                        crl.setRankF4M2Name(rs.getString("f4m2name"));
                        crl.setRankF4M1Name(rs.getString("f4m1name"));

                        crl.setRankF3M5Name(rs.getString("f3m5name"));
                        crl.setRankF3M4Name(rs.getString("f3m4name"));
                        crl.setRankF3M3Name(rs.getString("f3m3name"));
                        crl.setRankF3M2Name(rs.getString("f3m2name"));
                        crl.setRankF3M1Name(rs.getString("f3m1name"));

                        crl.setRankF2M5Name(rs.getString("f2m5name"));
                        crl.setRankF2M4Name(rs.getString("f2m4name"));
                        crl.setRankF2M3Name(rs.getString("f2m3name"));
                        crl.setRankF2M2Name(rs.getString("f2m2name"));
                        crl.setRankF2M1Name(rs.getString("f2m1name"));

                        crl.setRankF1M5Name(rs.getString("f1m5name"));
                        crl.setRankF1M4Name(rs.getString("f1m4name"));
                        crl.setRankF1M3Name(rs.getString("f1m3name"));
                        crl.setRankF1M2Name(rs.getString("f1m2name"));
                        crl.setRankF1M1Name(rs.getString("f1m1name"));

                } else {
                    result = false;
                }

                rs.close();

            } catch (Exception e) {

                result = false;
            }

            return result;

        }

        /**
         * 選択中の税区分を返します。(１：税抜： ２：税込)
         */
        private int getSelectedTaxType()
        {
                if(rdoTaxUnit.isSelected())
                {
                    return 2;
                }

                return	1;
        }
        
        private void showStaffShopRankingDecilePanel(final JComponent c) {

            CustomerRanking5List ctl = new CustomerRanking5List();
            if (!inputCheck(ctl)) return;
            
            if (((JTextField)c).getText().equals("0人")) {

                MessageDialog.showMessageDialog(this,
                        MessageUtil.getMessage(1112),
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            /*
            if ( this.chkCondition3.isSelected() || this.chkCondition4.isSelected() ){
                MessageDialog.showMessageDialog(this,
                        "集計条件に紹介客数または客単価が選択された場合は表示できません。",
                        this.getTitle(),
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
             * 
             */
            
            StaffShopRankingDecilePanel dcl = new StaffShopRankingDecilePanel(this.getTitle());
            dcl.setSelectedRow(0);
            dcl.setTarget(shop1.getSelectedItem());
            
            if (chargeStaff.getSelectedIndex() > 0) {
                dcl.setStaffName(((MstStaff)chargeStaff.getSelectedItem()).getFullStaffName());
            } else {
                dcl.setStaffName("指定なし");
            }
            dcl.setTargetPeriodStartDate(cmbTargetPeriodStartDate.getDateStr("/"));
            dcl.setTargetPeriodEndDate(cmbTargetPeriodEndDate.getDateStr("/"));
            dcl.setTaxName(rdoTaxUnit.isSelected() ? "税込" : "税抜");
            dcl.setLimitCount(99999999);


            if (c.equals(f5m5)) {

                f5m5.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF5M5Name() + " F5M5");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF5() + "回以上");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and sales_value >= " + ctl.getRankM5());
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI5() + "人以上");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and introducer_cnt >= " + ctl.getRankI5());
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI5() + "人以上");
                        dcl.setWhereCondition("sales_value >= " + ctl.getRankM5() + " and introducer_cnt >= " + ctl.getRankI5());
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("sales_value >= " + ctl.getRankM5() + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI5() + "人以上");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("introducer_cnt >= " + ctl.getRankI5() + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }
                

            } else if (c.equals(f5m4)) {

                f5m4.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF5M4Name() + " F5M4");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF5() + "回以上");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) );
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value >= " + ctl.getRankM5() + " and introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value >= " + ctl.getRankM5() + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI5() + "人以上");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt >= " + ctl.getRankI5() + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }

      
            } else if (c.equals(f5m3)) {

                f5m3.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF5M3Name() + " F5M3");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF5() + "回以上");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1) );
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value >= " + ctl.getRankM5() + " and introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value >= " + ctl.getRankM5() + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI5() + "人以上");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt >= " + ctl.getRankI5() + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }

            } else if (c.equals(f5m2)) {

                f5m2.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF5M2Name() + " F5M2");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF5() + "回以上");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1) );
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value >= " + ctl.getRankM5() + " and introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value >= " + ctl.getRankM5() + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI5() + "人以上");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt >= " + ctl.getRankI5() + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }

            } else if (c.equals(f5m1)) {

                f5m1.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF5M1Name() + " F5M1");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF5() + "回以上");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1) );
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value >= " + ctl.getRankM5() + " and introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value >= " + ctl.getRankM5() + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI5() + "人以上");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt >= " + ctl.getRankI5() + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }

            } else if (c.equals(f4m5)) {

                f4m5.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF4M5Name() + " F4M5");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF4() + "回 〜 " + (ctl.getRankF5() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and sales_value >= " + ctl.getRankM5());
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介人数 ： " + ctl.getRankI5() + "人以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and introducer_cnt >= " + ctl.getRankI5());
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介人数 ： " + ctl.getRankI5() + "人以上");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) + " and introducer_cnt >= " + ctl.getRankI5());
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介人数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }

            } else if (c.equals(f4m4)) {

                f4m4.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF4M4Name() + " F4M4");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF4() + "回 〜 " + (ctl.getRankF5() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5()  - 1 ) + " and sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) + " and introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }

            } else if (c.equals(f4m3)) {

                f4m3.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF4M3Name() + " F4M3");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF4() + "回 〜 " + (ctl.getRankF5() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5()  - 1 ) + " and sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) + " and introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }
                
            } else if (c.equals(f4m2)) {

                f4m2.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF4M2Name() + " F4M2");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF4() + "回 〜 " + (ctl.getRankF5() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5()  - 1 ) + " and sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) + " and introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }

            } else if (c.equals(f4m1)) {

                f4m1.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF4M1Name() + " F4M1");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF4() + "回 〜 " + (ctl.getRankF5() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5()  - 1 ) + " and sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) + " and introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }

            } else if (c.equals(f3m5)) {

                f3m5.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF3M5Name() + " F3M5");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF3() + "回 〜 " + (ctl.getRankF4() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and sales_value >= " + ctl.getRankM5());
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介人数 ： " + ctl.getRankI5() + "人以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and introducer_cnt >= " + ctl.getRankI5());
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介人数 ： " + ctl.getRankI5() + "人以上");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1) + " and introducer_cnt >= " + ctl.getRankI5());
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介人数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }

            } else if (c.equals(f3m4)) {

                f3m4.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF3M4Name() + " F3M4");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF3() + "回 〜 " + (ctl.getRankF4() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4()  - 1 ) + " and sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1) + " and introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }

            } else if (c.equals(f3m3)) {

                f3m3.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF3M3Name() + " F3M3");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF3() + "回 〜 " + (ctl.getRankF4() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4()  - 1 ) + " and sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1) + " and introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }

            } else if (c.equals(f3m2)) {

                f3m2.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF3M2Name() + " F3M2");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF3() + "回 〜 " + (ctl.getRankF4() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4()  - 1 ) + " and sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1) + " and introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }

            } else if (c.equals(f3m1)) {

                f3m1.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF3M1Name() + " F3M1");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF3() + "回 〜 " + (ctl.getRankF4() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4()  - 1 ) + " and sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1) + " and introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }
                
            } else if (c.equals(f2m5)) {

                f2m5.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF2M5Name() + " F2M5");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF2() + "回 〜 " + (ctl.getRankF3() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and sales_value >= " + ctl.getRankM5());
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介人数 ： " + ctl.getRankI5() + "人以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and introducer_cnt >= " + ctl.getRankI5());
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介人数 ： " + ctl.getRankI5() + "人以上");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1) + " and introducer_cnt >= " + ctl.getRankI5());
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介人数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }
                
            } else if (c.equals(f2m4)) {

                f2m4.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF2M4Name() + " F2M4");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF2() + "回 〜 " + (ctl.getRankF3() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3()  - 1 ) + " and sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1) + " and introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }
                
            } else if (c.equals(f2m3)) {

                f2m3.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF2M3Name() + " F2M3");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF2() + "回 〜 " + (ctl.getRankF3() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3()  - 1 ) + " and sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1) + " and introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }
                
            } else if (c.equals(f2m2)) {

                f2m2.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF2M2Name() + " F2M2");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF2() + "回 〜 " + (ctl.getRankF3() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3()  - 1 ) + " and sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1) + " and introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }

            } else if (c.equals(f2m1)) {

                f2m1.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF2M1Name() + " F2M1");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF2() + "回 〜 " + (ctl.getRankF3() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3()  - 1 ) + " and sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1) + " and introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }

            } else if (c.equals(f1m5)) {

                f1m5.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF1M5Name() + " F1M5");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF1() + "回 〜 " + (ctl.getRankF2() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and sales_value >= " + ctl.getRankM5());
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介人数 ： " + ctl.getRankI5() + "人以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and introducer_cnt >= " + ctl.getRankI5());
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介人数 ： " + ctl.getRankI5() + "人以上");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1) + " and introducer_cnt >= " + ctl.getRankI5());
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介人数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA5() + "円以上");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1) + " and round(sales_value/visit_count) >= " + ctl.getRankA5());
                    }
                }
                
            } else if (c.equals(f1m4)) {

                f1m4.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF1M4Name() + " F1M4");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF1() + "回 〜 " + (ctl.getRankF2() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2()  - 1 ) + " and sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI4() + "人 〜 " + (ctl.getRankI5() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1) + " and introducer_cnt between " + ctl.getRankI4() + " and " + (ctl.getRankI5() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA4() + "円 〜 " + (ctl.getRankA5() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA4() + " and " + (ctl.getRankA5() - 1));
                    }
                }

            } else if (c.equals(f1m3)) {

                f1m3.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF1M3Name() + " F1M3");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF1() + "回 〜 " + (ctl.getRankF2() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2()  - 1 ) + " and sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI3() + "人 〜 " + (ctl.getRankI4() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1) + " and introducer_cnt between " + ctl.getRankI3() + " and " + (ctl.getRankI4() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA3() + "円 〜 " + (ctl.getRankA4() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA3() + " and " + (ctl.getRankA4() - 1));
                    }
                }

            } else if (c.equals(f1m2)) {

                f1m2.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF1M2Name() + " F1M2");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF1() + "回 〜 " + (ctl.getRankF2() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2()  - 1 ) + " and sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI2() + "人 〜 " + (ctl.getRankI3() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1) + " and introducer_cnt between " + ctl.getRankI2() + " and " + (ctl.getRankI3() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA2() + "円 〜 " + (ctl.getRankA3() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA2() + " and " + (ctl.getRankA3() - 1));
                    }
                }
                
            } else if (c.equals(f1m1)) {

                f1m1.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF1M1Name() + " F1M1");
                if( this.chkCondition1.isSelected()){
                    dcl.setFvalue("来店回数 ： " + ctl.getRankF1() + "回 〜 " + (ctl.getRankF2() - 1) + "回");
                    if( this.chkCondition2.isSelected()){
                        dcl.setMvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1 )+ "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2()  - 1 ) + " and sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1));
                    }else if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1 ) + "人");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }else if( this.chkCondition2.isSelected()){
                    dcl.setFvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1) + "円");
                    if( this.chkCondition3.isSelected()){
                        dcl.setMvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1 ) + "人");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1) + " and introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1));
                    }else if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }else if( this.chkCondition3.isSelected()){
                    dcl.setFvalue("紹介客数 ： " + ctl.getRankI1() + "人 〜 " + (ctl.getRankI2() - 1) + "人");
                    if( this.chkCondition4.isSelected()){
                        dcl.setMvalue("客単価 ： " + ctl.getRankA1() + "円 〜 " + (ctl.getRankA2() - 1 ) + "円");
                        dcl.setWhereCondition("introducer_cnt between " + ctl.getRankI1() + " and " + (ctl.getRankI2() - 1) + " and round(sales_value/visit_count) between " + ctl.getRankA1() + " and " + (ctl.getRankA2() - 1));
                    }
                }

            }
            /*
            if (c.equals(f5m5)) {

                f5m5.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF5M5Name() + " F5M5");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF5() + "回以上");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and sales_value >= " + ctl.getRankM5());

            } else if (c.equals(f5m4)) {

                f5m4.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF5M4Name() + " F5M4");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF5() + "回以上");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1 ) + "円");
                dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1) );

            } else if (c.equals(f5m3)) {

                f5m3.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF5M3Name() + " F5M3");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF5() + "回以上");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1 ) + "円");
                dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1));

            } else if (c.equals(f5m2)) {

                f5m2.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF5M2Name() + " F5M2");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF5() + "回以上");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1 ) + "円");
                dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1));

            } else if (c.equals(f5m1)) {

                f5m1.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF5M1Name() + " F5M1");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF5() + "回以上");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1 ) + "円");
                dcl.setWhereCondition("visit_count >= " + ctl.getRankF5() + " and sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1));

            } else if (c.equals(f4m5)) {

                f4m5.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF4M5Name() + " F4M5");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF4() + "回 〜 " + (ctl.getRankF5() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5() - 1) + " and sales_value >= " + ctl.getRankM5());

            } else if (c.equals(f4m4)) {

                f4m4.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF4M4Name() + " F4M4");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF4() + "回 〜 " + (ctl.getRankF5() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5()  - 1 ) + " and sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1));

            } else if (c.equals(f4m3)) {

                f4m3.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF4M3Name() + " F4M3");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF4() + "回 〜 " + (ctl.getRankF5() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5()  - 1 ) + " and sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1));

            } else if (c.equals(f4m2)) {

                f4m2.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF4M2Name() + " F4M2");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF4() + "回 〜 " + (ctl.getRankF5() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5()  - 1 ) + " and sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1));

            } else if (c.equals(f4m1)) {

                f4m1.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF4M1Name() + " F4M1");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF4() + "回 〜 " + (ctl.getRankF5() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF4() + " and " + (ctl.getRankF5()  - 1 ) + " and sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1));

            } else if (c.equals(f3m5)) {

                f3m5.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF3M5Name() + " F3M5");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF3() + "回 〜 " + (ctl.getRankF4() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4() - 1) + " and sales_value >= " + ctl.getRankM5());

            } else if (c.equals(f3m4)) {

                f3m4.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF3M4Name() + " F3M4");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF3() + "回 〜 " + (ctl.getRankF4() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4()  - 1 ) + " and sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1));

            } else if (c.equals(f3m3)) {

                f3m3.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF3M3Name() + " F3M3");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF3() + "回 〜 " + (ctl.getRankF4() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4()  - 1 ) + " and sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1));

            } else if (c.equals(f3m2)) {

                f3m2.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF3M2Name() + " F3M2");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF3() + "回 〜 " + (ctl.getRankF4() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4()  - 1 ) + " and sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1));

            } else if (c.equals(f3m1)) {

                f3m1.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF3M1Name() + " F3M1");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF4() + "回 〜 " + (ctl.getRankF5() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF3() + " and " + (ctl.getRankF4()  - 1 ) + " and sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1));

            } else if (c.equals(f2m5)) {

                f2m5.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF2M5Name() + " F2M5");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF2() + "回 〜 " + (ctl.getRankF3() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3() - 1) + " and sales_value >= " + ctl.getRankM5());

            } else if (c.equals(f2m4)) {

                f2m4.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF2M4Name() + " F2M4");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF2() + "回 〜 " + (ctl.getRankF3() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3()  - 1 ) + " and sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1));

            } else if (c.equals(f2m3)) {

                f2m3.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF2M3Name() + " F2M3");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF2() + "回 〜 " + (ctl.getRankF3() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3()  - 1 ) + " and sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1));

            } else if (c.equals(f2m2)) {

                f2m2.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF2M2Name() + " F2M2");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF2() + "回 〜 " + (ctl.getRankF3() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3()  - 1 ) + " and sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1));

            } else if (c.equals(f2m1)) {

                f2m1.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF2M1Name() + " F2M1");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF2() + "回 〜 " + (ctl.getRankF3() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF2() + " and " + (ctl.getRankF3()  - 1 ) + " and sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1));

            } else if (c.equals(f1m5)) {

                f1m5.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF1M5Name() + " F1M5");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF1() + "回 〜 " + (ctl.getRankF2() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM5() + "円以上");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2() - 1) + " and sales_value >= " + ctl.getRankM5());

            } else if (c.equals(f1m4)) {

                f1m4.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF1M4Name() + " F1M4");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF1() + "回 〜 " + (ctl.getRankF2() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM4() + "円 〜 " + (ctl.getRankM5() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2()  - 1 ) + " and sales_value between " + ctl.getRankM4() + " and " + (ctl.getRankM5() - 1));

            } else if (c.equals(f1m3)) {

                f1m3.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF1M3Name() + " F1M3");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF1() + "回 〜 " + (ctl.getRankF2() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM3() + "円 〜 " + (ctl.getRankM4() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2()  - 1 ) + " and sales_value between " + ctl.getRankM3() + " and " + (ctl.getRankM4() - 1));

            } else if (c.equals(f1m2)) {

                f1m2.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF1M2Name() + " F1M2");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF1() + "回 〜 " + (ctl.getRankF2() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM2() + "円 〜 " + (ctl.getRankM3() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2()  - 1 ) + " and sales_value between " + ctl.getRankM2() + " and " + (ctl.getRankM3() - 1));

            } else if (c.equals(f1m1)) {

                f1m1.setCursor(null);
                dcl.setFmType("■" + ctl.getRankF1M1Name() + " F1M1");
                dcl.setFvalue("来店回数 ： " + ctl.getRankF1() + "回 〜 " + (ctl.getRankF2() - 1) + "回");
                dcl.setMvalue("売上金額 ： " + ctl.getRankM1() + "円 〜 " + (ctl.getRankM2() - 1 )+ "円");
                dcl.setWhereCondition("visit_count between " + ctl.getRankF1() + " and " + (ctl.getRankF2()  - 1 ) + " and sales_value between " + ctl.getRankM1() + " and " + (ctl.getRankM2() - 1));

            }
             *
             */

            /*
            if (c.equals(f3m3)) {
            
                f3m3.setCursor(null);
                dcl.setFmType(getCategoryName(c));
                dcl.setFvalue("来店回数 ： " + count3From.getText() + "回以上");
                dcl.setMvalue("売上金額 ： " + price3From.getText() + "円以上");
                dcl.setWhereCondition("visit_count >= " + count3From.getText() + " and sales_value >= " + price3From.getText());
                
            } else if (c.equals(f3m2)) {
                
                f3m2.setCursor(null);
                dcl.setFmType(getCategoryName(c));
                dcl.setFvalue("来店回数 ： " + count3From.getText() + "回以上");
                dcl.setMvalue("売上金額 ： " + price2From.getText() + "円 〜 " + price2To.getText() + "円");
                dcl.setWhereCondition("visit_count >= " + count3From.getText() + " and sales_value between " + price2From.getText() + " and " + price2To.getText());
                
            } else if (c.equals(f3m1)) {

                f3m1.setCursor(null);
                dcl.setFmType(getCategoryName(c));
                dcl.setFvalue("来店回数 ： " + count3From.getText() + "回以上");
                dcl.setMvalue("売上金額 ： " + price1From.getText() + "円 〜 " + price1To.getText() + "円");
                dcl.setWhereCondition("visit_count >= " + count3From.getText() + " and sales_value between " + price1From.getText() + " and " + price1To.getText());
                
            } else if (c.equals(f2m3)) {
                
                f2m3.setCursor(null);
                dcl.setFmType(getCategoryName(c));
                dcl.setFvalue("来店回数 ： " + count2From.getText() + "回 〜 " + count2To.getText() + "回");
                dcl.setMvalue("売上金額 ： " + price3From.getText() + "円以上");
                dcl.setWhereCondition("visit_count between " + count2From.getText() + " and " + count2To.getText() + " and sales_value >= " + price3From.getText());
                
            } else if (c.equals(f2m2)) {
                
                f2m2.setCursor(null);
                dcl.setFmType(getCategoryName(c));
                dcl.setFvalue("来店回数 ： " + count2From.getText() + "回 〜 " + count2To.getText() + "回");
                dcl.setMvalue("売上金額 ： " + price2From.getText() + "円 〜 " + price2To.getText() + "円");
                dcl.setWhereCondition("visit_count between " + count2From.getText() + " and " + count2To.getText() + " and sales_value between " + price2From.getText() + " and " + price2To.getText());
                
            } else if (c.equals(f2m1)) {
                
                f2m1.setCursor(null);
                dcl.setFmType(getCategoryName(c));
                dcl.setFvalue("来店回数 ： " + count2From.getText() + "回 〜 " + count2To.getText() + "回");
                dcl.setMvalue("売上金額 ： " + price1From.getText() + "円 〜 " + price1To.getText() + "円");
                dcl.setWhereCondition("visit_count between " + count2From.getText() + " and " + count2To.getText() + " and sales_value between " + price1From.getText() + " and " + price1To.getText());
                
            } else if (c.equals(f1m3)) {
                
                f1m3.setCursor(null);
                dcl.setFmType(getCategoryName(c));
                dcl.setFvalue("来店回数 ： " + count1From.getText() + "回 〜 " + count1To.getText() + "回");
                dcl.setMvalue("売上金額 ： " + price3From.getText() + "円以上");
                dcl.setWhereCondition("visit_count between " + count1From.getText() + " and " + count1To.getText() + " and sales_value >= " + price3From.getText());
                
            } else if (c.equals(f1m2)) {
                
                f1m2.setCursor(null);
                dcl.setFmType(getCategoryName(c));
                dcl.setFvalue("来店回数 ： " + count1From.getText() + "回 〜 " + count1To.getText() + "回");
                dcl.setMvalue("売上金額 ： " + price2From.getText() + "円 〜 " + price2To.getText() + "円");
                dcl.setWhereCondition("visit_count between " + count1From.getText() + " and " + count1To.getText() + " and sales_value between " + price2From.getText() + " and " + price2To.getText());
                
            } else if (c.equals(f1m1)) {
                
                f1m1.setCursor(null);
                dcl.setFmType(getCategoryName(c));
                dcl.setFvalue("来店回数 ： " + count1From.getText() + "回 〜 " + count1To.getText() + "回");
                dcl.setMvalue("売上金額 ： " + price1From.getText() + "円 〜 " + price1To.getText() + "円");
                dcl.setWhereCondition("visit_count between " + count1From.getText() + " and " + count1To.getText() + " and sales_value between " + price1From.getText() + " and " + price1To.getText());
            }
             *
             */

            try {

                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                
                dcl.showData();

                dcl.setOpener(this);
                this.setVisible(false);
                parentFrame.changeContents(dcl);

            } finally {
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
            
        }                                          
        /*
        private String getCategoryName(final JComponent c) {
            
            String result = "";
            
            if (c.getName().equals("f2m2")) result = "■シルバー客 F2M2";
            if (c.getName().equals("f1m1")) result = "■新規含む一般客 F1M1";
            if (c.getName().equals("f1m2")) result = "■新規含む一般客 F1M2";
            if (c.getName().equals("f1m3")) result = "■新規含む一般客 F1M3";
            if (c.getName().equals("f2m1")) result = "■一般客 F2M1";
            if (c.getName().equals("f3m1")) result = "■一般客 F3M1";
            if (c.getName().equals("f3m2")) result = "■ゴールド客 F3M2";
            if (c.getName().equals("f2m3")) result = "■ゴールド客 F2M3";
            if (c.getName().equals("f3m3")) result = "■VIP客 F3M3";

            return result;
        }
         *
         */
        /*
        private void showHint(final JComponent c) {
            
            final String SEP = "━━━━━━━━━━━\n";
            
            if (c.getName().equals("f1m1")) {
                hint.setText(getCategoryName(c) + "\n" + SEP + "来店回数も低く、新規客かもしれませんが、客単価も明らかに低いお客様であるので、あまり期待せずに様子を見た方が良いかもしれません。");
            } else if (c.getName().equals("f1m2")) {
                hint.setText(getCategoryName(c) + "\n" + SEP + "来店回数も低く、新規客かもしれませんが、客単価もそこそこなので、少し様子を見た方が良いかもしれません。");
            } else if (c.getName().equals("f1m3")) {
                hint.setText(getCategoryName(c) + "\n" + SEP + "来店回数も低く、新規客かもしれませんが、客単価が非常に高いお客様であるので、少し次回以降に期待を持って様子を見た方が良いかもしれません。");
            } else if (c.getName().equals("f2m1")) {
                hint.setText(getCategoryName(c) + "\n" + SEP + "来店回数もそこそこで、客単価が明らかに低いお客様なので、キャンペーンなどで来店促進と客単価アップを考えても良いかもしれません。");
            } else if (c.getName().equals("f2m2")) {
                hint.setText(getCategoryName(c) + "\n" + SEP + "来店回数も売上金額もそこそこのお客様なので、来店回数アップ及び客単価アップできる方法を考えても良いかもしれません。");
            } else if (c.getName().equals("f2m3")) {
                hint.setText(getCategoryName(c) + "\n" + SEP + "売上金額は高いのですが、来店回数がまだ少ないので、来店回数をアップするための策を考えれば、VIP客となります。");
            } else if (c.getName().equals("f3m1")) {
                hint.setText(getCategoryName(c) + "\n" + SEP + "来店回数は高いのですが、客単価が明らかに低いお客様なので、コストをかけないで客単価をアップできる方法を考えても良いかもしれません。");
            } else if (c.getName().equals("f3m2")) {
                hint.setText(getCategoryName(c) + "\n" + SEP + "来店回数は高いが、売上金額がそこそこ＝客単価がそこそこということなので、客単価アップのための策を考えれば、VIP客となります。");
            } else if (c.getName().equals("f3m3")) {
                hint.setText(getCategoryName(c) + "\n" + SEP + "来店回数も売上金額も高いVIP客なので、特別待遇を提供することで、ますますロイヤルティが高くなるでしょう。");
            }
        }
         *
         */

        /*
        private void addMouseMotionListener(final JComponent c) {
            c.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                public void mouseMoved(java.awt.event.MouseEvent evt) {
                    showHint(c);
                }
            });
        }
         *
         */

        private void addMouseListener(final JComponent c) {
            c.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    showStaffShopRankingDecilePanel(c);
                }
            });
        }
}
