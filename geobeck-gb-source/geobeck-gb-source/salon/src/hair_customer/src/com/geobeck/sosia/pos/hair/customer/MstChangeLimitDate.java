/*
 * MstChangeLimitDate.java
 *
 * Created on 2013/01/10
 */
package com.geobeck.sosia.pos.hair.customer;

import com.geobeck.sosia.pos.basicinfo.*;
import com.geobeck.sosia.pos.system.SystemInfo;
import java.awt.*;
import javax.swing.*;
import javax.swing.table.*;
import javax.swing.text.*;

import com.geobeck.swing.*;
import com.geobeck.sosia.pos.master.*;
import com.geobeck.sosia.pos.swing.*;
import com.geobeck.sosia.pos.util.*;
import com.geobeck.util.CheckUtil;
import com.geobeck.sosia.pos.master.company.*;
import com.geobeck.sosia.pos.hair.data.course.DataContract;
import com.geobeck.sql.ConnectionWrapper;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.GregorianCalendar;
import java.util.logging.Level;

/**
 *
 * @author Thuyet
 */
public class MstChangeLimitDate extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx {

    /**
     * Creates new form MstChangeLimitDate
     */
    public MstChangeLimitDate(
            int shopID,
            int slipNO,
            int contractNO,
            int contractDetailNO) {
        initComponents();
        setStaffs();
        this.init(shopID, slipNO, contractNO, contractDetailNO);
        addMouseCursorChange();
        this.setSize(500, 500);
        this.setListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resist_btn = new javax.swing.JButton();
        cellularNumberLabel1 = new javax.swing.JLabel();
        staff_txt = new javax.swing.JTextField();
        chargeStaff = new javax.swing.JComboBox();
        cellularNumberLabel2 = new javax.swing.JLabel();
        cellularNumberLabel3 = new javax.swing.JLabel();
        cellularNumberLabel4 = new javax.swing.JLabel();
        cellularNumberLabel5 = new javax.swing.JLabel();
        digestion_lbl = new com.geobeck.swing.JFormattedTextFieldEx();
        cellularNumberLabel6 = new javax.swing.JLabel();
        cellularNumberLabel7 = new javax.swing.JLabel();
        product_value = new com.geobeck.swing.JFormattedTextFieldEx();
        remain_value = new com.geobeck.swing.JFormattedTextFieldEx();
        valid_date_drop = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        limit_date_drop = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        course_lbl = new com.geobeck.swing.JFormattedTextFieldEx();
        limit_date_lbl = new com.geobeck.swing.JFormattedTextFieldEx();
        valid_date_lbl = new com.geobeck.swing.JFormattedTextFieldEx();
        cellularNumberLabel8 = new javax.swing.JLabel();
        cellularNumberLabel9 = new javax.swing.JLabel();
        cellularNumberLabel10 = new javax.swing.JLabel();
        contract_date = new com.geobeck.swing.JFormattedTextFieldEx();
        close_btn = new javax.swing.JButton();
        staff_name_lbl = new com.geobeck.swing.JFormattedTextFieldEx();
        change_reason = new com.geobeck.swing.JFormattedTextFieldEx();

        setFocusCycleRoot(true);

        resist_btn.setIcon(SystemInfo.getImageIcon("/button/common/regist_off.jpg"));
        resist_btn.setBorderPainted(false);
        resist_btn.setPressedIcon(SystemInfo.getImageIcon("/button/common/regist_on.jpg"));
        resist_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resist_btnActionPerformed(evt);
            }
        });

        cellularNumberLabel1.setText("íSìñé“");

        staff_txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        staff_txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                staff_txtFocusLost(evt);
            }
        });

        chargeStaff.setMaximumRowCount(20);
        chargeStaff.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        chargeStaff.setFocusable(false);
        chargeStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeStaffActionPerformed(evt);
            }
        });

        cellularNumberLabel2.setText("ÉRÅ[ÉX");

        cellularNumberLabel3.setText("íSìñé“");

        cellularNumberLabel4.setText("è¡âªêî");

        cellularNumberLabel5.setText("å_ñÒì˙");

        digestion_lbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        digestion_lbl.setColumns(4);
        digestion_lbl.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        digestion_lbl.setEnabled(false);

        cellularNumberLabel6.setText("ã‡äz");

        cellularNumberLabel7.setText("ññ±éc");

        product_value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        product_value.setColumns(4);
        product_value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        product_value.setEnabled(false);
        product_value.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));

        remain_value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        remain_value.setColumns(4);
        remain_value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        remain_value.setEnabled(false);

        valid_date_drop.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        valid_date_drop.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                valid_date_dropItemStateChanged(evt);
            }
        });
        valid_date_drop.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                valid_date_dropFocusGained(evt);
            }
        });

        limit_date_drop.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        limit_date_drop.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                limit_date_dropItemStateChanged(evt);
            }
        });
        limit_date_drop.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                limit_date_dropFocusGained(evt);
            }
        });

        course_lbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        course_lbl.setDragEnabled(true);
        course_lbl.setEnabled(false);
        course_lbl.setInputKanji(true);

        limit_date_lbl.setEditable(false);
        limit_date_lbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        limit_date_lbl.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        valid_date_lbl.setEditable(false);
        valid_date_lbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        valid_date_lbl.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cellularNumberLabel8.setText("ïœçXóùóR");

        cellularNumberLabel9.setText("óLå¯ä˙å¿");

        cellularNumberLabel10.setText("ï€èÿä˙å¿");

        contract_date.setEditable(false);
        contract_date.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        contract_date.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        close_btn.setIcon(SystemInfo.getImageIcon("/button/common/close_off.jpg"));
        close_btn.setBorderPainted(false);
        close_btn.setPressedIcon(SystemInfo.getImageIcon("/button/common/close_on.jpg"));
        close_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close_btnActionPerformed(evt);
            }
        });

        staff_name_lbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        staff_name_lbl.setDragEnabled(true);
        staff_name_lbl.setEnabled(false);
        staff_name_lbl.setInputKanji(true);

        change_reason.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        change_reason.setInputKanji(true);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(50, 50, 50)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(cellularNumberLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(valid_date_lbl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(298, 298, 298))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(cellularNumberLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(26, 26, 26))
                            .add(layout.createSequentialGroup()
                                .add(cellularNumberLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, cellularNumberLabel2)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, cellularNumberLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(1, 1, 1)
                                .add(limit_date_lbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(78, 78, 78)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(limit_date_drop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, cellularNumberLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, cellularNumberLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(remain_value, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(product_value, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 91, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                    .add(valid_date_drop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(layout.createSequentialGroup()
                                .add(60, 60, 60)
                                .add(resist_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(close_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, staff_name_lbl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, course_lbl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, contract_date, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, digestion_lbl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .add(217, 217, 217)))
                        .add(82, 82, 82))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(cellularNumberLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cellularNumberLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(cellularNumberLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(staff_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(chargeStaff, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 159, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(change_reason, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 320, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(resist_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(close_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(40, 40, 40)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cellularNumberLabel2)
                    .add(course_lbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(21, 21, 21)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cellularNumberLabel3)
                    .add(staff_name_lbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(20, 20, 20)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(digestion_lbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cellularNumberLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(product_value, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cellularNumberLabel4))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cellularNumberLabel5)
                    .add(contract_date, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cellularNumberLabel7)
                    .add(remain_value, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(cellularNumberLabel9)
                            .add(valid_date_lbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(cellularNumberLabel10)
                            .add(limit_date_lbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(valid_date_drop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(limit_date_drop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(cellularNumberLabel8)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(change_reason, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cellularNumberLabel1)
                    .add(staff_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(chargeStaff, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(182, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void resist_btnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_resist_btnActionPerformed
	{//GEN-HEADEREND:event_resist_btnActionPerformed

            this.regist();

	}//GEN-LAST:event_resist_btnActionPerformed

        private void staff_txtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_staff_txtFocusLost

            if (!staff_txt.getText().equals("")) {

                MstStaff ms = new MstStaff();

                this.setStaff(chargeStaff, staff_txt.getText());
                ms.setStaffID(((MstStaff) chargeStaff.getSelectedItem()).getStaffID());

            } else {

                chargeStaff.setSelectedIndex(0);
            }
}//GEN-LAST:event_staff_txtFocusLost

        private void chargeStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargeStaffActionPerformed

            MstStaff ms = (MstStaff) chargeStaff.getSelectedItem();

            if (chargeStaff.getSelectedIndex() == 0) {
                staff_txt.setText("");
            }

            if (ms.getStaffID() != null) {
                staff_txt.setText(ms.getStaffNo());
            }

            if (!this.isShowing()) {
                return;
            }
}//GEN-LAST:event_chargeStaffActionPerformed

        private void valid_date_dropItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_valid_date_dropItemStateChanged
}//GEN-LAST:event_valid_date_dropItemStateChanged

        private void valid_date_dropFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valid_date_dropFocusGained
            valid_date_drop.getInputContext().setCharacterSubsets(null);
}//GEN-LAST:event_valid_date_dropFocusGained

        private void limit_date_dropItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_limit_date_dropItemStateChanged
            // TODO add your handling code here:
        }//GEN-LAST:event_limit_date_dropItemStateChanged

        private void limit_date_dropFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_limit_date_dropFocusGained
            // TODO add your handling code here:
        }//GEN-LAST:event_limit_date_dropFocusGained

        private void close_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close_btnActionPerformed
            this.setVisible(false);
            this.dispose();
}//GEN-LAST:event_close_btnActionPerformed
    /*
     * å„énññ
     */

    public void dispose() {
        if (this.isDialog()) {
            ((JDialog) this.getParent().getParent().getParent().getParent()).dispose();
        }
    }

    private void setStaff(JComboBox staffCombo, String staffNo) {

        for (int i = 0; i < staffCombo.getItemCount(); i++) {

            MstStaff ms = (MstStaff) staffCombo.getItemAt(i);

            //ãÛîíÇÉZÉbÉg
            if (ms.getStaffID() == null) {

                staffCombo.setSelectedIndex(0);

            } else if (ms.getStaffNo().equals(staffNo)) {

                staffCombo.setSelectedIndex(i);
                return;
            }
        }
    }

    private void setStaffs() {
        MstStaffs staffs = new MstStaffs();

        staffs.setShopIDList(SystemInfo.getCurrentShop().getShopID().toString());

        try {

            staffs.load(SystemInfo.getConnection(), true);

            chargeStaff.removeAllItems();
            for (MstStaff ms : staffs) {
                if (ms.isDisplay()) {
                    chargeStaff.addItem(ms);
                }
            }

            chargeStaff.setSelectedIndex(0);


        } catch (Exception e) {

            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cellularNumberLabel1;
    private javax.swing.JLabel cellularNumberLabel10;
    private javax.swing.JLabel cellularNumberLabel2;
    private javax.swing.JLabel cellularNumberLabel3;
    private javax.swing.JLabel cellularNumberLabel4;
    private javax.swing.JLabel cellularNumberLabel5;
    private javax.swing.JLabel cellularNumberLabel6;
    private javax.swing.JLabel cellularNumberLabel7;
    private javax.swing.JLabel cellularNumberLabel8;
    private javax.swing.JLabel cellularNumberLabel9;
    private com.geobeck.swing.JFormattedTextFieldEx change_reason;
    private javax.swing.JComboBox chargeStaff;
    private javax.swing.JButton close_btn;
    private com.geobeck.swing.JFormattedTextFieldEx contract_date;
    private com.geobeck.swing.JFormattedTextFieldEx course_lbl;
    private com.geobeck.swing.JFormattedTextFieldEx digestion_lbl;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo limit_date_drop;
    private com.geobeck.swing.JFormattedTextFieldEx limit_date_lbl;
    private com.geobeck.swing.JFormattedTextFieldEx product_value;
    private com.geobeck.swing.JFormattedTextFieldEx remain_value;
    private javax.swing.JButton resist_btn;
    private com.geobeck.swing.JFormattedTextFieldEx staff_name_lbl;
    private javax.swing.JTextField staff_txt;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo valid_date_drop;
    private com.geobeck.swing.JFormattedTextFieldEx valid_date_lbl;
    // End of variables declaration//GEN-END:variables
    private GregorianCalendar currentDate = new GregorianCalendar();
    private DataContract dataContract = new DataContract();

    /**
     * É{É^ÉìÇ…É}ÉEÉXÉJÅ[É\ÉãÇ™èÊÇ¡ÇΩÇ∆Ç´Ç…ÉJÅ[É\ÉãÇïœçXÇ∑ÇÈÉCÉxÉìÉgÇí«â¡Ç∑ÇÈÅB
     */
    private void addMouseCursorChange() {
        SystemInfo.addMouseCursorChange(resist_btn);
        SystemInfo.addMouseCursorChange(close_btn);
    }

    /**
     * ÉRÉìÉ|Å[ÉlÉìÉgÇÃäeÉäÉXÉiÅ[ÇÉZÉbÉgÇ∑ÇÈÅB
     */
    private void setListener() {
        change_reason.addKeyListener(SystemInfo.getMoveNextField());
        change_reason.addFocusListener(SystemInfo.getSelectText());
        staff_name_lbl.addKeyListener(SystemInfo.getMoveNextField());
        staff_name_lbl.addFocusListener(SystemInfo.getSelectText());
    }

    /**
     * èâä˙âªèàóùÇçsÇ§ÅB
     *
     * @param masterName É}ÉXÉ^ÇÃñºèÃ
     * @param tableName ÉeÅ[ÉuÉãñº
     * @param idColName ÇhÇcÇÃóÒñº
     * @param nameColName ñºèÃÇÃóÒñº
     * @param nameLength ñºèÃÇÃç≈ëÂï∂éöêî
     */
    private void init(int shopID, int slipNO, int contractNO, int contractDetailNO) {
        this.setTitle("óLå¯ä˙å¿ÅEï€èÿä˙å¿ïœçX");
        MstShop shop = new MstShop();
        shop.setShopID(shopID);
        dataContract.setShop(shop);
        dataContract.setSlipNo(slipNO);
        dataContract.setContractNo(contractNO);
        dataContract.setContractDetailNo(contractDetailNO);
        dataContract.loadData();

        this.showDataContract();
    }

    private void showDataContract() {
        course_lbl.setText(dataContract.getProductID().toString());
        staff_name_lbl.setText(dataContract.getStaff().getFullStaffName());
        digestion_lbl.setText(dataContract.getProductNum2().toString() + "/" + dataContract.getProductNum1().toString());
        DecimalFormat df = new DecimalFormat("#,###,##0");
        product_value.setText(df.format(dataContract.getProductValue()));
        SimpleDateFormat fmt = new SimpleDateFormat("yyyy/MM/dd");
        contract_date.setText(dataContract.getSalesDate() == null ? "" : fmt.format(dataContract.getSalesDate()));
        remain_value.setText(df.format(dataContract.getRemainValue()));
        valid_date_lbl.setText(dataContract.getValidDate() == null ? "" : fmt.format(dataContract.getValidDate()));
        limit_date_lbl.setText(dataContract.getLimitDate() == null ? "" : fmt.format(dataContract.getLimitDate()));
        change_reason.setText(dataContract.getChangeReason());
        if (dataContract.getValidDate() != null) {
            valid_date_drop.setDate(fmt.format(dataContract.getValidDate()));
        }
        if (dataContract.getLimitDate() != null) {
            limit_date_drop.setDate(fmt.format(dataContract.getLimitDate()));
        }
        this.setStaff(chargeStaff, dataContract.getStaff().getStaffNo());

    }

    /**
     * ì¸óÕçÄñ⁄ÇÉNÉäÉAÇ∑ÇÈÅB
     */
    private void clear() {
        //change_reason.setText("");
        //staff_name_lbl.setText("");
    }

    /**
     * ì¸óÕÉ`ÉFÉbÉNÇçsÇ§ÅB
     *
     * @return true - ÇnÇj
     */
    private boolean checkInput() {
        
        if(valid_date_drop.getDate() != null && valid_date_drop.getDate().before(dataContract.getSalesDate())){
            MessageDialog.showMessageDialog(this,
                    "ä˙å¿Ç™ê≥ÇµÇ≠Ç†ÇËÇ‹ÇπÇÒÅB\nå_ñÒì˙à»ç~ÇÃì˙ïtÇ≈ê›íËÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB",
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            valid_date_drop.requestFocusInWindow();
            return false;
        }
         if(limit_date_drop.getDate() != null && limit_date_drop.getDate().before(dataContract.getSalesDate())){
            MessageDialog.showMessageDialog(this,
                    "ä˙å¿Ç™ê≥ÇµÇ≠Ç†ÇËÇ‹ÇπÇÒÅB\nå_ñÒì˙à»ç~ÇÃì˙ïtÇ≈ê›íËÇµÇƒÇ≠ÇæÇ≥Ç¢ÅB",
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            limit_date_drop.requestFocusInWindow();
            return false;
        } 
         
        if (change_reason.getText().equals("")) {
            //ïœçXóùóR
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(MessageUtil.ERROR_INPUT_EMPTY, "ïœçXóùóR"),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
            change_reason.requestFocusInWindow();
            return false;
        }
        
        return true;
    }

    /**
     * ìoò^èàóùÇçsÇ§ÅB
     *
     * @param isInsert true - Insert
     */
    private void regist() {
        ConnectionWrapper con = SystemInfo.getConnection();
        if (checkInput()) {
            try {
                dataContract.setChangeReason(change_reason.getText());
                try {
                    dataContract.setStaff((MstStaff) (chargeStaff.getSelectedItem()));
                } catch(Exception e)  {
                }
                if (valid_date_drop.getDate() != null) {
                    dataContract.setValidDate(valid_date_drop.getDate());
                }
                if (limit_date_drop.getDate() != null) {
                    dataContract.setLimitDate(limit_date_drop.getDate());
                }
                if (dataContract.UpdateDataContract(con)) {
                    MessageDialog.showMessageDialog(this, MessageUtil.getMessage(MessageUtil.INFO_REGIST_SUCCESS, "óLå¯ä˙å¿ÅEï€èÿä˙å¿ïœçX", "ê¨å˜"), this.getTitle(), JOptionPane.INFORMATION_MESSAGE);
                    dataContract.loadData();
                    showDataContract();
                } else {
                    MessageDialog.showMessageDialog(this, MessageUtil.getMessage(MessageUtil.ERROR_REGIST_FAILED, "óLå¯ä˙å¿ÅEï€èÿä˙å¿ïœçX", "é∏îs"), this.getTitle(), JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            }


        }

    }
}
