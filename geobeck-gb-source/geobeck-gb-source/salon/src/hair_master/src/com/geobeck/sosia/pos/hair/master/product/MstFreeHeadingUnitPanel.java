/*
 * MstFreeHeadingUnitPanel.java
 *
 * Created on 2007/08/17, 19:54
 */

package com.geobeck.sosia.pos.hair.master.product;

import java.util.*;
import javax.swing.*;
import javax.swing.table.*;
import javax.swing.text.*;

import com.geobeck.swing.*;
import com.geobeck.sosia.pos.swing.*;
import com.geobeck.sosia.pos.system.*;

/**
 *
 * @author  kanemoto
 */
public class MstFreeHeadingUnitPanel extends javax.swing.JPanel {
    Integer selIndex = -1;
    
    /** Creates new form MstFreeHeadingUnitPanel */
    public MstFreeHeadingUnitPanel( Integer freeHeadingClassID, String freeHeadingClassName ) {
	initComponents();
        this.setSize(835, 690);
	this.init( freeHeadingClassID, freeHeadingClassName );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        freeHeadings = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        freeHeadingName = new com.geobeck.swing.JFormattedTextFieldEx();
        freeHeadingNameLabel = new javax.swing.JLabel();
        displaySeqLabel = new javax.swing.JLabel();
        displaySeq = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)displaySeq.getDocument()).setDocumentFilter(
            new CustomFilter(4, CustomFilter.NUMERIC));
        deleteButton = new javax.swing.JButton();
        renewButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        freeHeadings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ñºèÃ", "ï\é¶èá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        freeHeadings.setSelectionForeground(new java.awt.Color(0, 0, 0));
        freeHeadings.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        freeHeadings.getTableHeader().setReorderingAllowed(false);
        SwingUtil.setJTableHeaderRenderer(freeHeadings, SystemInfo.getTableHeaderRenderer());
        freeHeadings.setRowHeight(SystemInfo.TABLE_ROW_HEIGHT);
        SelectTableCellRenderer.setSelectTableCellRenderer(freeHeadings);
        freeHeadings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                freeHeadingsMouseReleased(evt);
            }
        });
        freeHeadings.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                freeHeadingsKeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(freeHeadings);

        jPanel1.setOpaque(false);
        freeHeadingName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        freeHeadingName.setInputKanji(true);

        freeHeadingNameLabel.setText("\u540d\u79f0");

        displaySeqLabel.setText("\u633f\u5165\u4f4d\u7f6e");

        displaySeq.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        displaySeq.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        deleteButton.setIcon(SystemInfo.getImageIcon("/button/common/delete_off.jpg"));
        deleteButton.setBorderPainted(false);
        deleteButton.setContentAreaFilled(false);
        deleteButton.setEnabled(false);
        deleteButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/delete_on.jpg"));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        renewButton.setIcon(SystemInfo.getImageIcon("/button/common/update_off.jpg"));
        renewButton.setBorderPainted(false);
        renewButton.setContentAreaFilled(false);
        renewButton.setEnabled(false);
        renewButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/update_on.jpg"));
        renewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renewButtonActionPerformed(evt);
            }
        });

        addButton.setIcon(SystemInfo.getImageIcon("/button/common/insert_off.jpg"));
        addButton.setBorderPainted(false);
        addButton.setContentAreaFilled(false);
        addButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/insert_on.jpg"));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(freeHeadingNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(freeHeadingName, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(displaySeqLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displaySeq, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(renewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freeHeadingNameLabel)
                    .addComponent(freeHeadingName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(displaySeqLabel)
                            .addComponent(displaySeq, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(renewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * ÉeÅ[ÉuÉãÉZÉãÉ}ÉEÉXó£è„èàóù
     */
    private void freeHeadingsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_freeHeadingsMouseReleased
	changeCurrentData();
    }//GEN-LAST:event_freeHeadingsMouseReleased

    /**
     * ÉeÅ[ÉuÉãÉZÉãÉLÅ[ó£è„èàóù
     */
    private void freeHeadingsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_freeHeadingsKeyReleased
	changeCurrentData();
    }//GEN-LAST:event_freeHeadingsKeyReleased

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
	this.regist(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void renewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renewButtonActionPerformed
	this.regist(false);
    }//GEN-LAST:event_renewButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
	this.delete();
    }//GEN-LAST:event_deleteButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private com.geobeck.swing.JFormattedTextFieldEx displaySeq;
    private javax.swing.JLabel displaySeqLabel;
    private com.geobeck.swing.JFormattedTextFieldEx freeHeadingName;
    private javax.swing.JLabel freeHeadingNameLabel;
    private javax.swing.JTable freeHeadings;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton renewButton;
    // End of variables declaration//GEN-END:variables

    private	MstFreeHeadingUnit		mitds	=	null;

    private void init(Integer freeHeadingClassID, String freeHeadingClassName)
    {
	    mitds	=	new MstFreeHeadingUnit(freeHeadingClassID, freeHeadingClassName);
	    this.showData();
    }

    public String getItemTypeName()
    {
	    return	mitds.getFreeHeadingClassName();
    }

    /**
     * ì¸óÕÉtÉBÅ[ÉãÉhÇÉNÉäÉAÇ∑ÇÈ
     */
    private void clear()
    {
	    selIndex	=	-1;
	    freeHeadingName.setText("");
	    displaySeq.setText("");

	    if(0 < freeHeadings.getRowCount())
			    freeHeadings.removeRowSelectionInterval(0, freeHeadings.getRowCount() - 1);

	    this.changeCurrentData();
    }
    
    /**
     * ëIëÉfÅ[É^Ç™ïœçXÇ≥ÇÍÇΩÇ∆Ç´ÇÃèàóùÇçsÇ§ÅB
     */
    private void changeCurrentData()
    {
	    int	index	=	freeHeadings.getSelectedRow();

	    if(0 <= index && index < mitds.size() && index != selIndex)
	    {
		    selIndex	=	index;
		    //ëIëÇ≥ÇÍÇƒÇ¢ÇÈÉfÅ[É^Çï\é¶
		    this.showCurrentData();
	    }

	    //É{É^ÉìÇÃégópâ¬ïsâ¬ÇïœçXÇ∑ÇÈ
	    renewButton.setEnabled(0 <= selIndex);
	    deleteButton.setEnabled(0 <= selIndex);
    }

    public void showData()
    {
	    SwingUtil.clearTable(freeHeadings);

	    if(!mitds.load())
	    {
		    return;
	    }

	    DefaultTableModel	model	=	(DefaultTableModel)freeHeadings.getModel();

	    for(MstFreeHeading mitd : mitds)
	    {
		    Vector<Object>	temp	=	new Vector<Object>();

		    temp.add(mitd);
		    temp.add(mitd.getDisplaySeq());

		    model.addRow(temp);
	    }
    }
    
    /**
     * ëIëÇµÇΩÉeÅ[ÉuÉãÉfÅ[É^Çï\é¶Ç∑ÇÈ
     */
    private void showCurrentData()
    {
	freeHeadingName.setText(mitds.get(selIndex).getFreeHeadingName());
	displaySeq.setText(mitds.get(selIndex).getDisplaySeq().toString());
    }

    private void regist(boolean isAdd)
    {
	    if(!this.checkInput())
	    {
		    return;
	    }

	    MstFreeHeading mitd	=	null;

	    if(isAdd)
	    {
		    mitd	=	new MstFreeHeading();
	    }
	    else
	    {
		    mitd	=	mitds.get(freeHeadings.getSelectedRow());
	    }

	    mitd.setFreeHeadingName(freeHeadingName.getText());
	    mitd.setDisplaySeq((displaySeq.getText().equals("") ? -1 : Integer.parseInt(displaySeq.getText())));

	    if(mitds.regist(mitd))
	    {
		    this.showData();
		    //ì¸óÕÇÉNÉäÉAÇ∑ÇÈ
		    this.clear();
	    }
	    else
	    {

	    }
    }

    private boolean checkInput()
    {
	    if(freeHeadingName.getText().equals(""))
	    {
		    return	false;
	    }

	    return	true;
    }

    private void delete()
    {
	    if(0 <= freeHeadings.getSelectedRow())
	    {
		    if(mitds.delete(mitds.get(freeHeadings.getSelectedRow())))
		    {
			    this.showData();
			    //ì¸óÕÇÉNÉäÉAÇ∑ÇÈ
			    this.clear();
		    }
		    else
		    {

		    }
	    }
    }
}
