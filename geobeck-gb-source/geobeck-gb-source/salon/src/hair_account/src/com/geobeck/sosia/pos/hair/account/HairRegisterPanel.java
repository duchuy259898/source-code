/*
 * HairRegisterPanel.java
 *
 * Created on 2007/03/26, 9:34
 */

package com.geobeck.sosia.pos.hair.account;

import com.geobeck.util.CheckUtil;
import java.awt.*;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.sql.*;
import java.util.*;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.text.*;

import com.geobeck.swing.*;
import com.geobeck.sosia.pos.master.company.*;
import com.geobeck.sosia.pos.system.*;
import com.geobeck.sosia.pos.util.*;
import com.geobeck.sql.*;
import java.text.DecimalFormat;

/**
 *
 * @author  katagiri
 */
public class HairRegisterPanel extends com.geobeck.sosia.pos.swing.AbstractImagePanelEx {

    /**
     * Creates new form HairRegisterPanel
     */
    public HairRegisterPanel() {
        initComponents();
        this.addMouseCursorChange();
        this.init();
        this.setPath("ê∏éZä«óù");
        this.setTitle("ÉåÉWä«óù");
        this.setSize(833, 691);

        technicValue.setBorder(null);
        technicDiscount.setBorder(null);
        technicSales.setBorder(null);
        itemValue.setBorder(null);
        itemDiscount.setBorder(null);
        itemSales.setBorder(null);

        totalTechItem.setBorder(null);
        allDiscount.setBorder(null);
        tax.setBorder(null);
        totalSales.setBorder(null);
        //IVS_TMTrong start add 2015/10/16 New request #43500
        courseAmount.setBorder(null);
        courseDiscount.setBorder(null);
        courseSales.setBorder(null);
        changeCancel.setBorder(null);
        //IVS_TMTrong end add 2015/10/16 New request #43500

        cashSales.setBorder(null);
        cardSales.setBorder(null);
        eCashSales.setBorder(null);
        giftSales.setBorder(null);
        billValue.setBorder(null);
        cashCollect.setBorder(null);
        cashCollectOther.setBorder(null);
        cashInOut.setBorder(null);

        discrepancies.setBorder(null);
        baseTotal.setBorder(null);
        cashTotal.setBorder(null);
        logicalValue.setBorder(null);
        physicalValue.setBorder(null);
      
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        manageDate = new jp.co.flatsoft.fscomponent.FSCalenderCombo();
        jLabel21 = new javax.swing.JLabel();
        shop = new com.geobeck.sosia.pos.swing.JComboBoxLabel();
        targetLabel = new javax.swing.JLabel();
        showButton = new javax.swing.JButton();
        registButton = new javax.swing.JButton();
        btnOutput = new javax.swing.JButton();
        receiptButton = new javax.swing.JButton();
        targetLabel3 = new javax.swing.JLabel();
        cboWeather = new javax.swing.JComboBox();
        targetLabel1 = new javax.swing.JLabel();
        txtStaffCount = new javax.swing.JTextField();
        ((PlainDocument)txtStaffCount.getDocument()).setDocumentFilter(
            new CustomFilter(5, CustomFilter.NUMERIC));
        targetLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        imagePanel1 = new com.geobeck.swing.ImagePanel();
        accountRegistButton = new javax.swing.JButton();
        baseValue = new com.geobeck.swing.JFormattedTextFieldEx();
        ((PlainDocument)baseValue.getDocument()).setDocumentFilter(
            new CustomFilter(9, CustomFilter.NUMBER));
        technicValue = new com.geobeck.swing.JFormattedTextFieldEx();
        technicDiscount = new com.geobeck.swing.JFormattedTextFieldEx();
        technicSales = new com.geobeck.swing.JFormattedTextFieldEx();
        itemValue = new com.geobeck.swing.JFormattedTextFieldEx();
        totalSales = new com.geobeck.swing.JFormattedTextFieldEx();
        tax = new com.geobeck.swing.JFormattedTextFieldEx();
        allDiscount = new com.geobeck.swing.JFormattedTextFieldEx();
        itemSales = new com.geobeck.swing.JFormattedTextFieldEx();
        itemDiscount = new com.geobeck.swing.JFormattedTextFieldEx();
        cashCollectOther = new com.geobeck.swing.JFormattedTextFieldEx();
        cashCollect = new com.geobeck.swing.JFormattedTextFieldEx();
        billValue = new com.geobeck.swing.JFormattedTextFieldEx();
        cardSales = new com.geobeck.swing.JFormattedTextFieldEx();
        cashSales = new com.geobeck.swing.JFormattedTextFieldEx();
        baseTotal = new javax.swing.JLabel();
        cashTotal = new javax.swing.JLabel();
        cashInOut = new javax.swing.JLabel();
        logicalValue = new javax.swing.JLabel();
        physicalValue = new javax.swing.JLabel();
        discrepancies = new javax.swing.JLabel();
        totalTechItem = new com.geobeck.swing.JFormattedTextFieldEx();
        eCashSales = new com.geobeck.swing.JFormattedTextFieldEx();
        giftSales = new com.geobeck.swing.JFormattedTextFieldEx();
        registerMoneyPanel1 = new javax.swing.JPanel();
        registerMoney10000 = new javax.swing.JSpinner();
        registerMoney5000 = new javax.swing.JSpinner();
        registerMoney2000 = new javax.swing.JSpinner();
        registerMoney1000 = new javax.swing.JSpinner();
        registerMoney500 = new javax.swing.JSpinner();
        registerMoney10000Value = new com.geobeck.swing.JFormattedTextFieldEx();
        registerMoney5000Value = new com.geobeck.swing.JFormattedTextFieldEx();
        registerMoney2000Value = new com.geobeck.swing.JFormattedTextFieldEx();
        registerMoney1000Value = new com.geobeck.swing.JFormattedTextFieldEx();
        registerMoney500Value = new com.geobeck.swing.JFormattedTextFieldEx();
        registerMoneyPanel2 = new javax.swing.JPanel();
        registerMoney100 = new javax.swing.JSpinner();
        registerMoney50 = new javax.swing.JSpinner();
        registerMoney10 = new javax.swing.JSpinner();
        registerMoney5 = new javax.swing.JSpinner();
        registerMoney1 = new javax.swing.JSpinner();
        registerMoney100Value = new com.geobeck.swing.JFormattedTextFieldEx();
        registerMoney50Value = new com.geobeck.swing.JFormattedTextFieldEx();
        registerMoney10Value = new com.geobeck.swing.JFormattedTextFieldEx();
        registerMoney5Value = new com.geobeck.swing.JFormattedTextFieldEx();
        registerMoney1Value = new com.geobeck.swing.JFormattedTextFieldEx();
        courseAmount = new com.geobeck.swing.JFormattedTextFieldEx();
        courseSales = new com.geobeck.swing.JFormattedTextFieldEx();
        courseDiscount = new com.geobeck.swing.JFormattedTextFieldEx();
        lblReportStaff = new javax.swing.JLabel();
        reportStaffNo = new javax.swing.JTextField();
        ((PlainDocument)txtStaffCount.getDocument()).setDocumentFilter(
            new CustomFilter(5, CustomFilter.NUMERIC));
        noteScrollPane1 = new javax.swing.JScrollPane();
        comment = new com.geobeck.swing.JTextAreaEx();
        reportStaff = new javax.swing.JComboBox();
        changeCancel = new com.geobeck.swing.JFormattedTextFieldEx();

        setFocusCycleRoot(true);

        jPanel2.setOpaque(false);
        jPanel2.setLayout(null);

        manageDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel2.add(manageDate);
        manageDate.setBounds(70, 30, 88, 23);

        jLabel21.setText("ì˙ït");
        jPanel2.add(jLabel21);
        jLabel21.setBounds(0, 38, 70, 13);

        shop.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        shop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shopActionPerformed(evt);
            }
        });
        jPanel2.add(shop);
        shop.setBounds(70, 0, 270, 19);

        targetLabel.setText("ëŒè€");
        jPanel2.add(targetLabel);
        targetLabel.setBounds(0, 5, 70, 13);

        showButton.setIcon(SystemInfo.getImageIcon("/button/common/show_off.jpg"));
        showButton.setBorderPainted(false);
        showButton.setFocusable(false);
        showButton.setPressedIcon(SystemInfo.getImageIcon("/button/common/show_on.jpg"));
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });
        jPanel2.add(showButton);
        showButton.setBounds(170, 30, 92, 25);

        registButton.setIcon(SystemInfo.getImageIcon("/button/account/tempAccount_off.jpg"));
        registButton.setBorderPainted(false);
        registButton.setFocusable(false);
        registButton.setPressedIcon(SystemInfo.getImageIcon("/button/account/tempAccount_on.jpg"));
        registButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registButtonActionPerformed(evt);
            }
        });
        jPanel2.add(registButton);
        registButton.setBounds(580, 30, 92, 25);

        btnOutput.setIcon(SystemInfo.getImageIcon("/button/print/excel_off.jpg"));
        btnOutput.setBorderPainted(false);
        btnOutput.setFocusable(false);
        btnOutput.setPressedIcon(SystemInfo.getImageIcon("/button/print/excel_on.jpg"));
        btnOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutputActionPerformed(evt);
            }
        });
        jPanel2.add(btnOutput);
        btnOutput.setBounds(690, 0, 92, 25);

        receiptButton.setIcon(SystemInfo.getImageIcon("/button/print/receipt_print_off.jpg"));
        receiptButton.setBorderPainted(false);
        receiptButton.setFocusable(false);
        receiptButton.setPressedIcon(SystemInfo.getImageIcon("/button/print/receipt_print_on.jpg"));
        receiptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptButtonActionPerformed(evt);
            }
        });
        jPanel2.add(receiptButton);
        receiptButton.setBounds(690, 30, 92, 25);

        targetLabel3.setText("ìVãC");
        jPanel2.add(targetLabel3);
        targetLabel3.setBounds(310, 40, 30, 13);

        cboWeather.setMaximumRowCount(30);
        cboWeather.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboWeatherActionPerformed(evt);
            }
        });
        jPanel2.add(cboWeather);
        cboWeather.setBounds(340, 30, 100, 22);

        targetLabel1.setText("ÉXÉ^ÉbÉtêî");
        jPanel2.add(targetLabel1);
        targetLabel1.setBounds(460, 40, 50, 13);

        txtStaffCount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtStaffCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtStaffCountFocusLost(evt);
            }
        });
        txtStaffCount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtStaffCountKeyReleased(evt);
            }
        });
        jPanel2.add(txtStaffCount);
        txtStaffCount.setBounds(510, 30, 40, 22);

        targetLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        targetLabel2.setText("êl");
        jPanel2.add(targetLabel2);
        targetLabel2.setBounds(550, 40, 20, 13);

        imagePanel1.setOpaque(false);
        imagePanel1.setLayout(null);

        accountRegistButton.setIcon(SystemInfo.getImageIcon("/button/account/regist_mail_off.png"));
        accountRegistButton.setBorderPainted(false);
        accountRegistButton.setContentAreaFilled(false);
        accountRegistButton.setFocusable(false);
        accountRegistButton.setPressedIcon(SystemInfo.getImageIcon("/button/account/regist_mail_on.png"));
        accountRegistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registAndMailButtonActionPerformed(evt);
            }
        });
        imagePanel1.add(accountRegistButton);
        accountRegistButton.setBounds(640, 510, 92, 76);

        baseValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        baseValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        baseValue.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        baseValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                baseValueKeyReleased(evt);
            }
        });
        imagePanel1.add(baseValue);
        baseValue.setBounds(440, 298, 93, 30);

        technicValue.setEditable(false);
        technicValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        technicValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        technicValue.setFocusable(false);
        technicValue.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        technicValue.setOpaque(false);
        imagePanel1.add(technicValue);
        technicValue.setBounds(78, 67, 70, 20);

        technicDiscount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        technicDiscount.setEditable(false);
        technicDiscount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        technicDiscount.setFocusable(false);
        technicDiscount.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        technicDiscount.setOpaque(false);
        imagePanel1.add(technicDiscount);
        technicDiscount.setBounds(78, 97, 70, 20);

        technicSales.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        technicSales.setEditable(false);
        technicSales.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        technicSales.setFocusable(false);
        technicSales.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        technicSales.setOpaque(false);
        imagePanel1.add(technicSales);
        technicSales.setBounds(78, 132, 70, 20);

        itemValue.setEditable(false);
        itemValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        itemValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        itemValue.setFocusable(false);
        itemValue.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        itemValue.setOpaque(false);
        imagePanel1.add(itemValue);
        itemValue.setBounds(78, 168, 70, 20);

        totalSales.setEditable(false);
        totalSales.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        totalSales.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalSales.setFocusable(false);
        totalSales.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        totalSales.setOpaque(false);
        imagePanel1.add(totalSales);
        totalSales.setBounds(272, 210, 70, 20);

        tax.setEditable(false);
        tax.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tax.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tax.setAlignmentX(0.0F);
        tax.setFocusable(false);
        tax.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        tax.setOpaque(false);
        imagePanel1.add(tax);
        tax.setBounds(272, 240, 70, 20);

        allDiscount.setEditable(false);
        allDiscount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        allDiscount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        allDiscount.setFocusable(false);
        allDiscount.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        allDiscount.setOpaque(false);
        imagePanel1.add(allDiscount);
        allDiscount.setBounds(272, 180, 70, 20);

        itemSales.setEditable(false);
        itemSales.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        itemSales.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        itemSales.setFocusable(false);
        itemSales.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        itemSales.setOpaque(false);
        imagePanel1.add(itemSales);
        itemSales.setBounds(78, 232, 70, 20);

        itemDiscount.setEditable(false);
        itemDiscount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        itemDiscount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        itemDiscount.setFocusable(false);
        itemDiscount.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        itemDiscount.setOpaque(false);
        imagePanel1.add(itemDiscount);
        itemDiscount.setBounds(78, 198, 70, 20);

        cashCollectOther.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cashCollectOther.setEditable(false);
        cashCollectOther.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cashCollectOther.setFocusable(false);
        cashCollectOther.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        cashCollectOther.setOpaque(false);
        imagePanel1.add(cashCollectOther);
        cashCollectOther.setBounds(453, 205, 80, 20);

        cashCollect.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cashCollect.setEditable(false);
        cashCollect.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cashCollect.setFocusable(false);
        cashCollect.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        cashCollect.setOpaque(false);
        imagePanel1.add(cashCollect);
        cashCollect.setBounds(453, 175, 80, 20);

        billValue.setEditable(false);
        billValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        billValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        billValue.setFocusable(false);
        billValue.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        billValue.setOpaque(false);
        imagePanel1.add(billValue);
        billValue.setBounds(453, 140, 80, 20);

        cardSales.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cardSales.setEditable(false);
        cardSales.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cardSales.setFocusable(false);
        cardSales.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        cardSales.setOpaque(false);
        imagePanel1.add(cardSales);
        cardSales.setBounds(453, 50, 80, 20);

        cashSales.setEditable(false);
        cashSales.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cashSales.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cashSales.setFocusable(false);
        cashSales.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        cashSales.setOpaque(false);
        imagePanel1.add(cashSales);
        cashSales.setBounds(453, 20, 80, 20);

        baseTotal.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 18)); // NOI18N
        baseTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        baseTotal.setText("0");
        baseTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imagePanel1.add(baseTotal);
        baseTotal.setBounds(648, 111, 100, 26);

        cashTotal.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 18)); // NOI18N
        cashTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cashTotal.setText("0");
        cashTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imagePanel1.add(cashTotal);
        cashTotal.setBounds(648, 152, 100, 26);

        cashInOut.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        cashInOut.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cashInOut.setText("0");
        cashInOut.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imagePanel1.add(cashInOut);
        cashInOut.setBounds(453, 240, 80, 20);

        logicalValue.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 18)); // NOI18N
        logicalValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        logicalValue.setText("0");
        logicalValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imagePanel1.add(logicalValue);
        logicalValue.setBounds(648, 211, 100, 19);

        physicalValue.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 18)); // NOI18N
        physicalValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        physicalValue.setText("0");
        physicalValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imagePanel1.add(physicalValue);
        physicalValue.setBounds(648, 258, 100, 26);

        discrepancies.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 24)); // NOI18N
        discrepancies.setForeground(new java.awt.Color(255, 80, 0));
        discrepancies.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        discrepancies.setText("0");
        discrepancies.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imagePanel1.add(discrepancies);
        discrepancies.setBounds(630, 40, 120, 34);

        totalTechItem.setEditable(false);
        totalTechItem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        totalTechItem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalTechItem.setFocusable(false);
        totalTechItem.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        totalTechItem.setOpaque(false);
        imagePanel1.add(totalTechItem);
        totalTechItem.setBounds(272, 150, 70, 20);

        eCashSales.setEditable(false);
        eCashSales.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        eCashSales.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        eCashSales.setFocusable(false);
        eCashSales.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        eCashSales.setOpaque(false);
        imagePanel1.add(eCashSales);
        eCashSales.setBounds(453, 80, 80, 20);

        giftSales.setEditable(false);
        giftSales.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        giftSales.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        giftSales.setFocusable(false);
        giftSales.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        giftSales.setOpaque(false);
        imagePanel1.add(giftSales);
        giftSales.setBounds(453, 110, 80, 20);

        registerMoneyPanel1.setOpaque(false);
        registerMoneyPanel1.setLayout(null);

        registerMoney10000.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoney10000.setModel(new SpinnerNumberModel(0, 0, 9999, 1)
        );
        registerMoneyPanel1.add(registerMoney10000);
        registerMoney10000.setBounds(25, 10, 50, 30);

        registerMoney5000.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoney5000.setModel(new SpinnerNumberModel(0, 0, 9999, 1)
        );
        registerMoneyPanel1.add(registerMoney5000);
        registerMoney5000.setBounds(25, 52, 50, 30);

        registerMoney2000.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoney2000.setModel(new SpinnerNumberModel(0, 0, 9999, 1)
        );
        registerMoneyPanel1.add(registerMoney2000);
        registerMoney2000.setBounds(25, 92, 50, 30);

        registerMoney1000.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoney1000.setModel(new SpinnerNumberModel(0, 0, 9999, 1)
        );
        registerMoneyPanel1.add(registerMoney1000);
        registerMoney1000.setBounds(25, 132, 50, 30);

        registerMoney500.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoney500.setModel(new SpinnerNumberModel(0, 0, 9999, 1)
        );
        registerMoneyPanel1.add(registerMoney500);
        registerMoney500.setBounds(25, 175, 50, 30);

        registerMoney10000Value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        registerMoney10000Value.setEditable(false);
        registerMoney10000Value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        registerMoney10000Value.setFocusable(false);
        registerMoney10000Value.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoneyPanel1.add(registerMoney10000Value);
        registerMoney10000Value.setBounds(100, 10, 90, 30);

        registerMoney5000Value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        registerMoney5000Value.setEditable(false);
        registerMoney5000Value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        registerMoney5000Value.setFocusable(false);
        registerMoney5000Value.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoneyPanel1.add(registerMoney5000Value);
        registerMoney5000Value.setBounds(100, 52, 90, 30);

        registerMoney2000Value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        registerMoney2000Value.setEditable(false);
        registerMoney2000Value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        registerMoney2000Value.setFocusable(false);
        registerMoney2000Value.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoneyPanel1.add(registerMoney2000Value);
        registerMoney2000Value.setBounds(100, 92, 90, 30);

        registerMoney1000Value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        registerMoney1000Value.setEditable(false);
        registerMoney1000Value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        registerMoney1000Value.setFocusable(false);
        registerMoney1000Value.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoneyPanel1.add(registerMoney1000Value);
        registerMoney1000Value.setBounds(100, 132, 90, 30);

        registerMoney500Value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        registerMoney500Value.setEditable(false);
        registerMoney500Value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        registerMoney500Value.setFocusable(false);
        registerMoney500Value.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoneyPanel1.add(registerMoney500Value);
        registerMoney500Value.setBounds(100, 175, 90, 30);

        imagePanel1.add(registerMoneyPanel1);
        registerMoneyPanel1.setBounds(80, 383, 210, 210);

        registerMoneyPanel2.setOpaque(false);
        registerMoneyPanel2.setLayout(null);

        registerMoney100.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoney100.setModel(new SpinnerNumberModel(0, 0, 9999, 1)
        );
        registerMoneyPanel2.add(registerMoney100);
        registerMoney100.setBounds(13, 10, 50, 30);

        registerMoney50.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoney50.setModel(new SpinnerNumberModel(0, 0, 9999, 1)
        );
        registerMoneyPanel2.add(registerMoney50);
        registerMoney50.setBounds(13, 52, 50, 30);

        registerMoney10.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoney10.setModel(new SpinnerNumberModel(0, 0, 9999, 1)
        );
        registerMoneyPanel2.add(registerMoney10);
        registerMoney10.setBounds(13, 92, 50, 30);

        registerMoney5.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoney5.setModel(new SpinnerNumberModel(0, 0, 9999, 1)
        );
        registerMoneyPanel2.add(registerMoney5);
        registerMoney5.setBounds(13, 132, 50, 30);

        registerMoney1.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoney1.setModel(new SpinnerNumberModel(0, 0, 9999, 1)
        );
        registerMoneyPanel2.add(registerMoney1);
        registerMoney1.setBounds(13, 175, 50, 30);

        registerMoney100Value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        registerMoney100Value.setEditable(false);
        registerMoney100Value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        registerMoney100Value.setFocusable(false);
        registerMoney100Value.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoneyPanel2.add(registerMoney100Value);
        registerMoney100Value.setBounds(88, 10, 90, 30);

        registerMoney50Value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        registerMoney50Value.setEditable(false);
        registerMoney50Value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        registerMoney50Value.setFocusable(false);
        registerMoney50Value.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoneyPanel2.add(registerMoney50Value);
        registerMoney50Value.setBounds(88, 52, 90, 30);

        registerMoney10Value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        registerMoney10Value.setEditable(false);
        registerMoney10Value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        registerMoney10Value.setFocusable(false);
        registerMoney10Value.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoneyPanel2.add(registerMoney10Value);
        registerMoney10Value.setBounds(88, 92, 90, 30);

        registerMoney5Value.setEditable(false);
        registerMoney5Value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        registerMoney5Value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        registerMoney5Value.setFocusable(false);
        registerMoney5Value.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoney5Value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerMoney5ValueActionPerformed(evt);
            }
        });
        registerMoneyPanel2.add(registerMoney5Value);
        registerMoney5Value.setBounds(88, 132, 90, 30);

        registerMoney1Value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        registerMoney1Value.setEditable(false);
        registerMoney1Value.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        registerMoney1Value.setFocusable(false);
        registerMoney1Value.setFont(new java.awt.Font("MS UI Gothic", 0, 18)); // NOI18N
        registerMoneyPanel2.add(registerMoney1Value);
        registerMoney1Value.setBounds(88, 175, 90, 30);

        imagePanel1.add(registerMoneyPanel2);
        registerMoneyPanel2.setBounds(360, 383, 190, 210);

        courseAmount.setEditable(false);
        courseAmount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        courseAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        courseAmount.setText("0");
        courseAmount.setFocusable(false);
        courseAmount.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        courseAmount.setOpaque(false);
        imagePanel1.add(courseAmount);
        courseAmount.setBounds(272, 23, 70, 20);

        courseSales.setEditable(false);
        courseSales.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        courseSales.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        courseSales.setText("0");
        courseSales.setFocusable(false);
        courseSales.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        courseSales.setOpaque(false);
        imagePanel1.add(courseSales);
        courseSales.setBounds(272, 87, 70, 20);

        courseDiscount.setEditable(false);
        courseDiscount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        courseDiscount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        courseDiscount.setText("0");
        courseDiscount.setFocusable(false);
        courseDiscount.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        courseDiscount.setOpaque(false);
        imagePanel1.add(courseDiscount);
        courseDiscount.setBounds(272, 55, 70, 20);

        lblReportStaff.setText("ïÒçêé“");
        imagePanel1.add(lblReportStaff);
        lblReportStaff.setBounds(590, 310, 40, 20);

        reportStaffNo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        reportStaffNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                reportStaffNoFocusLost(evt);
            }
        });
        imagePanel1.add(reportStaffNo);
        reportStaffNo.setBounds(640, 310, 40, 22);

        noteScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        comment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        comment.setColumns(20);
        comment.setLineWrap(true);
        comment.setRows(5);
        comment.setTabSize(4);
        comment.setInputKanji(true);
        comment.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                commentPropertyChange(evt);
            }
        });
        comment.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                commentInputMethodTextChanged(evt);
            }
        });
        comment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                commentKeyReleased(evt);
            }
        });
        comment.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                commentVetoableChange(evt);
            }
        });
        noteScrollPane1.setViewportView(comment);

        imagePanel1.add(noteScrollPane1);
        noteScrollPane1.setBounds(580, 340, 210, 160);

        reportStaff.setMaximumRowCount(15);
        reportStaff.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        reportStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportStaffActionPerformed(evt);
            }
        });
        imagePanel1.add(reportStaff);
        reportStaff.setBounds(690, 310, 90, 22);

        changeCancel.setEditable(false);
        changeCancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        changeCancel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        changeCancel.setFocusable(false);
        changeCancel.setFont(new java.awt.Font("HGP∫ﬁºØ∏E", 0, 16)); // NOI18N
        changeCancel.setOpaque(false);
        imagePanel1.add(changeCancel);
        changeCancel.setBounds(272, 120, 70, 20);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, imagePanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(145, 145, 145)
                        .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(3, 3, 3)
                        .add(imagePanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtStaffCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStaffCountFocusLost

        if (CheckUtil.isNumeric(txtStaffCount.getText())) {
            double d = Double.parseDouble(txtStaffCount.getText());
            if (d < 0) {
                txtStaffCount.setText("0.0");
            } else if (d > 999.9) {
                txtStaffCount.setText("999.9");
            } else {
                DecimalFormat f =  new DecimalFormat("###0.0");
                txtStaffCount.setText(f.format(d));
            }
        } else {
            txtStaffCount.setText("0.0");
        }
    }//GEN-LAST:event_txtStaffCountFocusLost

    private void receiptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptButtonActionPerformed

        if (MessageDialog.showYesNoDialog(
                this,
		"ÉåÉWí˜ÇﬂèÓïÒÇÉåÉVÅ[ÉgÇ…àÛç¸ÇµÇ‹Ç∑Ç©ÅH",
		this.getTitle(),
		JOptionPane.INFORMATION_MESSAGE,
		JOptionPane.NO_OPTION) == JOptionPane.YES_OPTION)
        {
            receiptButton.setCursor(null);
            try {

                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                register.printReceipt();

            } finally {
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        }

    }//GEN-LAST:event_receiptButtonActionPerformed

    private void registAndMailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registAndMailButtonActionPerformed
        
        int sendflg = register.getSendEndFlg();

        this.regist();

        if (sendflg == 1) {

            int ret = MessageDialog.showYesNoDialog(
                        this,
                        "çƒìxÉÅÅ[ÉãëóêMÇçsÇ¢Ç‹Ç∑Ç©ÅH",
                        this.getTitle(),
                        JOptionPane.INFORMATION_MESSAGE,
                        JOptionPane.NO_OPTION);
            if (ret == JOptionPane.NO_OPTION) return;
        }
        //nhanvt start edit 20150225 Bug #35221
        try{
        ConnectionWrapper con = SystemInfo.getMailConnection();
        if(con.getConnection() == null){
            MessageDialog.showMessageDialog(this,
                                "ÉÅÅ[ÉãÇÃëóêMÇ…é∏îsÇµÇ‹ÇµÇΩÅB\n" +
                                "SOSIA POSÇçƒãNìÆÇµÇƒÅAçƒìxçsÇ¡ÇƒÇ≠ÇæÇ≥Ç¢ÅB",
                                this.getTitle(),
                                JOptionPane.ERROR_MESSAGE);
            return;
        }
	if(register.sendMail(con)) {

                register.setSendEndFlg(1);

		MessageDialog.showMessageDialog(this,
			MessageUtil.getMessage(200, "ÉÅÅ[ÉãëóêMäÆóπ"),
			this.getTitle(),
			JOptionPane.INFORMATION_MESSAGE);
	} else {
		MessageDialog.showMessageDialog(this,
			MessageUtil.getMessage(1099, ""),
			this.getTitle(),
			JOptionPane.INFORMATION_MESSAGE);
	}

	register.sendMailEndFlgOn(SystemInfo.getConnection(),register.getManageDate());
        }catch(Exception e){
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
            MessageDialog.showMessageDialog(this,
                                "ÉÅÅ[ÉãÇÃëóêMÇ…é∏îsÇµÇ‹ÇµÇΩÅB\n" +
                                "SOSIA POSÇçƒãNìÆÇµÇƒÅAçƒìxçsÇ¡ÇƒÇ≠ÇæÇ≥Ç¢ÅB",
                                this.getTitle(),
                                JOptionPane.ERROR_MESSAGE);
            return;
        }
        //nhanvt end edit 20150225 Bug #35221

    }//GEN-LAST:event_registAndMailButtonActionPerformed

	private void btnOutputActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnOutputActionPerformed
	{//GEN-HEADEREND:event_btnOutputActionPerformed
            this.print();
	}//GEN-LAST:event_btnOutputActionPerformed

	private void registButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_registButtonActionPerformed
	{//GEN-HEADEREND:event_registButtonActionPerformed
            this.regist();
	}//GEN-LAST:event_registButtonActionPerformed

	private void showButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_showButtonActionPerformed
	{//GEN-HEADEREND:event_showButtonActionPerformed
        //IVS_LVTu start add 2017/09/14 #25956 [gb]ÉåÉWí˜ÇﬂâÊñ ÅFì˙ïtïœçXÇÃéûÇ‡ämîFÉÅÉbÉZÅ[ÉWÇèoÇ∑
        if (SystemInfo.flagChangeContents) {
            if (MessageDialog.showYesNoDialog(this,
                            "ÉåÉWí˜Çﬂì‡óeÇ™ï€ë∂Ç≥ÇÍÇƒÇ¢Ç‹ÇπÇÒÇ™ÇÊÇÎÇµÇ¢Ç≈Ç∑Ç©ÅH",
                            "ÉåÉWä«óù",
                            JOptionPane.OK_CANCEL_OPTION) != 0) {
                //IVS_LVTu start add 2017/09/14 #25956 [gb]ÉåÉWí˜ÇﬂâÊñ ÅFì˙ïtïœçXÇÃéûÇ‡ämîFÉÅÉbÉZÅ[ÉWÇèoÇ∑
                manageDate.setDate(historyTime);
                //IVS_LVTu end add 2017/09/14 #25956 [gb]ÉåÉWí˜ÇﬂâÊñ ÅFì˙ïtïœçXÇÃéûÇ‡ämîFÉÅÉbÉZÅ[ÉWÇèoÇ∑
                return;
            }
        }
        //IVS_LVTu end add 2017/09/14 #25956 [gb]ÉåÉWí˜ÇﬂâÊñ ÅFì˙ïtïœçXÇÃéûÇ‡ämîFÉÅÉbÉZÅ[ÉWÇèoÇ∑
            //IVS_LVTu start add 2017/09/14 #25956 [gb]ÉåÉWí˜ÇﬂâÊñ ÅFì˙ïtïœçXÇÃéûÇ‡ämîFÉÅÉbÉZÅ[ÉWÇèoÇ∑
            historyTime = manageDate.getDate();
            //IVS_LVTu end add 2017/09/14 #25956 [gb]ÉåÉWí˜ÇﬂâÊñ ÅFì˙ïtïœçXÇÃéûÇ‡ämîFÉÅÉbÉZÅ[ÉWÇèoÇ∑
            refresh();
            this.load();
	}//GEN-LAST:event_showButtonActionPerformed

    private void shopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shopActionPerformed
        this.changeImageBackground(isCourseFlag());
    }//GEN-LAST:event_shopActionPerformed

    private void reportStaffNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_reportStaffNoFocusLost
        // TODO add your handling code here:
         if (!reportStaffNo.getText().equals("")) {
            this.setReportStaff(reportStaffNo.getText());
            this.getFocusTraversalPolicy().getComponentAfter(this, reportStaffNo);
        } else {
            reportStaff.setSelectedIndex(0);
        }
    }//GEN-LAST:event_reportStaffNoFocusLost
    private void setReportStaff(String staffNo) {
        //IVS_LVTu start edit 2016/06/01 Bug #50763
        //reportStaff.setSelectedIndex(0);

        boolean flag = true;
        for (int i = 1; i < reportStaff.getItemCount(); i++) {

            if (((MstStaff) reportStaff.getItemAt(i)).getStaffNo().equals(staffNo)) {
                reportStaff.setSelectedIndex(i);
                flag = false;
                break;
            }
        }
        if(flag) {
            reportStaff.setSelectedIndex(0);
        }
        //IVS_LVTu end edit 2016/06/01 Bug #50763
    }
    private void registerMoney5ValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerMoney5ValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registerMoney5ValueActionPerformed

    private void reportStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportStaffActionPerformed

       //IVS_LVTu start edit 2015/07/10 Bug #40203
        MstStaff ms = (MstStaff) reportStaff.getSelectedItem();

        if (ms != null) {
            if (ms.getStaffID() != null) {
                reportStaffNo.setText(ms.getStaffNo());
            }

            if (reportStaff.getSelectedIndex() == 0) {
                reportStaffNo.setText("");
            }
            
            //ïÒçêÉXÉ^Év
            try {
                this.register.setStaff(ms);
            }catch(Exception e) {}
            
            //ÉXÉ^ÉvID
            try {
            this.register.setStaffId(ms.getStaffID());
            }catch(Exception e) {}
            //IVS_LVTu start add 2015/06/26 New request #38256
            checkInputChange();
        }
    }//GEN-LAST:event_reportStaffActionPerformed

    private void commentPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_commentPropertyChange
        // TODO add your handling code here:
       
    }//GEN-LAST:event_commentPropertyChange

    private void commentVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_commentVetoableChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_commentVetoableChange

    private void commentInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_commentInputMethodTextChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_commentInputMethodTextChanged

    private void commentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_commentKeyReleased
        // TODO add your handling code here:
         this.register.setComment(comment.getText());
         checkInputChange();
    }//GEN-LAST:event_commentKeyReleased

    private void cboWeatherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboWeatherActionPerformed
        // TODO add your handling code here:
        int weatherID = 0;
        int selectedIndex = cboWeather.getSelectedIndex();
        Iterator itr = mapWeather.entrySet().iterator();
        while (itr.hasNext()) {
            Map.Entry obj = (Map.Entry)itr.next();
            if (((Integer)obj.getValue()).intValue() == selectedIndex) {
                weatherID = (Integer)obj.getKey();
            }
        }
        if(register == null) {
            register = new HairRegister();
        }
        register.setWeatherID(weatherID);
        checkInputChange();
    }//GEN-LAST:event_cboWeatherActionPerformed

    private void txtStaffCountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStaffCountKeyReleased
        // TODO add your handling code here:
        //Luc start add 20160411 #4952
        double staffCount = 0;
        try {
            staffCount = Double.parseDouble(this.txtStaffCount.getText());
        } catch(NumberFormatException e){
        }
        if(register == null) {
            register = new HairRegister();
        }
        register.setStaffCount(staffCount);
        checkInputChange();
        //Luc end add 20160411 #4952
    }//GEN-LAST:event_txtStaffCountKeyReleased

    private void baseValueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_baseValueKeyReleased
        // TODO add your handling code here:
        //Luc start add 20160411 #4952
        if(register == null) {
            register = new HairRegister();
        }
        if(baseValue.getText().equals("")) {
            register.setBaseValue(0);
        } else {
            Integer	temp	=	Integer.parseInt(baseValue.getText());
            register.setBaseValue(temp);
        }
        checkInputChange();
        //Luc end add 20160411 #4952
    }//GEN-LAST:event_baseValueKeyReleased
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accountRegistButton;
    private com.geobeck.swing.JFormattedTextFieldEx allDiscount;
    private javax.swing.JLabel baseTotal;
    private com.geobeck.swing.JFormattedTextFieldEx baseValue;
    private com.geobeck.swing.JFormattedTextFieldEx billValue;
    private javax.swing.JButton btnOutput;
    private com.geobeck.swing.JFormattedTextFieldEx cardSales;
    private com.geobeck.swing.JFormattedTextFieldEx cashCollect;
    private com.geobeck.swing.JFormattedTextFieldEx cashCollectOther;
    private javax.swing.JLabel cashInOut;
    private com.geobeck.swing.JFormattedTextFieldEx cashSales;
    private javax.swing.JLabel cashTotal;
    private javax.swing.JComboBox cboWeather;
    private com.geobeck.swing.JFormattedTextFieldEx changeCancel;
    private com.geobeck.swing.JTextAreaEx comment;
    private com.geobeck.swing.JFormattedTextFieldEx courseAmount;
    private com.geobeck.swing.JFormattedTextFieldEx courseDiscount;
    private com.geobeck.swing.JFormattedTextFieldEx courseSales;
    private javax.swing.JLabel discrepancies;
    private com.geobeck.swing.JFormattedTextFieldEx eCashSales;
    private com.geobeck.swing.JFormattedTextFieldEx giftSales;
    private com.geobeck.swing.ImagePanel imagePanel1;
    private com.geobeck.swing.JFormattedTextFieldEx itemDiscount;
    private com.geobeck.swing.JFormattedTextFieldEx itemSales;
    private com.geobeck.swing.JFormattedTextFieldEx itemValue;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblReportStaff;
    private javax.swing.JLabel logicalValue;
    private jp.co.flatsoft.fscomponent.FSCalenderCombo manageDate;
    private javax.swing.JScrollPane noteScrollPane1;
    private javax.swing.JLabel physicalValue;
    private javax.swing.JButton receiptButton;
    private javax.swing.JButton registButton;
    private javax.swing.JSpinner registerMoney1;
    private javax.swing.JSpinner registerMoney10;
    private javax.swing.JSpinner registerMoney100;
    private javax.swing.JSpinner registerMoney1000;
    private javax.swing.JSpinner registerMoney10000;
    private com.geobeck.swing.JFormattedTextFieldEx registerMoney10000Value;
    private com.geobeck.swing.JFormattedTextFieldEx registerMoney1000Value;
    private com.geobeck.swing.JFormattedTextFieldEx registerMoney100Value;
    private com.geobeck.swing.JFormattedTextFieldEx registerMoney10Value;
    private com.geobeck.swing.JFormattedTextFieldEx registerMoney1Value;
    private javax.swing.JSpinner registerMoney2000;
    private com.geobeck.swing.JFormattedTextFieldEx registerMoney2000Value;
    private javax.swing.JSpinner registerMoney5;
    private javax.swing.JSpinner registerMoney50;
    private javax.swing.JSpinner registerMoney500;
    private javax.swing.JSpinner registerMoney5000;
    private com.geobeck.swing.JFormattedTextFieldEx registerMoney5000Value;
    private com.geobeck.swing.JFormattedTextFieldEx registerMoney500Value;
    private com.geobeck.swing.JFormattedTextFieldEx registerMoney50Value;
    private com.geobeck.swing.JFormattedTextFieldEx registerMoney5Value;
    private javax.swing.JPanel registerMoneyPanel1;
    private javax.swing.JPanel registerMoneyPanel2;
    private javax.swing.JComboBox reportStaff;
    private javax.swing.JTextField reportStaffNo;
    private com.geobeck.sosia.pos.swing.JComboBoxLabel shop;
    private javax.swing.JButton showButton;
    private javax.swing.JLabel targetLabel;
    private javax.swing.JLabel targetLabel1;
    private javax.swing.JLabel targetLabel2;
    private javax.swing.JLabel targetLabel3;
    private com.geobeck.swing.JFormattedTextFieldEx tax;
    private com.geobeck.swing.JFormattedTextFieldEx technicDiscount;
    private com.geobeck.swing.JFormattedTextFieldEx technicSales;
    private com.geobeck.swing.JFormattedTextFieldEx technicValue;
    private com.geobeck.swing.JFormattedTextFieldEx totalSales;
    private com.geobeck.swing.JFormattedTextFieldEx totalTechItem;
    private javax.swing.JTextField txtStaffCount;
    // End of variables declaration//GEN-END:variables

    private HairRegister register  = null;
    //IVS_LVTu start add 2015/05/12 New request #36645
    private HairRegister registerTemp  = new HairRegister();
    //IVS_LVTu end add 2015/05/12 New request #36645
    private boolean     isLoading = false;
    private Map<Integer,Integer> mapWeather = new HashMap<Integer,Integer>();
    //IVS_LVTu start add 2017/09/14 #25956 [gb]ÉåÉWí˜ÇﬂâÊñ ÅFì˙ïtïœçXÇÃéûÇ‡ämîFÉÅÉbÉZÅ[ÉWÇèoÇ∑
    private  java.util.Date historyTime = new java.util.Date();
    //IVS_LVTu end add 2017/09/14 #25956 [gb]ÉåÉWí˜ÇﬂâÊñ ÅFì˙ïtïœçXÇÃéûÇ‡ämîFÉÅÉbÉZÅ[ÉWÇèoÇ∑
//    private	Object		target				=	null;

    private void init() {
        //IVS_TMTrong start add 2015/10/16
        //Boolean isCourseFlag =isCourseFlag();
        //changeImageBackground(isCourseFlag);
        //IVS_TMTrong end add 2015/10/16
        this.addComponentListener();
        SystemInfo.initGroupShopComponents(shop, 2);
        this.setListener();
        manageDate.setDate(SystemInfo.getCurrentShop().getSystemDate().getTime());

        initRegisterMoney(registerMoney1);
        initRegisterMoney(registerMoney5);
        initRegisterMoney(registerMoney10);
        initRegisterMoney(registerMoney50);
        initRegisterMoney(registerMoney100);
        initRegisterMoney(registerMoney500);
        initRegisterMoney(registerMoney1000);
        initRegisterMoney(registerMoney2000);
        initRegisterMoney(registerMoney5000);
        initRegisterMoney(registerMoney10000);
        try {
            SystemInfo.getCurrentShop().load(SystemInfo.getConnection());
        }catch(Exception e){}
        // ìVãCèÓïÒÇí«â¡Ç∑ÇÈ
        cboWeather.removeAllItems();
        cboWeather.addItem(null);
        mapWeather.put(new Integer(0), new Integer(0));
        try {
            String sql = "select * from mst_weather order by weather_id";
            ResultSetWrapper rs = SystemInfo.getConnection().executeQuery(sql);
            Integer index = 1;
            while (rs.next()) {
                cboWeather.addItem(rs.getString("weather_name"));
                mapWeather.put(rs.getInt("weather_id"), index++);
            }
            rs.close();
        } catch(SQLException e) {
            SystemInfo.getLogger().log(Level.SEVERE, e.getLocalizedMessage(), e);
        }
        cboWeather.setSelectedIndex(0);

        register = new HairRegister();
        this.load();
    }

    private void initRegisterMoney(JSpinner spinner) {
        SelectedFieldNumberEditor editer = new SelectedFieldNumberEditor(spinner);
        spinner.setEditor(editer);

        ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField().addFocusListener(
            new FocusAdapter() {
                public void focusGained(FocusEvent e) {
                    if (e.getSource() instanceof JTextComponent) {
                        final JTextComponent textComponent = ((JTextComponent) e.getSource());
                        SwingUtilities.invokeLater(new Runnable() {
                            public void run() {
                                textComponent.selectAll();
                            }
                        });
                    }
                }
                public void focusLost(FocusEvent e) {
                }
            });

        ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField().addKeyListener(SystemInfo.getMoveNextField());
    }

    /**
     * É{É^ÉìÇ…É}ÉEÉXÉJÅ[É\ÉãÇ™èÊÇ¡ÇΩÇ∆Ç´Ç…ÉJÅ[É\ÉãÇïœçXÇ∑ÇÈÉCÉxÉìÉgÇí«â¡Ç∑ÇÈÅB
     */
    private void addMouseCursorChange()
    {
        SystemInfo.addMouseCursorChange(showButton);
        SystemInfo.addMouseCursorChange(registButton);
        SystemInfo.addMouseCursorChange(btnOutput);
        SystemInfo.addMouseCursorChange(receiptButton);
        SystemInfo.addMouseCursorChange(accountRegistButton);
    }

    /**
     * ÉRÉìÉ|Å[ÉlÉìÉgÇÃäeÉäÉXÉiÅ[ÇÉZÉbÉgÇ∑ÇÈÅB
     */
    private void setListener() {
        shop.addKeyListener(SystemInfo.getMoveNextField());
        manageDate.addKeyListener(SystemInfo.getMoveNextField());
        baseValue.addKeyListener(SystemInfo.getMoveNextField());
        baseValue.addFocusListener(SystemInfo.getSelectText());
        txtStaffCount.addKeyListener(SystemInfo.getMoveNextField());
        txtStaffCount.addFocusListener(SystemInfo.getSelectText());
    }

    private MstShop getSelectedShop() {
        if(0 <= shop.getSelectedIndex()) {
            return	(MstShop)shop.getSelectedItem();
        }

        return	new MstShop();
    }

    private GregorianCalendar getSelectedManageDate() {

        if (manageDate.isSelected()) {
            GregorianCalendar temp = new GregorianCalendar();
            temp.setTime(manageDate.getDate());
            return temp;
        }

        return null;
    }

    private void addComponentListener() {

        this.addChangeCashListener(registerMoney1, registerMoney1Value, HairRegister.MONEY_1);
        this.addChangeCashListener(registerMoney5, registerMoney5Value, HairRegister.MONEY_5);
        this.addChangeCashListener(registerMoney10, registerMoney10Value, HairRegister.MONEY_10);
        this.addChangeCashListener(registerMoney50, registerMoney50Value, HairRegister.MONEY_50);
        this.addChangeCashListener(registerMoney100, registerMoney100Value, HairRegister.MONEY_100);
        this.addChangeCashListener(registerMoney500, registerMoney500Value, HairRegister.MONEY_500);
        this.addChangeCashListener(registerMoney1000, registerMoney1000Value, HairRegister.MONEY_1000);
        this.addChangeCashListener(registerMoney2000, registerMoney2000Value, HairRegister.MONEY_2000);
        this.addChangeCashListener(registerMoney5000, registerMoney5000Value, HairRegister.MONEY_5000);
        this.addChangeCashListener(registerMoney10000, registerMoney10000Value, HairRegister.MONEY_10000);

        DocumentListener	dl	=	new DocumentListener() {
            public void changedUpdate(DocumentEvent e){}
            public void insertUpdate(DocumentEvent e) {
                changeBase();
            }
            public void removeUpdate(DocumentEvent e) {
                changeBase();
            }
        };
        baseValue.getDocument().addDocumentListener(dl);
    }

    private void addChangeCashListener(
        final JSpinner ftfNumber,
        final JFormattedTextFieldEx ftfValue,
        final int index)
    {
        ChangeListener dl = new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                changeCash(ftfNumber, ftfValue, index);
            }
        };
        ftfNumber.addChangeListener(dl);
    }

    private void load() {
        
        isLoading = true;
        register.setShop(this.getSelectedShop());
        register.setManageDate(this.getSelectedManageDate());
        register.load();
        this.showData();

        isLoading = false;
        //Luc start edit 20160419 #49521
        //IVS_LVTu start add 2015/05/12 New request #36645
        Vector<Integer> vcTemp = new Vector<Integer>();
        vcTemp = (Vector<Integer>) register.getMoney().clone();
        if (vcTemp != null) {
            registerTemp.setMoney(vcTemp);
        }
        
        //IVS_LVTu end add 2015/05/12 New request #36645
       
        registerTemp.setWeatherID(register.getWeatherID());
        registerTemp.setStaffCount(register.getStaffCount());
        registerTemp.setStaff(register.getStaff());
        registerTemp.setBaseValue(register.getBaseValue());
        registerTemp.setStaffId(register.getStaffId());
        registerTemp.setComment(register.getComment());
         //Luc end edit 20160419 #49521
    }
    public void refresh() {
        register = new HairRegister();
        //IVS_ptthu start add 20160526 Bug #50763
        registerTemp = new HairRegister();
        //IVS_ptthu end add 20160526 Bug #50763
        reportStaff.removeAllItems();
        reportStaff.addItem(new MstStaff());
        SystemInfo.initStaffComponent(reportStaff);
        reportStaff.setSelectedIndex(0);
        comment.setText("");
        //IVS_LVTu start edit 2016/06/01 Bug #50763
        SystemInfo.flagChangeContents = false;
        //IVS_LVTu end edit 2016/06/01 Bug #50763
    }
    private void showData() {

        technicValue.setText(FormatUtil.decimalFormat(register.getTechnicValue()));
        technicDiscount.setText(FormatUtil.decimalFormat(register.getTechnicDiscount()));
        technicSales.setText(FormatUtil.decimalFormat(register.getTechnicSales()));
        itemValue.setText(FormatUtil.decimalFormat(register.getItemValue()));
        itemDiscount.setText(FormatUtil.decimalFormat(register.getItemDiscount()));
        itemSales.setText(FormatUtil.decimalFormat(register.getItemSales()));
        //IVS_TMTrong start edit 2015/10/26 New request #43510
        totalTechItem.setText(FormatUtil.decimalFormat(register.getCourseSales() + register.getTechnicSales() + register.getItemSales()));
         //IVS_TMTrong end edit 2015/10/26 New request #43510
        allDiscount.setText(FormatUtil.decimalFormat(register.getAllDiscount()));
        tax.setText(FormatUtil.decimalFormat(register.getTaxValue()));
        totalSales.setText(FormatUtil.decimalFormat(register.getTotalSales()));
        //IVS_TMTrong start add 2015/10/16 New request #43500
        if(isCourseFlag()){
            courseAmount.setText(FormatUtil.decimalFormat(register.getCourseValue()));
            courseDiscount.setText(FormatUtil.decimalFormat(register.getCourseDiscount()));
            changeCancel.setText(FormatUtil.decimalFormat(register.getChangeCancelCourse()));
            courseSales.setText(FormatUtil.decimalFormat(register.getCourseSales()));
        }
        //IVS_TMTrong end add 2015/10/16 New request #43500

        cashSales.setText(FormatUtil.decimalFormat(register.getCashSales()));
        cardSales.setText(FormatUtil.decimalFormat(register.getCardSales()));
        eCashSales.setText(FormatUtil.decimalFormat(register.getECashSales()));
        giftSales.setText(FormatUtil.decimalFormat(register.getGiftSales()));
        billValue.setText(FormatUtil.decimalFormat(register.getBillValue()));
        cashCollect.setText(FormatUtil.decimalFormat(register.getCashCollect()));
        cashCollectOther.setText(FormatUtil.decimalFormat(register.getCashCollectOther()));

        baseValue.setText(register.getBaseValue().toString());

        registerMoney1.setValue(register.getMoney(HairRegister.MONEY_1));
        registerMoney1Value.setText(FormatUtil.decimalFormat(register.getMoneyValue(HairRegister.MONEY_1)));
        registerMoney5.setValue(register.getMoney(HairRegister.MONEY_5));
        registerMoney5Value.setText(FormatUtil.decimalFormat(register.getMoneyValue(HairRegister.MONEY_5)));
        registerMoney10.setValue(register.getMoney(HairRegister.MONEY_10));
        registerMoney10Value.setText(FormatUtil.decimalFormat(register.getMoneyValue(HairRegister.MONEY_10)));
        registerMoney50.setValue(register.getMoney(HairRegister.MONEY_50));
        registerMoney50Value.setText(FormatUtil.decimalFormat(register.getMoneyValue(HairRegister.MONEY_50)));
        registerMoney100.setValue(register.getMoney(HairRegister.MONEY_100));
        registerMoney100Value.setText(FormatUtil.decimalFormat(register.getMoneyValue(HairRegister.MONEY_100)));
        registerMoney500.setValue(register.getMoney(HairRegister.MONEY_500));
        registerMoney500Value.setText(FormatUtil.decimalFormat(register.getMoneyValue(HairRegister.MONEY_500)));
        registerMoney1000.setValue(register.getMoney(HairRegister.MONEY_1000));
        registerMoney1000Value.setText(FormatUtil.decimalFormat(register.getMoneyValue(HairRegister.MONEY_1000)));
        registerMoney2000.setValue(register.getMoney(HairRegister.MONEY_2000));
        registerMoney2000Value.setText(FormatUtil.decimalFormat(register.getMoneyValue(HairRegister.MONEY_2000)));
        registerMoney5000.setValue(register.getMoney(HairRegister.MONEY_5000));
        registerMoney5000Value.setText(FormatUtil.decimalFormat(register.getMoneyValue(HairRegister.MONEY_5000)));
        registerMoney10000.setValue(register.getMoney(HairRegister.MONEY_10000));
        registerMoney10000Value.setText(FormatUtil.decimalFormat(register.getMoneyValue(HairRegister.MONEY_10000)));

        cboWeather.setSelectedIndex((Integer)mapWeather.get(register.getWeatherID()));
        txtStaffCount.setText(String.valueOf(register.getStaffCount()));
        //Luc end add 20160314 #48789
        for(int i = 0;i<reportStaff.getItemCount();i++) {
            MstStaff staff = (MstStaff)reportStaff.getItemAt(i);
            if(staff.getStaffID()==register.getStaffId()){
               reportStaff.setSelectedIndex(i);
               break;
            }
        }
        comment.setText(register.getComment());
        //Luc start add 20160314 #48789
        //IVS_TMTrong start edit 2015/09/18 Task #42502
        //registButton.setEnabled(register.getSendEndFlg() == 0);
         //IVS_TMTrong end edit 2015/09/18 Task #42502
        this.showResult();
        
    }

    private void changeCash(
        JSpinner ftfNumber,
        JFormattedTextFieldEx ftfValue,
        int index)
    {
        if(!isLoading) {
            SpinnerNumberModel model = (SpinnerNumberModel)ftfNumber.getModel();
            register.setMoney(index, model.getNumber().intValue());
            ftfValue.setText(FormatUtil.decimalFormat(register.getMoneyValue(index)));
            this.showResult();
            //IVS_LVTu start add 2015/05/12 New request #36645
            checkInputChangeCash(model, index);
            //IVS_LVTu end add 2015/05/12 New request #36645
        }
    }
    //IVS_LVTu start add 2015/05/12 New request #36645
    private void checkInputChangeCash(SpinnerNumberModel model, int index) {
        if (model.getNumber().intValue() != registerTemp.getMoney(index)) {
            SystemInfo.flagChangeContents = true;
            return;
        }
    }
    //Luc start add 20160411 #4952
    private void checkInputChange() {
        //ìVãC
        if(!isLoading) {
            if(register == null) return;
            if(register.getWeatherID() != registerTemp.getWeatherID()) {
                 SystemInfo.flagChangeContents = true;
                 return;
            }
            //ÉXÉ^Évêî
            if(register.getStaffCount()!= registerTemp.getStaffCount()) {
                 SystemInfo.flagChangeContents = true;
                 return;
            }
            //ïÒçêé“
            //IVS_ptthu start edit 20160526 Bug #50763
            if(register.getStaffId() == null) {
                register.setStaffId(0);
            }
            if(registerTemp.getStaffId() == null) {
                registerTemp.setStaffId(0);
            }
            if(register.getStaffId() != registerTemp.getStaffId()) {
                 SystemInfo.flagChangeContents = true;
                 return;
            }
            //ÉRÉÅÉìÉg
            if(register.getComment() == null) {
                register.setComment("");
            }
            if(registerTemp.getComment() == null) {
                registerTemp.setComment("");
            }
            if(!register.getComment().equals(registerTemp.getComment())) {
                 SystemInfo.flagChangeContents = true;
                 return;
            }
            //IVS_ptthu end edit 20160526 Bug #50763
            //çáåv
            if(register.getBaseValue()!= registerTemp.getBaseValue()) {
                 SystemInfo.flagChangeContents = true;
                 return;
            }
        }
    }
    //Luc end add 20160411 #4952
    //IVS_LVTu end add 2015/05/12 New request #36645
    private void changeBase() {
        if(!isLoading) {
            if(baseValue.getText().equals("")) {
                register.setBaseValue(0);
            } else {
                Integer	temp	=	Integer.parseInt(baseValue.getText());
                register.setBaseValue(temp);
            }
            this.showResult();
            checkInputChange();
        }
    }

    private void showResult() {
        baseTotal.setText(FormatUtil.decimalFormat(register.getBaseValue()));
        cashTotal.setText(FormatUtil.decimalFormat(register.getCashTotal()));
        logicalValue.setText(FormatUtil.decimalFormat(register.getLogicalValue()));
        physicalValue.setText(FormatUtil.decimalFormat(register.getPhysicalValue()));
        discrepancies.setText(FormatUtil.decimalFormat(register.getDiscrepancies()));
        cashInOut.setText(FormatUtil.decimalFormat(register.getCashInOut()));
    }

    private void regist() {

        int weatherID = 0;
        int selectedIndex = cboWeather.getSelectedIndex();
        Iterator itr = mapWeather.entrySet().iterator();
        while (itr.hasNext()) {
            Map.Entry obj = (Map.Entry)itr.next();
            if (((Integer)obj.getValue()).intValue() == selectedIndex) {
                weatherID = (Integer)obj.getKey();
            }
        }
        register.setWeatherID(weatherID);

        double staffCount = 0;
        try {
            staffCount = Double.parseDouble(this.txtStaffCount.getText());
        } catch(NumberFormatException e){
        }
        register.setStaffCount(staffCount);
        register.setStaffId(((MstStaff)reportStaff.getSelectedItem()).getStaffID());
        register.setStaff(((MstStaff)reportStaff.getSelectedItem()));
        register.setComment(comment.getText());
        if(register.regist()) {
            //IVS_LVTu start edit 2016/06/01 Bug #50763
            SystemInfo.flagChangeContents = false;
            registerTemp.setWeatherID(register.getWeatherID());
            registerTemp.setStaffCount(register.getStaffCount());
            registerTemp.setStaff(register.getStaff());
            registerTemp.setBaseValue(register.getBaseValue());
            registerTemp.setStaffId(register.getStaffId());
            registerTemp.setComment(register.getComment());
            //IVS_LVTu start add 2017/09/14 #25956 [gb]ÉåÉWí˜ÇﬂâÊñ ÅFì˙ïtïœçXÇÃéûÇ‡ämîFÉÅÉbÉZÅ[ÉWÇèoÇ∑
            historyTime = register.getManageDate().getTime();
            //IVS_LVTu end add 2017/09/14 #25956 [gb]ÉåÉWí˜ÇﬂâÊñ ÅFì˙ïtïœçXÇÃéûÇ‡ämîFÉÅÉbÉZÅ[ÉWÇèoÇ∑
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(MessageUtil.INFO_REGIST_SUCCESS, "ÉåÉWÉfÅ[É^"),
                    this.getTitle(),
                    JOptionPane.INFORMATION_MESSAGE);
            //IVS_LVTu end edit 2016/06/01 Bug #50763
        } else {
            MessageDialog.showMessageDialog(this,
                    MessageUtil.getMessage(MessageUtil.ERROR_REGIST_FAILED, "ÉåÉWÉfÅ[É^"),
                    this.getTitle(),
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void print() {
        register.print();
    }

    private class SelectedFieldNumberEditor extends JSpinner.NumberEditor {

        public SelectedFieldNumberEditor(JSpinner spinner) {
            super(spinner);
        }

        public void propertyChange(java.beans.PropertyChangeEvent e) {
            super.propertyChange(e);

            final Object source = e.getSource();

            if (source instanceof JFormattedTextField) {
                if (SwingUtilities.isEventDispatchThread()) {
                    selectAll(source);
                }
            }
        }

        private void selectAll(Object source) {
            JFormattedTextField field = (JFormattedTextField) source;
            field.selectAll();
        }
    }
    //IVS_TMTrong start add 2015/10/16 New request #43500
    private Boolean isCourseFlag(){
        boolean courseFlg = false;
        if (((MstShop)shop.getSelectedItem()) != null && ((MstShop)shop.getSelectedItem()).getCourseFlag() == 1) {
             courseFlg = true;
        }
        return courseFlg;
    }
    private void changeImageBackground(Boolean isCourseFlag){
        if(isCourseFlag){
            imagePanel1.setImage(new javax.swing.ImageIcon(getClass().getResource("/images/" + SystemInfo.getSkinPackage() + "/button/account/reji_background_course_flag_equal_one.jpg")));
            this.courseAmount.setLocation(272, 22);
            this.courseDiscount.setLocation(272, 48);
            this.changeCancel.setLocation(272, 72);
            this.courseSales.setLocation(272, 105);
            
            this.totalTechItem.setLocation(272, 138);
            this.allDiscount.setLocation(272, 170);
            this.totalSales.setLocation(272, 205);
            this.tax.setLocation(272, 238);
            
            this.courseAmount.setVisible(true);
            this.courseDiscount.setVisible(true);
            this.courseSales.setVisible(true); 
            
        }else{
            imagePanel1.setImage(new javax.swing.ImageIcon(getClass().getResource("/images/" + SystemInfo.getSkinPackage() + "/button/account/reji_background_course_flag_equal_zero.jpg")));
            this.totalTechItem.setLocation(272, 63);
            this.allDiscount.setLocation(272, 94);
            this.totalSales.setLocation(272, 164);
            this.tax.setLocation(272, 198);
            
            this.courseAmount.setVisible(false);
            this.courseDiscount.setVisible(false);
            this.courseSales.setVisible(false); 
            this.changeCancel.setVisible(false);
        }
        reportStaff.removeAllItems();
        reportStaff.addItem(new MstStaff());
        SystemInfo.initStaffComponent(reportStaff);
        reportStaff.setSelectedIndex(0);
        this.repaint();
        this.imagePanel1.repaint();
    }
    //IVS_TMTrong end add 2015/10/16 New request #43500
}
